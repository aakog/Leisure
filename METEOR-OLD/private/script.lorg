* Images
#+NAME: il
#+BEGIN_SRC yaml
type: imageList
images:
- i1
- i2
#+END_SRC
#+NAME: i1
#+BEGIN_SRC yaml
type: image
src: tinyconcepts.png
left: 150
top: 30
#+END_SRC
#+NAME: i2
#+BEGIN_SRC yaml
type: image
src: tinyconcepts.png
left: 250
top: 40
#+END_SRC

[[leisure:il]]
* Image Views
:PROPERTIES:
:note: sidebar
:hidden: true
:END:
#+BEGIN_SRC html :defview image
<div style='display: inline-block'>
  <table>
    <tr>
      <td><img src={{src}}></td>
      <td><h1>DRAG ME</h1>({{left}},{{top}})</td>
    </tr>
  </table>
</div>
#+END_SRC

#+BEGIN_SRC html :defview imageList
<div style='border: solid red 1px; display: inline-block'>
  <div name='container' style='display: inline-block; width: 800px; height: 800px; position: relative'>
    {{#each images}}
    {{{view this}}}
    {{/each}}
  </div>
</div>
#+END_SRC

* Records
[[leisure:a]] [[leisure:b]] [[leisure:c]] [[leisure:a]]

#+NAME: a
#+BEGIN_SRC yaml
type: gump
name: fred
number: 35
#+END_SRC
#+NAME: b
#+BEGIN_SRC yaml
type: gump
name: george
number: 72
#+END_SRC
#+NAME: c
#+BEGIN_SRC yaml
type: gump
name: mary
number: 89
#+END_SRC
* Views
:PROPERTIES:
:note: sidebar
:hidden: true
:END:
#+BEGIN_SRC html :defview gump
<div style='display: inline-block; border: solid blue 2px; padding: 5px'>
  Name: <input data-value='name'><br>
  Number: {{number}}
</div>
#+END_SRC
* Support code
:PROPERTIES:
:hidden: true
:END:
We can indicate movement, here, with another view that's a line connected
to the original center that disappears on mouse up.  Each player could get
their own view.

#+BEGIN_SRC coffee :control image
@initializeView = (view)->
  id = view.getAttribute 'data-view-block'
  data = Leisure.getBlock(id).yaml
  App.drag view,
    init: ->
      $(view)
        .css 'zIndex', '100'
        .css 'top', "#{data.top}px"
        .css 'left', "#{data.left}px"
    constrain: $(view).closest "[name='container']"
    update: (image, id, data)->
      data.left = image.offsetLeft
      data.top = image.offsetTop
      Leisure.setData id, data
#+END_SRC

View dragging -- jQueryUI's dragging seems to have trouble with shadow

#+BEGIN_SRC coffee :results def
dragUpdate = Lodash.throttle ((view, func)->
  id = view.getAttribute 'data-view-block'
  data = Leisure.getBlock(id).yaml
  func view, id, data
  ), 200, leading: true, trailing: true

App.drag = (el, options)->
  if !el.isDraggable
    pos = $(el).position()
    offset = $(el).offset()
    el.isDraggable = true
    el.style.position = 'absolute'
    el.style.zIndex = '100'
    options.init()
    $(el).draggable
      containment: options?.constrain
      start: -> el.isDragging = true
      drag: (event, ui)-> if options?.update? then dragUpdate el, options.update; true
      stop: ->
       if options?.update? then dragUpdate el, options.update
       setTimeout (-> el.isDragging = false), 300
       true
  else if !el.isDragging then options.init()
#+END_SRC
