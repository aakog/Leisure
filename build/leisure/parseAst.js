define([], function(){
  return L_runMonads([
    function(){return resolve(L_newDefine)("makeNode", 5, "makeNode svg width height rootX rootY = \\f . f svg width height rootX rootY", lazy(setDataType((function(L_svg, L_width, L_height, L_rootX, L_rootY) {
    return arguments.callee.length != arguments.length
        ? Leisure_primCall(arguments.callee, 0, arguments)
        : setType(function(L_f){var old = L$pushThunk((typeof stack != 'undefined' ? stack : L$thunkStack || L$emptyThunkStack), 'makeNode:37:41'); var ret = resolve(L_f)(L_svg)(L_width)(L_height)(L_rootX)(L_rootY); L$setThunkStack(old); return ret;}, 'makeNode');
}), 'makeNode')))},
    function(){return resolve(L_newDefine)("nodeSvg", 1, "nodeSvg st = st \\svg width height rootX rootY . svg", lazy(function(L_st){var old = L$pushThunk((typeof stack != 'undefined' ? stack : L$thunkStack || L$emptyThunkStack), 'nodeSvg:39:8'); var ret = resolve(L_st)(lazy(function(L_svg){var old = L$pushThunk((typeof stack != 'undefined' ? stack : L$thunkStack || L$emptyThunkStack), 'nodeSvg:39:17'); var ret = function(L_width){var old = L$pushThunk((typeof stack != 'undefined' ? stack : L$thunkStack || L$emptyThunkStack), 'nodeSvg:39:21'); var ret = function(L_height){var old = L$pushThunk((typeof stack != 'undefined' ? stack : L$thunkStack || L$emptyThunkStack), 'nodeSvg:39:27'); var ret = function(L_rootX){var old = L$pushThunk((typeof stack != 'undefined' ? stack : L$thunkStack || L$emptyThunkStack), 'nodeSvg:39:34'); var ret = function(L_rootY){var old = L$pushThunk((typeof stack != 'undefined' ? stack : L$thunkStack || L$emptyThunkStack), 'nodeSvg:39:40'); var ret = resolve(L_svg); L$setThunkStack(old); return ret;}; L$setThunkStack(old); return ret;}; L$setThunkStack(old); return ret;}; L$setThunkStack(old); return ret;}; L$setThunkStack(old); return ret;})); L$setThunkStack(old); return ret;}))},
    function(){return resolve(L_newDefine)("nodeWidth", 1, "nodeWidth st = st \\svg width height rootX rootY . width", lazy(function(L_st){var old = L$pushThunk((typeof stack != 'undefined' ? stack : L$thunkStack || L$emptyThunkStack), 'nodeWidth:40:10'); var ret = resolve(L_st)(lazy(function(L_svg){var old = L$pushThunk((typeof stack != 'undefined' ? stack : L$thunkStack || L$emptyThunkStack), 'nodeWidth:40:19'); var ret = function(L_width){var old = L$pushThunk((typeof stack != 'undefined' ? stack : L$thunkStack || L$emptyThunkStack), 'nodeWidth:40:23'); var ret = function(L_height){var old = L$pushThunk((typeof stack != 'undefined' ? stack : L$thunkStack || L$emptyThunkStack), 'nodeWidth:40:29'); var ret = function(L_rootX){var old = L$pushThunk((typeof stack != 'undefined' ? stack : L$thunkStack || L$emptyThunkStack), 'nodeWidth:40:36'); var ret = function(L_rootY){var old = L$pushThunk((typeof stack != 'undefined' ? stack : L$thunkStack || L$emptyThunkStack), 'nodeWidth:40:42'); var ret = resolve(L_width); L$setThunkStack(old); return ret;}; L$setThunkStack(old); return ret;}; L$setThunkStack(old); return ret;}; L$setThunkStack(old); return ret;}; L$setThunkStack(old); return ret;})); L$setThunkStack(old); return ret;}))},
    function(){return resolve(L_newDefine)("nodeHeight", 1, "nodeHeight st = st \\svg width height rootX rootY . height", lazy(function(L_st){var old = L$pushThunk((typeof stack != 'undefined' ? stack : L$thunkStack || L$emptyThunkStack), 'nodeHeight:41:11'); var ret = resolve(L_st)(lazy(function(L_svg){var old = L$pushThunk((typeof stack != 'undefined' ? stack : L$thunkStack || L$emptyThunkStack), 'nodeHeight:41:20'); var ret = function(L_width){var old = L$pushThunk((typeof stack != 'undefined' ? stack : L$thunkStack || L$emptyThunkStack), 'nodeHeight:41:24'); var ret = function(L_height){var old = L$pushThunk((typeof stack != 'undefined' ? stack : L$thunkStack || L$emptyThunkStack), 'nodeHeight:41:30'); var ret = function(L_rootX){var old = L$pushThunk((typeof stack != 'undefined' ? stack : L$thunkStack || L$emptyThunkStack), 'nodeHeight:41:37'); var ret = function(L_rootY){var old = L$pushThunk((typeof stack != 'undefined' ? stack : L$thunkStack || L$emptyThunkStack), 'nodeHeight:41:43'); var ret = resolve(L_height); L$setThunkStack(old); return ret;}; L$setThunkStack(old); return ret;}; L$setThunkStack(old); return ret;}; L$setThunkStack(old); return ret;}; L$setThunkStack(old); return ret;})); L$setThunkStack(old); return ret;}))},
    function(){return resolve(L_newDefine)("nodeRootX", 1, "nodeRootX st = st \\svg width height rootX rootY . rootX", lazy(function(L_st){var old = L$pushThunk((typeof stack != 'undefined' ? stack : L$thunkStack || L$emptyThunkStack), 'nodeRootX:42:10'); var ret = resolve(L_st)(lazy(function(L_svg){var old = L$pushThunk((typeof stack != 'undefined' ? stack : L$thunkStack || L$emptyThunkStack), 'nodeRootX:42:19'); var ret = function(L_width){var old = L$pushThunk((typeof stack != 'undefined' ? stack : L$thunkStack || L$emptyThunkStack), 'nodeRootX:42:23'); var ret = function(L_height){var old = L$pushThunk((typeof stack != 'undefined' ? stack : L$thunkStack || L$emptyThunkStack), 'nodeRootX:42:29'); var ret = function(L_rootX){var old = L$pushThunk((typeof stack != 'undefined' ? stack : L$thunkStack || L$emptyThunkStack), 'nodeRootX:42:36'); var ret = function(L_rootY){var old = L$pushThunk((typeof stack != 'undefined' ? stack : L$thunkStack || L$emptyThunkStack), 'nodeRootX:42:42'); var ret = resolve(L_rootX); L$setThunkStack(old); return ret;}; L$setThunkStack(old); return ret;}; L$setThunkStack(old); return ret;}; L$setThunkStack(old); return ret;}; L$setThunkStack(old); return ret;})); L$setThunkStack(old); return ret;}))},
    function(){return resolve(L_newDefine)("nodeRootY", 1, "nodeRootY st = st \\svg width height rootX rootY . rootY", lazy(function(L_st){var old = L$pushThunk((typeof stack != 'undefined' ? stack : L$thunkStack || L$emptyThunkStack), 'nodeRootY:43:10'); var ret = resolve(L_st)(lazy(function(L_svg){var old = L$pushThunk((typeof stack != 'undefined' ? stack : L$thunkStack || L$emptyThunkStack), 'nodeRootY:43:19'); var ret = function(L_width){var old = L$pushThunk((typeof stack != 'undefined' ? stack : L$thunkStack || L$emptyThunkStack), 'nodeRootY:43:23'); var ret = function(L_height){var old = L$pushThunk((typeof stack != 'undefined' ? stack : L$thunkStack || L$emptyThunkStack), 'nodeRootY:43:29'); var ret = function(L_rootX){var old = L$pushThunk((typeof stack != 'undefined' ? stack : L$thunkStack || L$emptyThunkStack), 'nodeRootY:43:36'); var ret = function(L_rootY){var old = L$pushThunk((typeof stack != 'undefined' ? stack : L$thunkStack || L$emptyThunkStack), 'nodeRootY:43:42'); var ret = resolve(L_rootY); L$setThunkStack(old); return ret;}; L$setThunkStack(old); return ret;}; L$setThunkStack(old); return ret;}; L$setThunkStack(old); return ret;}; L$setThunkStack(old); return ret;})); L$setThunkStack(old); return ret;}))},
    function(){return resolve(L_newDefine)("space", 0, "space = 10", 10)},
    function(){return resolve(L_newDefine)("border", 0, "border = 5", 5)},
    function(){return resolve(L_newDefine)("nodeTranslate", 3, "nodeTranslate st x y = st \\svg width height rootX rootY . makeNode\n  translate svg x y\n  width\n  height\n  rootX + x\n  rootY + y", lazy((function(L_st, L_x, L_y) {
    return arguments.callee.length != arguments.length
        ? Leisure_primCall(arguments.callee, 0, arguments)
        : resolve(L_st)(lazy(function(L_svg){var old = L$pushThunk((typeof stack != 'undefined' ? stack : L$thunkStack || L$emptyThunkStack), 'nodeTranslate:48:27'); var ret = function(L_width){var old = L$pushThunk((typeof stack != 'undefined' ? stack : L$thunkStack || L$emptyThunkStack), 'nodeTranslate:48:31'); var ret = function(L_height){var old = L$pushThunk((typeof stack != 'undefined' ? stack : L$thunkStack || L$emptyThunkStack), 'nodeTranslate:48:37'); var ret = function(L_rootX){var old = L$pushThunk((typeof stack != 'undefined' ? stack : L$thunkStack || L$emptyThunkStack), 'nodeTranslate:48:44'); var ret = function(L_rootY){var old = L$pushThunk((typeof stack != 'undefined' ? stack : L$thunkStack || L$emptyThunkStack), 'nodeTranslate:48:50'); var ret = resolve(L_makeNode)((function(){var stack = L$thunkStack; var f = function(){var old = L$pushThunk((typeof stack != 'undefined' ? stack : L$thunkStack || L$emptyThunkStack), 'nodeTranslate:49:2'); var ret = resolve(L_translate)(L_svg, L_x, L_y); L$setThunkStack(old); if (f.memo) stack = null; return ret;}; return f;})(), L_width, L_height, (function(){var stack = L$thunkStack; var f = function(){var old = L$pushThunk((typeof stack != 'undefined' ? stack : L$thunkStack || L$emptyThunkStack), 'nodeTranslate:52:2'); var ret = resolve(L_$o)(L_rootX, L_x); L$setThunkStack(old); if (f.memo) stack = null; return ret;}; return f;})(), (function(){var stack = L$thunkStack; var f = function(){var old = L$pushThunk((typeof stack != 'undefined' ? stack : L$thunkStack || L$emptyThunkStack), 'nodeTranslate:53:2'); var ret = resolve(L_$o)(L_rootY, L_y); L$setThunkStack(old); if (f.memo) stack = null; return ret;}; return f;})()); L$setThunkStack(old); return ret;}; L$setThunkStack(old); return ret;}; L$setThunkStack(old); return ret;}; L$setThunkStack(old); return ret;}; L$setThunkStack(old); return ret;}));
})))},
    function(){return resolve(L_newDefine)("nodeLine", 2, "nodeLine n1 n2 = n1 \\s1 w1 h1 x1 y1 . n2 \\s2 w2 h2 x2 y2 .\n  line [['x1'|x1] ['y1'|y1] ['x2'|x2] ['y2'|y2] ['stroke-width'|3] | defaultLineMap]", lazy((function(L_n1, L_n2) {
    return arguments.callee.length != arguments.length
        ? Leisure_primCall(arguments.callee, 0, arguments)
        : resolve(L_n1)(lazy(function(L_s1){var old = L$pushThunk((typeof stack != 'undefined' ? stack : L$thunkStack || L$emptyThunkStack), 'nodeLine:55:21'); var ret = function(L_w1){var old = L$pushThunk((typeof stack != 'undefined' ? stack : L$thunkStack || L$emptyThunkStack), 'nodeLine:55:24'); var ret = function(L_h1){var old = L$pushThunk((typeof stack != 'undefined' ? stack : L$thunkStack || L$emptyThunkStack), 'nodeLine:55:27'); var ret = function(L_x1){var old = L$pushThunk((typeof stack != 'undefined' ? stack : L$thunkStack || L$emptyThunkStack), 'nodeLine:55:30'); var ret = function(L_y1){var old = L$pushThunk((typeof stack != 'undefined' ? stack : L$thunkStack || L$emptyThunkStack), 'nodeLine:55:33'); var ret = resolve(L_n2)(lazy(function(L_s2){var old = L$pushThunk((typeof stack != 'undefined' ? stack : L$thunkStack || L$emptyThunkStack), 'nodeLine:55:42'); var ret = function(L_w2){var old = L$pushThunk((typeof stack != 'undefined' ? stack : L$thunkStack || L$emptyThunkStack), 'nodeLine:55:45'); var ret = function(L_h2){var old = L$pushThunk((typeof stack != 'undefined' ? stack : L$thunkStack || L$emptyThunkStack), 'nodeLine:55:48'); var ret = function(L_x2){var old = L$pushThunk((typeof stack != 'undefined' ? stack : L$thunkStack || L$emptyThunkStack), 'nodeLine:55:51'); var ret = function(L_y2){var old = L$pushThunk((typeof stack != 'undefined' ? stack : L$thunkStack || L$emptyThunkStack), 'nodeLine:55:54'); var ret = resolve(L_line)((function(){var stack = L$thunkStack; var f = function(){var old = L$pushThunk((typeof stack != 'undefined' ? stack : L$thunkStack || L$emptyThunkStack), 'nodeLine:56:9'); var ret = resolve(L_cons)((function(){var stack = L$thunkStack; var f = function(){var old = L$pushThunk((typeof stack != 'undefined' ? stack : L$thunkStack || L$emptyThunkStack), 'nodeLine:56:9'); var ret = resolve(L_cons)("x1", L_x1); L$setThunkStack(old); if (f.memo) stack = null; return ret;}; return f;})(), (function(){var stack = L$thunkStack; var f = function(){var old = L$pushThunk((typeof stack != 'undefined' ? stack : L$thunkStack || L$emptyThunkStack), 'nodeLine:56:19'); var ret = resolve(L_cons)((function(){var stack = L$thunkStack; var f = function(){var old = L$pushThunk((typeof stack != 'undefined' ? stack : L$thunkStack || L$emptyThunkStack), 'nodeLine:56:19'); var ret = resolve(L_cons)("y1", L_y1); L$setThunkStack(old); if (f.memo) stack = null; return ret;}; return f;})(), (function(){var stack = L$thunkStack; var f = function(){var old = L$pushThunk((typeof stack != 'undefined' ? stack : L$thunkStack || L$emptyThunkStack), 'nodeLine:56:29'); var ret = resolve(L_cons)((function(){var stack = L$thunkStack; var f = function(){var old = L$pushThunk((typeof stack != 'undefined' ? stack : L$thunkStack || L$emptyThunkStack), 'nodeLine:56:29'); var ret = resolve(L_cons)("x2", L_x2); L$setThunkStack(old); if (f.memo) stack = null; return ret;}; return f;})(), (function(){var stack = L$thunkStack; var f = function(){var old = L$pushThunk((typeof stack != 'undefined' ? stack : L$thunkStack || L$emptyThunkStack), 'nodeLine:56:39'); var ret = resolve(L_cons)((function(){var stack = L$thunkStack; var f = function(){var old = L$pushThunk((typeof stack != 'undefined' ? stack : L$thunkStack || L$emptyThunkStack), 'nodeLine:56:39'); var ret = resolve(L_cons)("y2", L_y2); L$setThunkStack(old); if (f.memo) stack = null; return ret;}; return f;})(), (function(){var stack = L$thunkStack; var f = function(){var old = L$pushThunk((typeof stack != 'undefined' ? stack : L$thunkStack || L$emptyThunkStack), 'nodeLine:56:49'); var ret = resolve(L_cons)((function(){var stack = L$thunkStack; var f = function(){var old = L$pushThunk((typeof stack != 'undefined' ? stack : L$thunkStack || L$emptyThunkStack), 'nodeLine:56:49'); var ret = resolve(L_cons)("stroke-width", 3); L$setThunkStack(old); if (f.memo) stack = null; return ret;}; return f;})(), L_defaultLineMap); L$setThunkStack(old); if (f.memo) stack = null; return ret;}; return f;})()); L$setThunkStack(old); if (f.memo) stack = null; return ret;}; return f;})()); L$setThunkStack(old); if (f.memo) stack = null; return ret;}; return f;})()); L$setThunkStack(old); if (f.memo) stack = null; return ret;}; return f;})()); L$setThunkStack(old); if (f.memo) stack = null; return ret;}; return f;})()); L$setThunkStack(old); return ret;}; L$setThunkStack(old); return ret;}; L$setThunkStack(old); return ret;}; L$setThunkStack(old); return ret;}; L$setThunkStack(old); return ret;})); L$setThunkStack(old); return ret;}; L$setThunkStack(old); return ret;}; L$setThunkStack(old); return ret;}; L$setThunkStack(old); return ret;}; L$setThunkStack(old); return ret;}));
})))},
    function(){return resolve(L_newDefine)("rangeContainsRange", 4, "rangeContainsRange start end innerStart innerEnd = and (lte start innerStart) (lte innerEnd end)", lazy((function(L_start, L_end, L_innerStart, L_innerEnd) {
    return arguments.callee.length != arguments.length
        ? Leisure_primCall(arguments.callee, 0, arguments)
        : resolve(L_and)((function(){var stack = L$thunkStack; var f = function(){var old = L$pushThunk((typeof stack != 'undefined' ? stack : L$thunkStack || L$emptyThunkStack), 'rangeContainsRange:58:56'); var ret = resolve(L_lte)(L_start)(L_innerStart); L$setThunkStack(old); if (f.memo) stack = null; return ret;}; return f;})(), (function(){var stack = L$thunkStack; var f = function(){var old = L$pushThunk((typeof stack != 'undefined' ? stack : L$thunkStack || L$emptyThunkStack), 'rangeContainsRange:58:79'); var ret = resolve(L_lte)(L_innerEnd)(L_end); L$setThunkStack(old); if (f.memo) stack = null; return ret;}; return f;})());
})))},
    function(){return resolve(L_newDefine)("highlight", 1, "highlight map = do\n  c = assocGetWithDefault 'fill' map nil\n  eq c '#fcc'\n    assocSet 'fill' 'red' map\n    eq c '#cfc'\n      assocSet 'fill' 'green' map\n      eq c '#ccf'\n        assocSet 'fill' 'blue' map\n        map", lazy(function(L_map){var old = L$pushThunk((typeof stack != 'undefined' ? stack : L$thunkStack || L$emptyThunkStack), 'highlight:60:10'); var ret = (function(){
  var L_c_0;
  L_c_0 = (function(){var stack = L$thunkStack; var f = function(){var old = L$pushThunk((typeof stack != 'undefined' ? stack : L$thunkStack || L$emptyThunkStack), 'highlight:61:6'); var ret = resolve(L_assocGetWithDefault)("fill", L_map, L_nil); L$setThunkStack(old); if (f.memo) stack = null; return ret;}; return f;})();

  return resolve(L_eq)(L_c_0, "#fcc")((function(){var stack = L$thunkStack; var f = function(){var old = L$pushThunk((typeof stack != 'undefined' ? stack : L$thunkStack || L$emptyThunkStack), 'highlight:63:4'); var ret = resolve(L_assocSet)("fill")("red")(L_map); L$setThunkStack(old); if (f.memo) stack = null; return ret;}; return f;})())((function(){var stack = L$thunkStack; var f = function(){var old = L$pushThunk((typeof stack != 'undefined' ? stack : L$thunkStack || L$emptyThunkStack), 'highlight:64:4'); var ret = resolve(L_eq)(L_c_0, "#cfc")((function(){var stack = L$thunkStack; var f = function(){var old = L$pushThunk((typeof stack != 'undefined' ? stack : L$thunkStack || L$emptyThunkStack), 'highlight:65:6'); var ret = resolve(L_assocSet)("fill")("green")(L_map); L$setThunkStack(old); if (f.memo) stack = null; return ret;}; return f;})())((function(){var stack = L$thunkStack; var f = function(){var old = L$pushThunk((typeof stack != 'undefined' ? stack : L$thunkStack || L$emptyThunkStack), 'highlight:66:6'); var ret = resolve(L_eq)(L_c_0, "#ccf")((function(){var stack = L$thunkStack; var f = function(){var old = L$pushThunk((typeof stack != 'undefined' ? stack : L$thunkStack || L$emptyThunkStack), 'highlight:67:8'); var ret = resolve(L_assocSet)("fill")("blue")(L_map); L$setThunkStack(old); if (f.memo) stack = null; return ret;}; return f;})())(L_map); L$setThunkStack(old); if (f.memo) stack = null; return ret;}; return f;})()); L$setThunkStack(old); if (f.memo) stack = null; return ret;}; return f;})())})(); L$setThunkStack(old); return ret;}))},
    function(){return resolve(L_newDefine)("treeFor", 1, "treeFor ast = treeForWith ast \\ast map . map", lazy(function(L_ast){var old = L$pushThunk((typeof stack != 'undefined' ? stack : L$thunkStack || L$emptyThunkStack), 'treeFor:70:8'); var ret = resolve(L_treeForWith)(L_ast, lazy(function(L_ast_0){var old = L$pushThunk((typeof stack != 'undefined' ? stack : L$thunkStack || L$emptyThunkStack), 'treeFor:70:31'); var ret = function(L_map){var old = L$pushThunk((typeof stack != 'undefined' ? stack : L$thunkStack || L$emptyThunkStack), 'treeFor:70:35'); var ret = resolve(L_map); L$setThunkStack(old); return ret;}; L$setThunkStack(old); return ret;})); L$setThunkStack(old); return ret;}))},
    function(){return resolve(L_newDefine)("treeForWith", 2, "treeForWith ast mapFunc = nodeSvg (nodeFor ast mapFunc)", lazy((function(L_ast, L_mapFunc) {
    return arguments.callee.length != arguments.length
        ? Leisure_primCall(arguments.callee, 0, arguments)
        : resolve(L_nodeSvg)((function(){var stack = L$thunkStack; var f = function(){var old = L$pushThunk((typeof stack != 'undefined' ? stack : L$thunkStack || L$emptyThunkStack), 'treeForWith:72:35'); var ret = resolve(L_nodeFor)(L_ast, L_mapFunc); L$setThunkStack(old); if (f.memo) stack = null; return ret;}; return f;})());
})))},
    function(){return resolve(L_newDefine)("wrappedTreeFor", 1, "wrappedTreeFor ast = do\n  content = nodeFor ast \\ast map . map\n  svg (nodeSvg content) {'width':(border + (nodeWidth content)) 'height':(border + (nodeHeight content))}", lazy(function(L_ast){var old = L$pushThunk((typeof stack != 'undefined' ? stack : L$thunkStack || L$emptyThunkStack), 'wrappedTreeFor:74:15'); var ret = (function(){
  var L_content_0;
  L_content_0 = (function(){var stack = L$thunkStack; var f = function(){var old = L$pushThunk((typeof stack != 'undefined' ? stack : L$thunkStack || L$emptyThunkStack), 'wrappedTreeFor:75:12'); var ret = resolve(L_nodeFor)(L_ast, lazy(function(L_ast_0){var old = L$pushThunk((typeof stack != 'undefined' ? stack : L$thunkStack || L$emptyThunkStack), 'wrappedTreeFor:75:25'); var ret = function(L_map){var old = L$pushThunk((typeof stack != 'undefined' ? stack : L$thunkStack || L$emptyThunkStack), 'wrappedTreeFor:75:29'); var ret = resolve(L_map); L$setThunkStack(old); return ret;}; L$setThunkStack(old); return ret;})); L$setThunkStack(old); if (f.memo) stack = null; return ret;}; return f;})();

  return resolve(L_svg)((function(){var stack = L$thunkStack; var f = function(){var old = L$pushThunk((typeof stack != 'undefined' ? stack : L$thunkStack || L$emptyThunkStack), 'wrappedTreeFor:76:7'); var ret = resolve(L_nodeSvg)(L_content_0); L$setThunkStack(old); if (f.memo) stack = null; return ret;}; return f;})(), (function(){var stack = L$thunkStack; var f = function(){var old = L$pushThunk((typeof stack != 'undefined' ? stack : L$thunkStack || L$emptyThunkStack), 'wrappedTreeFor:76:25'); var ret = resolve(L_aconsPair)((function(){var stack = L$thunkStack; var f = function(){var old = L$pushThunk((typeof stack != 'undefined' ? stack : L$thunkStack || L$emptyThunkStack), 'wrappedTreeFor:76:25'); var ret = resolve(L_cons)("width", (function(){var stack = L$thunkStack; var f = function(){var old = L$pushThunk((typeof stack != 'undefined' ? stack : L$thunkStack || L$emptyThunkStack), 'wrappedTreeFor:76:34'); var ret = resolve(L_$o)(L_border, (function(){var stack = L$thunkStack; var f = function(){var old = L$pushThunk((typeof stack != 'undefined' ? stack : L$thunkStack || L$emptyThunkStack), 'wrappedTreeFor:76:44'); var ret = resolve(L_nodeWidth)(L_content_0); L$setThunkStack(old); if (f.memo) stack = null; return ret;}; return f;})()); L$setThunkStack(old); if (f.memo) stack = null; return ret;}; return f;})()); L$setThunkStack(old); if (f.memo) stack = null; return ret;}; return f;})(), (function(){var stack = L$thunkStack; var f = function(){var old = L$pushThunk((typeof stack != 'undefined' ? stack : L$thunkStack || L$emptyThunkStack), 'wrappedTreeFor:76:64'); var ret = resolve(L_aconsPair)((function(){var stack = L$thunkStack; var f = function(){var old = L$pushThunk((typeof stack != 'undefined' ? stack : L$thunkStack || L$emptyThunkStack), 'wrappedTreeFor:76:64'); var ret = resolve(L_cons)("height", (function(){var stack = L$thunkStack; var f = function(){var old = L$pushThunk((typeof stack != 'undefined' ? stack : L$thunkStack || L$emptyThunkStack), 'wrappedTreeFor:76:74'); var ret = resolve(L_$o)(L_border, (function(){var stack = L$thunkStack; var f = function(){var old = L$pushThunk((typeof stack != 'undefined' ? stack : L$thunkStack || L$emptyThunkStack), 'wrappedTreeFor:76:84'); var ret = resolve(L_nodeHeight)(L_content_0); L$setThunkStack(old); if (f.memo) stack = null; return ret;}; return f;})()); L$setThunkStack(old); if (f.memo) stack = null; return ret;}; return f;})()); L$setThunkStack(old); if (f.memo) stack = null; return ret;}; return f;})(), L_nil); L$setThunkStack(old); if (f.memo) stack = null; return ret;}; return f;})()); L$setThunkStack(old); if (f.memo) stack = null; return ret;}; return f;})())})(); L$setThunkStack(old); return ret;}))},
    function(){return resolve(L_newDefine)("nodeFor", 2, "nodeFor ast mapFunc = do\n  t = getType ast\n  eq t 'lit'\n    createLitNode ast (show (ast \\v p . v)) mapFunc\n    eq t 'ref'\n      createRefNode ast (show (ast \\n p . n)) mapFunc\n      eq t 'lambda'\n        ast (\\v b p . createLambdaNode ast v b mapFunc)\n        eq t 'apply'\n          ast (\\f a . createApplyNode ast f a mapFunc)\n          eq t 'anno'\n            #ast (\\n d b . createApplyNode ast f a mapFunc)\n            ast (\\n d b . nodeFor b mapFunc)\n            log 2 makeNode (svgNode '') 0 0 0 0", lazy((function(L_ast, L_mapFunc) {
    return arguments.callee.length != arguments.length
        ? Leisure_primCall(arguments.callee, 0, arguments)
        : (function(){
  var L_t_0;
  L_t_0 = (function(){var stack = L$thunkStack; var f = function(){var old = L$pushThunk((typeof stack != 'undefined' ? stack : L$thunkStack || L$emptyThunkStack), 'nodeFor:79:6'); var ret = resolve(L_getType)(L_ast); L$setThunkStack(old); if (f.memo) stack = null; return ret;}; return f;})();

  return resolve(L_eq)(L_t_0, "lit")((function(){var stack = L$thunkStack; var f = function(){var old = L$pushThunk((typeof stack != 'undefined' ? stack : L$thunkStack || L$emptyThunkStack), 'nodeFor:81:4'); var ret = resolve(L_createLitNode)(L_ast, (function(){var stack = L$thunkStack; var f = function(){var old = L$pushThunk((typeof stack != 'undefined' ? stack : L$thunkStack || L$emptyThunkStack), 'nodeFor:81:23'); var ret = resolve(L_show)((function(){var stack = L$thunkStack; var f = function(){var old = L$pushThunk((typeof stack != 'undefined' ? stack : L$thunkStack || L$emptyThunkStack), 'nodeFor:81:29'); var ret = resolve(L_ast)(lazy(function(L_v){var old = L$pushThunk((typeof stack != 'undefined' ? stack : L$thunkStack || L$emptyThunkStack), 'nodeFor:81:34'); var ret = function(L_p){var old = L$pushThunk((typeof stack != 'undefined' ? stack : L$thunkStack || L$emptyThunkStack), 'nodeFor:81:36'); var ret = resolve(L_v); L$setThunkStack(old); return ret;}; L$setThunkStack(old); return ret;})); L$setThunkStack(old); if (f.memo) stack = null; return ret;}; return f;})()); L$setThunkStack(old); if (f.memo) stack = null; return ret;}; return f;})(), L_mapFunc); L$setThunkStack(old); if (f.memo) stack = null; return ret;}; return f;})())((function(){var stack = L$thunkStack; var f = function(){var old = L$pushThunk((typeof stack != 'undefined' ? stack : L$thunkStack || L$emptyThunkStack), 'nodeFor:82:4'); var ret = resolve(L_eq)(L_t_0, "ref")((function(){var stack = L$thunkStack; var f = function(){var old = L$pushThunk((typeof stack != 'undefined' ? stack : L$thunkStack || L$emptyThunkStack), 'nodeFor:83:6'); var ret = resolve(L_createRefNode)(L_ast, (function(){var stack = L$thunkStack; var f = function(){var old = L$pushThunk((typeof stack != 'undefined' ? stack : L$thunkStack || L$emptyThunkStack), 'nodeFor:83:25'); var ret = resolve(L_show)((function(){var stack = L$thunkStack; var f = function(){var old = L$pushThunk((typeof stack != 'undefined' ? stack : L$thunkStack || L$emptyThunkStack), 'nodeFor:83:31'); var ret = resolve(L_ast)(lazy(function(L_n){var old = L$pushThunk((typeof stack != 'undefined' ? stack : L$thunkStack || L$emptyThunkStack), 'nodeFor:83:36'); var ret = function(L_p){var old = L$pushThunk((typeof stack != 'undefined' ? stack : L$thunkStack || L$emptyThunkStack), 'nodeFor:83:38'); var ret = resolve(L_n); L$setThunkStack(old); return ret;}; L$setThunkStack(old); return ret;})); L$setThunkStack(old); if (f.memo) stack = null; return ret;}; return f;})()); L$setThunkStack(old); if (f.memo) stack = null; return ret;}; return f;})(), L_mapFunc); L$setThunkStack(old); if (f.memo) stack = null; return ret;}; return f;})())((function(){var stack = L$thunkStack; var f = function(){var old = L$pushThunk((typeof stack != 'undefined' ? stack : L$thunkStack || L$emptyThunkStack), 'nodeFor:84:6'); var ret = resolve(L_eq)(L_t_0, "lambda")((function(){var stack = L$thunkStack; var f = function(){var old = L$pushThunk((typeof stack != 'undefined' ? stack : L$thunkStack || L$emptyThunkStack), 'nodeFor:85:8'); var ret = resolve(L_ast)(lazy(function(L_v){var old = L$pushThunk((typeof stack != 'undefined' ? stack : L$thunkStack || L$emptyThunkStack), 'nodeFor:85:14'); var ret = function(L_b){var old = L$pushThunk((typeof stack != 'undefined' ? stack : L$thunkStack || L$emptyThunkStack), 'nodeFor:85:16'); var ret = function(L_p){var old = L$pushThunk((typeof stack != 'undefined' ? stack : L$thunkStack || L$emptyThunkStack), 'nodeFor:85:18'); var ret = resolve(L_createLambdaNode)(L_ast, L_v, L_b, L_mapFunc); L$setThunkStack(old); return ret;}; L$setThunkStack(old); return ret;}; L$setThunkStack(old); return ret;})); L$setThunkStack(old); if (f.memo) stack = null; return ret;}; return f;})())((function(){var stack = L$thunkStack; var f = function(){var old = L$pushThunk((typeof stack != 'undefined' ? stack : L$thunkStack || L$emptyThunkStack), 'nodeFor:86:8'); var ret = resolve(L_eq)(L_t_0, "apply")((function(){var stack = L$thunkStack; var f = function(){var old = L$pushThunk((typeof stack != 'undefined' ? stack : L$thunkStack || L$emptyThunkStack), 'nodeFor:87:10'); var ret = resolve(L_ast)(lazy(function(L_f){var old = L$pushThunk((typeof stack != 'undefined' ? stack : L$thunkStack || L$emptyThunkStack), 'nodeFor:87:16'); var ret = function(L_a){var old = L$pushThunk((typeof stack != 'undefined' ? stack : L$thunkStack || L$emptyThunkStack), 'nodeFor:87:18'); var ret = resolve(L_createApplyNode)(L_ast, L_f, L_a, L_mapFunc); L$setThunkStack(old); return ret;}; L$setThunkStack(old); return ret;})); L$setThunkStack(old); if (f.memo) stack = null; return ret;}; return f;})())((function(){var stack = L$thunkStack; var f = function(){var old = L$pushThunk((typeof stack != 'undefined' ? stack : L$thunkStack || L$emptyThunkStack), 'nodeFor:88:10'); var ret = resolve(L_eq)(L_t_0, "anno")((function(){var stack = L$thunkStack; var f = function(){var old = L$pushThunk((typeof stack != 'undefined' ? stack : L$thunkStack || L$emptyThunkStack), 'nodeFor:90:12'); var ret = resolve(L_ast)(lazy(function(L_n){var old = L$pushThunk((typeof stack != 'undefined' ? stack : L$thunkStack || L$emptyThunkStack), 'nodeFor:90:18'); var ret = function(L_d){var old = L$pushThunk((typeof stack != 'undefined' ? stack : L$thunkStack || L$emptyThunkStack), 'nodeFor:90:20'); var ret = function(L_b){var old = L$pushThunk((typeof stack != 'undefined' ? stack : L$thunkStack || L$emptyThunkStack), 'nodeFor:90:22'); var ret = resolve(L_nodeFor)(L_b, L_mapFunc); L$setThunkStack(old); return ret;}; L$setThunkStack(old); return ret;}; L$setThunkStack(old); return ret;})); L$setThunkStack(old); if (f.memo) stack = null; return ret;}; return f;})())((function(){var stack = L$thunkStack; var f = function(){var old = L$pushThunk((typeof stack != 'undefined' ? stack : L$thunkStack || L$emptyThunkStack), 'nodeFor:91:12'); var ret = resolve(L_log)(2, L_makeNode)((function(){var stack = L$thunkStack; var f = function(){var old = L$pushThunk((typeof stack != 'undefined' ? stack : L$thunkStack || L$emptyThunkStack), 'nodeFor:91:28'); var ret = resolve(L_svgNode)(""); L$setThunkStack(old); if (f.memo) stack = null; return ret;}; return f;})())(0)(0)(0)(0); L$setThunkStack(old); if (f.memo) stack = null; return ret;}; return f;})()); L$setThunkStack(old); if (f.memo) stack = null; return ret;}; return f;})()); L$setThunkStack(old); if (f.memo) stack = null; return ret;}; return f;})()); L$setThunkStack(old); if (f.memo) stack = null; return ret;}; return f;})()); L$setThunkStack(old); if (f.memo) stack = null; return ret;}; return f;})())})();
})))},
    function(){return resolve(L_newDefine)("redStyle", 0, "redStyle = [['stroke'|'black'] ['stroke-width'|2] ['fill'|'#fcc'] ['rx'|8] ['ry'|8]]", (function(){var stack = L$thunkStack; var f = function(){var old = L$pushThunk((typeof stack != 'undefined' ? stack : L$thunkStack || L$emptyThunkStack), 'redStyle:93:13'); var ret = resolve(L_cons)((function(){var stack = L$thunkStack; var f = function(){var old = L$pushThunk((typeof stack != 'undefined' ? stack : L$thunkStack || L$emptyThunkStack), 'redStyle:93:13'); var ret = resolve(L_cons)("stroke", "black"); L$setThunkStack(old); if (f.memo) stack = null; return ret;}; return f;})(), (function(){var stack = L$thunkStack; var f = function(){var old = L$pushThunk((typeof stack != 'undefined' ? stack : L$thunkStack || L$emptyThunkStack), 'redStyle:93:32'); var ret = resolve(L_cons)((function(){var stack = L$thunkStack; var f = function(){var old = L$pushThunk((typeof stack != 'undefined' ? stack : L$thunkStack || L$emptyThunkStack), 'redStyle:93:32'); var ret = resolve(L_cons)("stroke-width", 2); L$setThunkStack(old); if (f.memo) stack = null; return ret;}; return f;})(), (function(){var stack = L$thunkStack; var f = function(){var old = L$pushThunk((typeof stack != 'undefined' ? stack : L$thunkStack || L$emptyThunkStack), 'redStyle:93:51'); var ret = resolve(L_cons)((function(){var stack = L$thunkStack; var f = function(){var old = L$pushThunk((typeof stack != 'undefined' ? stack : L$thunkStack || L$emptyThunkStack), 'redStyle:93:51'); var ret = resolve(L_cons)("fill", "#fcc"); L$setThunkStack(old); if (f.memo) stack = null; return ret;}; return f;})(), (function(){var stack = L$thunkStack; var f = function(){var old = L$pushThunk((typeof stack != 'undefined' ? stack : L$thunkStack || L$emptyThunkStack), 'redStyle:93:67'); var ret = resolve(L_cons)((function(){var stack = L$thunkStack; var f = function(){var old = L$pushThunk((typeof stack != 'undefined' ? stack : L$thunkStack || L$emptyThunkStack), 'redStyle:93:67'); var ret = resolve(L_cons)("rx", 8); L$setThunkStack(old); if (f.memo) stack = null; return ret;}; return f;})(), (function(){var stack = L$thunkStack; var f = function(){var old = L$pushThunk((typeof stack != 'undefined' ? stack : L$thunkStack || L$emptyThunkStack), 'redStyle:93:76'); var ret = resolve(L_cons)((function(){var stack = L$thunkStack; var f = function(){var old = L$pushThunk((typeof stack != 'undefined' ? stack : L$thunkStack || L$emptyThunkStack), 'redStyle:93:76'); var ret = resolve(L_cons)("ry", 8); L$setThunkStack(old); if (f.memo) stack = null; return ret;}; return f;})(), L_nil); L$setThunkStack(old); if (f.memo) stack = null; return ret;}; return f;})()); L$setThunkStack(old); if (f.memo) stack = null; return ret;}; return f;})()); L$setThunkStack(old); if (f.memo) stack = null; return ret;}; return f;})()); L$setThunkStack(old); if (f.memo) stack = null; return ret;}; return f;})()); L$setThunkStack(old); if (f.memo) stack = null; return ret;}; return f;})())},
    function(){return resolve(L_newDefine)("greenStyle", 0, "greenStyle = [['stroke'|'black'] ['stroke-width'|2] ['fill'|'#cfc'] ['rx'|8] ['ry'|8]]", (function(){var stack = L$thunkStack; var f = function(){var old = L$pushThunk((typeof stack != 'undefined' ? stack : L$thunkStack || L$emptyThunkStack), 'greenStyle:94:15'); var ret = resolve(L_cons)((function(){var stack = L$thunkStack; var f = function(){var old = L$pushThunk((typeof stack != 'undefined' ? stack : L$thunkStack || L$emptyThunkStack), 'greenStyle:94:15'); var ret = resolve(L_cons)("stroke", "black"); L$setThunkStack(old); if (f.memo) stack = null; return ret;}; return f;})(), (function(){var stack = L$thunkStack; var f = function(){var old = L$pushThunk((typeof stack != 'undefined' ? stack : L$thunkStack || L$emptyThunkStack), 'greenStyle:94:34'); var ret = resolve(L_cons)((function(){var stack = L$thunkStack; var f = function(){var old = L$pushThunk((typeof stack != 'undefined' ? stack : L$thunkStack || L$emptyThunkStack), 'greenStyle:94:34'); var ret = resolve(L_cons)("stroke-width", 2); L$setThunkStack(old); if (f.memo) stack = null; return ret;}; return f;})(), (function(){var stack = L$thunkStack; var f = function(){var old = L$pushThunk((typeof stack != 'undefined' ? stack : L$thunkStack || L$emptyThunkStack), 'greenStyle:94:53'); var ret = resolve(L_cons)((function(){var stack = L$thunkStack; var f = function(){var old = L$pushThunk((typeof stack != 'undefined' ? stack : L$thunkStack || L$emptyThunkStack), 'greenStyle:94:53'); var ret = resolve(L_cons)("fill", "#cfc"); L$setThunkStack(old); if (f.memo) stack = null; return ret;}; return f;})(), (function(){var stack = L$thunkStack; var f = function(){var old = L$pushThunk((typeof stack != 'undefined' ? stack : L$thunkStack || L$emptyThunkStack), 'greenStyle:94:69'); var ret = resolve(L_cons)((function(){var stack = L$thunkStack; var f = function(){var old = L$pushThunk((typeof stack != 'undefined' ? stack : L$thunkStack || L$emptyThunkStack), 'greenStyle:94:69'); var ret = resolve(L_cons)("rx", 8); L$setThunkStack(old); if (f.memo) stack = null; return ret;}; return f;})(), (function(){var stack = L$thunkStack; var f = function(){var old = L$pushThunk((typeof stack != 'undefined' ? stack : L$thunkStack || L$emptyThunkStack), 'greenStyle:94:78'); var ret = resolve(L_cons)((function(){var stack = L$thunkStack; var f = function(){var old = L$pushThunk((typeof stack != 'undefined' ? stack : L$thunkStack || L$emptyThunkStack), 'greenStyle:94:78'); var ret = resolve(L_cons)("ry", 8); L$setThunkStack(old); if (f.memo) stack = null; return ret;}; return f;})(), L_nil); L$setThunkStack(old); if (f.memo) stack = null; return ret;}; return f;})()); L$setThunkStack(old); if (f.memo) stack = null; return ret;}; return f;})()); L$setThunkStack(old); if (f.memo) stack = null; return ret;}; return f;})()); L$setThunkStack(old); if (f.memo) stack = null; return ret;}; return f;})()); L$setThunkStack(old); if (f.memo) stack = null; return ret;}; return f;})())},
    function(){return resolve(L_newDefine)("blueStyle", 0, "blueStyle = [['stroke'|'black'] ['stroke-width'|2] ['fill'|'#ccf'] ['rx'|8] ['ry'|8]]", (function(){var stack = L$thunkStack; var f = function(){var old = L$pushThunk((typeof stack != 'undefined' ? stack : L$thunkStack || L$emptyThunkStack), 'blueStyle:95:14'); var ret = resolve(L_cons)((function(){var stack = L$thunkStack; var f = function(){var old = L$pushThunk((typeof stack != 'undefined' ? stack : L$thunkStack || L$emptyThunkStack), 'blueStyle:95:14'); var ret = resolve(L_cons)("stroke", "black"); L$setThunkStack(old); if (f.memo) stack = null; return ret;}; return f;})(), (function(){var stack = L$thunkStack; var f = function(){var old = L$pushThunk((typeof stack != 'undefined' ? stack : L$thunkStack || L$emptyThunkStack), 'blueStyle:95:33'); var ret = resolve(L_cons)((function(){var stack = L$thunkStack; var f = function(){var old = L$pushThunk((typeof stack != 'undefined' ? stack : L$thunkStack || L$emptyThunkStack), 'blueStyle:95:33'); var ret = resolve(L_cons)("stroke-width", 2); L$setThunkStack(old); if (f.memo) stack = null; return ret;}; return f;})(), (function(){var stack = L$thunkStack; var f = function(){var old = L$pushThunk((typeof stack != 'undefined' ? stack : L$thunkStack || L$emptyThunkStack), 'blueStyle:95:52'); var ret = resolve(L_cons)((function(){var stack = L$thunkStack; var f = function(){var old = L$pushThunk((typeof stack != 'undefined' ? stack : L$thunkStack || L$emptyThunkStack), 'blueStyle:95:52'); var ret = resolve(L_cons)("fill", "#ccf"); L$setThunkStack(old); if (f.memo) stack = null; return ret;}; return f;})(), (function(){var stack = L$thunkStack; var f = function(){var old = L$pushThunk((typeof stack != 'undefined' ? stack : L$thunkStack || L$emptyThunkStack), 'blueStyle:95:68'); var ret = resolve(L_cons)((function(){var stack = L$thunkStack; var f = function(){var old = L$pushThunk((typeof stack != 'undefined' ? stack : L$thunkStack || L$emptyThunkStack), 'blueStyle:95:68'); var ret = resolve(L_cons)("rx", 8); L$setThunkStack(old); if (f.memo) stack = null; return ret;}; return f;})(), (function(){var stack = L$thunkStack; var f = function(){var old = L$pushThunk((typeof stack != 'undefined' ? stack : L$thunkStack || L$emptyThunkStack), 'blueStyle:95:77'); var ret = resolve(L_cons)((function(){var stack = L$thunkStack; var f = function(){var old = L$pushThunk((typeof stack != 'undefined' ? stack : L$thunkStack || L$emptyThunkStack), 'blueStyle:95:77'); var ret = resolve(L_cons)("ry", 8); L$setThunkStack(old); if (f.memo) stack = null; return ret;}; return f;})(), L_nil); L$setThunkStack(old); if (f.memo) stack = null; return ret;}; return f;})()); L$setThunkStack(old); if (f.memo) stack = null; return ret;}; return f;})()); L$setThunkStack(old); if (f.memo) stack = null; return ret;}; return f;})()); L$setThunkStack(old); if (f.memo) stack = null; return ret;}; return f;})()); L$setThunkStack(old); if (f.memo) stack = null; return ret;}; return f;})())},
    function(){return resolve(L_newDefine)("createLambdaNode", 4, "createLambdaNode ast v b mapFunc = do\n  rootBox = textNode (mapFunc ast greenStyle) 'lambda'\n  varBox = textNode (mapFunc ast greenStyle) v\n  bodyTree = nodeFor b mapFunc\n  childWidth = (nodeWidth varBox) + space + (nodeWidth bodyTree)\n  totalWidth = max childWidth (nodeWidth rootBox)\n  pad = max 0 (totalWidth - childWidth) / 2\n  rootBox = nodeTranslate rootBox (totalWidth / 2 - (nodeWidth rootBox) / 2) 0\n  varBox = nodeTranslate varBox pad (nodeHeight rootBox) + space\n  bodyTree = nodeTranslate bodyTree (pad + (nodeWidth varBox) + space) ((nodeHeight rootBox) + space)\n  log 3 makeNode\n    svgConcat [(nodeLine rootBox varBox) (nodeLine rootBox bodyTree) (nodeSvg varBox) (nodeSvg bodyTree) (nodeSvg rootBox)]\n    totalWidth\n    (nodeHeight rootBox) + space + (max (nodeHeight varBox) (nodeHeight bodyTree))\n    totalWidth / 2\n    (nodeHeight rootBox) / 2", lazy((function(L_ast, L_v, L_b, L_mapFunc) {
    return arguments.callee.length != arguments.length
        ? Leisure_primCall(arguments.callee, 0, arguments)
        : (function(){
  var L_rootBox_0, L_varBox_1, L_bodyTree_2, L_childWidth_3, L_totalWidth_4, L_pad_5, L_rootBox_6, L_varBox_7, L_bodyTree_8;
  L_rootBox_0 = (function(){var stack = L$thunkStack; var f = function(){var old = L$pushThunk((typeof stack != 'undefined' ? stack : L$thunkStack || L$emptyThunkStack), 'createLambdaNode:98:12'); var ret = resolve(L_textNode)((function(){var stack = L$thunkStack; var f = function(){var old = L$pushThunk((typeof stack != 'undefined' ? stack : L$thunkStack || L$emptyThunkStack), 'createLambdaNode:98:22'); var ret = resolve(L_mapFunc)(L_ast)(L_greenStyle); L$setThunkStack(old); if (f.memo) stack = null; return ret;}; return f;})(), "lambda"); L$setThunkStack(old); if (f.memo) stack = null; return ret;}; return f;})();
  L_varBox_1 = (function(){var stack = L$thunkStack; var f = function(){var old = L$pushThunk((typeof stack != 'undefined' ? stack : L$thunkStack || L$emptyThunkStack), 'createLambdaNode:99:11'); var ret = resolve(L_textNode)((function(){var stack = L$thunkStack; var f = function(){var old = L$pushThunk((typeof stack != 'undefined' ? stack : L$thunkStack || L$emptyThunkStack), 'createLambdaNode:99:21'); var ret = resolve(L_mapFunc)(L_ast)(L_greenStyle); L$setThunkStack(old); if (f.memo) stack = null; return ret;}; return f;})(), L_v); L$setThunkStack(old); if (f.memo) stack = null; return ret;}; return f;})();
  L_bodyTree_2 = (function(){var stack = L$thunkStack; var f = function(){var old = L$pushThunk((typeof stack != 'undefined' ? stack : L$thunkStack || L$emptyThunkStack), 'createLambdaNode:100:13'); var ret = resolve(L_nodeFor)(L_b, L_mapFunc); L$setThunkStack(old); if (f.memo) stack = null; return ret;}; return f;})();
  L_childWidth_3 = (function(){var stack = L$thunkStack; var f = function(){var old = L$pushThunk((typeof stack != 'undefined' ? stack : L$thunkStack || L$emptyThunkStack), 'createLambdaNode:101:16'); var ret = resolve(L_$o)((function(){var stack = L$thunkStack; var f = function(){var old = L$pushThunk((typeof stack != 'undefined' ? stack : L$thunkStack || L$emptyThunkStack), 'createLambdaNode:101:16'); var ret = resolve(L_$o)((function(){var stack = L$thunkStack; var f = function(){var old = L$pushThunk((typeof stack != 'undefined' ? stack : L$thunkStack || L$emptyThunkStack), 'createLambdaNode:101:16'); var ret = resolve(L_nodeWidth)(L_varBox_1); L$setThunkStack(old); if (f.memo) stack = null; return ret;}; return f;})(), L_space); L$setThunkStack(old); if (f.memo) stack = null; return ret;}; return f;})(), (function(){var stack = L$thunkStack; var f = function(){var old = L$pushThunk((typeof stack != 'undefined' ? stack : L$thunkStack || L$emptyThunkStack), 'createLambdaNode:101:45'); var ret = resolve(L_nodeWidth)(L_bodyTree_2); L$setThunkStack(old); if (f.memo) stack = null; return ret;}; return f;})()); L$setThunkStack(old); if (f.memo) stack = null; return ret;}; return f;})();
  L_totalWidth_4 = (function(){var stack = L$thunkStack; var f = function(){var old = L$pushThunk((typeof stack != 'undefined' ? stack : L$thunkStack || L$emptyThunkStack), 'createLambdaNode:102:15'); var ret = resolve(L_max)(L_childWidth_3, (function(){var stack = L$thunkStack; var f = function(){var old = L$pushThunk((typeof stack != 'undefined' ? stack : L$thunkStack || L$emptyThunkStack), 'createLambdaNode:102:31'); var ret = resolve(L_nodeWidth)(L_rootBox_0); L$setThunkStack(old); if (f.memo) stack = null; return ret;}; return f;})()); L$setThunkStack(old); if (f.memo) stack = null; return ret;}; return f;})();
  L_pad_5 = (function(){var stack = L$thunkStack; var f = function(){var old = L$pushThunk((typeof stack != 'undefined' ? stack : L$thunkStack || L$emptyThunkStack), 'createLambdaNode:103:8'); var ret = resolve(L_max)(0, (function(){var stack = L$thunkStack; var f = function(){var old = L$pushThunk((typeof stack != 'undefined' ? stack : L$thunkStack || L$emptyThunkStack), 'createLambdaNode:103:15'); var ret = resolve(L_$f)((function(){var stack = L$thunkStack; var f = function(){var old = L$pushThunk((typeof stack != 'undefined' ? stack : L$thunkStack || L$emptyThunkStack), 'createLambdaNode:103:15'); var ret = resolve(L_$_)(L_totalWidth_4, L_childWidth_3); L$setThunkStack(old); if (f.memo) stack = null; return ret;}; return f;})(), 2); L$setThunkStack(old); if (f.memo) stack = null; return ret;}; return f;})()); L$setThunkStack(old); if (f.memo) stack = null; return ret;}; return f;})();
  L_rootBox_6 = (function(){var stack = L$thunkStack; var f = function(){var old = L$pushThunk((typeof stack != 'undefined' ? stack : L$thunkStack || L$emptyThunkStack), 'createLambdaNode:104:12'); var ret = resolve(L_nodeTranslate)(L_rootBox_0, (function(){var stack = L$thunkStack; var f = function(){var old = L$pushThunk((typeof stack != 'undefined' ? stack : L$thunkStack || L$emptyThunkStack), 'createLambdaNode:104:35'); var ret = resolve(L_$_)((function(){var stack = L$thunkStack; var f = function(){var old = L$pushThunk((typeof stack != 'undefined' ? stack : L$thunkStack || L$emptyThunkStack), 'createLambdaNode:104:35'); var ret = resolve(L_$f)(L_totalWidth_4, 2); L$setThunkStack(old); if (f.memo) stack = null; return ret;}; return f;})(), (function(){var stack = L$thunkStack; var f = function(){var old = L$pushThunk((typeof stack != 'undefined' ? stack : L$thunkStack || L$emptyThunkStack), 'createLambdaNode:104:53'); var ret = resolve(L_$f)((function(){var stack = L$thunkStack; var f = function(){var old = L$pushThunk((typeof stack != 'undefined' ? stack : L$thunkStack || L$emptyThunkStack), 'createLambdaNode:104:53'); var ret = resolve(L_nodeWidth)(L_rootBox_0); L$setThunkStack(old); if (f.memo) stack = null; return ret;}; return f;})(), 2); L$setThunkStack(old); if (f.memo) stack = null; return ret;}; return f;})()); L$setThunkStack(old); if (f.memo) stack = null; return ret;}; return f;})(), 0); L$setThunkStack(old); if (f.memo) stack = null; return ret;}; return f;})();
  L_varBox_7 = (function(){var stack = L$thunkStack; var f = function(){var old = L$pushThunk((typeof stack != 'undefined' ? stack : L$thunkStack || L$emptyThunkStack), 'createLambdaNode:105:11'); var ret = resolve(L_nodeTranslate)(L_varBox_1, L_pad_5, (function(){var stack = L$thunkStack; var f = function(){var old = L$pushThunk((typeof stack != 'undefined' ? stack : L$thunkStack || L$emptyThunkStack), 'createLambdaNode:105:37'); var ret = resolve(L_$o)((function(){var stack = L$thunkStack; var f = function(){var old = L$pushThunk((typeof stack != 'undefined' ? stack : L$thunkStack || L$emptyThunkStack), 'createLambdaNode:105:37'); var ret = resolve(L_nodeHeight)(L_rootBox_6); L$setThunkStack(old); if (f.memo) stack = null; return ret;}; return f;})(), L_space); L$setThunkStack(old); if (f.memo) stack = null; return ret;}; return f;})()); L$setThunkStack(old); if (f.memo) stack = null; return ret;}; return f;})();
  L_bodyTree_8 = (function(){var stack = L$thunkStack; var f = function(){var old = L$pushThunk((typeof stack != 'undefined' ? stack : L$thunkStack || L$emptyThunkStack), 'createLambdaNode:106:13'); var ret = resolve(L_nodeTranslate)(L_bodyTree_2, (function(){var stack = L$thunkStack; var f = function(){var old = L$pushThunk((typeof stack != 'undefined' ? stack : L$thunkStack || L$emptyThunkStack), 'createLambdaNode:106:37'); var ret = resolve(L_$o)((function(){var stack = L$thunkStack; var f = function(){var old = L$pushThunk((typeof stack != 'undefined' ? stack : L$thunkStack || L$emptyThunkStack), 'createLambdaNode:106:37'); var ret = resolve(L_$o)(L_pad_5, (function(){var stack = L$thunkStack; var f = function(){var old = L$pushThunk((typeof stack != 'undefined' ? stack : L$thunkStack || L$emptyThunkStack), 'createLambdaNode:106:44'); var ret = resolve(L_nodeWidth)(L_varBox_7); L$setThunkStack(old); if (f.memo) stack = null; return ret;}; return f;})()); L$setThunkStack(old); if (f.memo) stack = null; return ret;}; return f;})(), L_space); L$setThunkStack(old); if (f.memo) stack = null; return ret;}; return f;})(), (function(){var stack = L$thunkStack; var f = function(){var old = L$pushThunk((typeof stack != 'undefined' ? stack : L$thunkStack || L$emptyThunkStack), 'createLambdaNode:106:73'); var ret = resolve(L_$o)((function(){var stack = L$thunkStack; var f = function(){var old = L$pushThunk((typeof stack != 'undefined' ? stack : L$thunkStack || L$emptyThunkStack), 'createLambdaNode:106:73'); var ret = resolve(L_nodeHeight)(L_rootBox_6); L$setThunkStack(old); if (f.memo) stack = null; return ret;}; return f;})(), L_space); L$setThunkStack(old); if (f.memo) stack = null; return ret;}; return f;})()); L$setThunkStack(old); if (f.memo) stack = null; return ret;}; return f;})();

  return resolve(L_log)(3, L_makeNode)((function(){var stack = L$thunkStack; var f = function(){var old = L$pushThunk((typeof stack != 'undefined' ? stack : L$thunkStack || L$emptyThunkStack), 'createLambdaNode:108:4'); var ret = resolve(L_svgConcat)((function(){var stack = L$thunkStack; var f = function(){var old = L$pushThunk((typeof stack != 'undefined' ? stack : L$thunkStack || L$emptyThunkStack), 'createLambdaNode:108:15'); var ret = resolve(L_cons)((function(){var stack = L$thunkStack; var f = function(){var old = L$pushThunk((typeof stack != 'undefined' ? stack : L$thunkStack || L$emptyThunkStack), 'createLambdaNode:108:16'); var ret = resolve(L_nodeLine)(L_rootBox_6, L_varBox_7); L$setThunkStack(old); if (f.memo) stack = null; return ret;}; return f;})(), (function(){var stack = L$thunkStack; var f = function(){var old = L$pushThunk((typeof stack != 'undefined' ? stack : L$thunkStack || L$emptyThunkStack), 'createLambdaNode:108:41'); var ret = resolve(L_cons)((function(){var stack = L$thunkStack; var f = function(){var old = L$pushThunk((typeof stack != 'undefined' ? stack : L$thunkStack || L$emptyThunkStack), 'createLambdaNode:108:42'); var ret = resolve(L_nodeLine)(L_rootBox_6, L_bodyTree_8); L$setThunkStack(old); if (f.memo) stack = null; return ret;}; return f;})(), (function(){var stack = L$thunkStack; var f = function(){var old = L$pushThunk((typeof stack != 'undefined' ? stack : L$thunkStack || L$emptyThunkStack), 'createLambdaNode:108:69'); var ret = resolve(L_cons)((function(){var stack = L$thunkStack; var f = function(){var old = L$pushThunk((typeof stack != 'undefined' ? stack : L$thunkStack || L$emptyThunkStack), 'createLambdaNode:108:70'); var ret = resolve(L_nodeSvg)(L_varBox_7); L$setThunkStack(old); if (f.memo) stack = null; return ret;}; return f;})(), (function(){var stack = L$thunkStack; var f = function(){var old = L$pushThunk((typeof stack != 'undefined' ? stack : L$thunkStack || L$emptyThunkStack), 'createLambdaNode:108:86'); var ret = resolve(L_cons)((function(){var stack = L$thunkStack; var f = function(){var old = L$pushThunk((typeof stack != 'undefined' ? stack : L$thunkStack || L$emptyThunkStack), 'createLambdaNode:108:87'); var ret = resolve(L_nodeSvg)(L_bodyTree_8); L$setThunkStack(old); if (f.memo) stack = null; return ret;}; return f;})(), (function(){var stack = L$thunkStack; var f = function(){var old = L$pushThunk((typeof stack != 'undefined' ? stack : L$thunkStack || L$emptyThunkStack), 'createLambdaNode:108:105'); var ret = resolve(L_cons)((function(){var stack = L$thunkStack; var f = function(){var old = L$pushThunk((typeof stack != 'undefined' ? stack : L$thunkStack || L$emptyThunkStack), 'createLambdaNode:108:106'); var ret = resolve(L_nodeSvg)(L_rootBox_6); L$setThunkStack(old); if (f.memo) stack = null; return ret;}; return f;})(), L_nil); L$setThunkStack(old); if (f.memo) stack = null; return ret;}; return f;})()); L$setThunkStack(old); if (f.memo) stack = null; return ret;}; return f;})()); L$setThunkStack(old); if (f.memo) stack = null; return ret;}; return f;})()); L$setThunkStack(old); if (f.memo) stack = null; return ret;}; return f;})()); L$setThunkStack(old); if (f.memo) stack = null; return ret;}; return f;})()); L$setThunkStack(old); if (f.memo) stack = null; return ret;}; return f;})())(L_totalWidth_4)((function(){var stack = L$thunkStack; var f = function(){var old = L$pushThunk((typeof stack != 'undefined' ? stack : L$thunkStack || L$emptyThunkStack), 'createLambdaNode:110:5'); var ret = resolve(L_$o)((function(){var stack = L$thunkStack; var f = function(){var old = L$pushThunk((typeof stack != 'undefined' ? stack : L$thunkStack || L$emptyThunkStack), 'createLambdaNode:110:5'); var ret = resolve(L_$o)((function(){var stack = L$thunkStack; var f = function(){var old = L$pushThunk((typeof stack != 'undefined' ? stack : L$thunkStack || L$emptyThunkStack), 'createLambdaNode:110:5'); var ret = resolve(L_nodeHeight)(L_rootBox_6); L$setThunkStack(old); if (f.memo) stack = null; return ret;}; return f;})(), L_space); L$setThunkStack(old); if (f.memo) stack = null; return ret;}; return f;})(), (function(){var stack = L$thunkStack; var f = function(){var old = L$pushThunk((typeof stack != 'undefined' ? stack : L$thunkStack || L$emptyThunkStack), 'createLambdaNode:110:36'); var ret = resolve(L_max)((function(){var stack = L$thunkStack; var f = function(){var old = L$pushThunk((typeof stack != 'undefined' ? stack : L$thunkStack || L$emptyThunkStack), 'createLambdaNode:110:41'); var ret = resolve(L_nodeHeight)(L_varBox_7); L$setThunkStack(old); if (f.memo) stack = null; return ret;}; return f;})(), (function(){var stack = L$thunkStack; var f = function(){var old = L$pushThunk((typeof stack != 'undefined' ? stack : L$thunkStack || L$emptyThunkStack), 'createLambdaNode:110:61'); var ret = resolve(L_nodeHeight)(L_bodyTree_8); L$setThunkStack(old); if (f.memo) stack = null; return ret;}; return f;})()); L$setThunkStack(old); if (f.memo) stack = null; return ret;}; return f;})()); L$setThunkStack(old); if (f.memo) stack = null; return ret;}; return f;})())((function(){var stack = L$thunkStack; var f = function(){var old = L$pushThunk((typeof stack != 'undefined' ? stack : L$thunkStack || L$emptyThunkStack), 'createLambdaNode:111:4'); var ret = resolve(L_$f)(L_totalWidth_4, 2); L$setThunkStack(old); if (f.memo) stack = null; return ret;}; return f;})())((function(){var stack = L$thunkStack; var f = function(){var old = L$pushThunk((typeof stack != 'undefined' ? stack : L$thunkStack || L$emptyThunkStack), 'createLambdaNode:112:5'); var ret = resolve(L_$f)((function(){var stack = L$thunkStack; var f = function(){var old = L$pushThunk((typeof stack != 'undefined' ? stack : L$thunkStack || L$emptyThunkStack), 'createLambdaNode:112:5'); var ret = resolve(L_nodeHeight)(L_rootBox_6); L$setThunkStack(old); if (f.memo) stack = null; return ret;}; return f;})(), 2); L$setThunkStack(old); if (f.memo) stack = null; return ret;}; return f;})())})();
})))},
    function(){return resolve(L_newDefine)("createApplyNode", 4, "createApplyNode ast f a mapFunc = do\n  rootBox = textNode (mapFunc ast blueStyle) 'apply'\n  funcTree = nodeFor f mapFunc\n  argTree = nodeFor a mapFunc\n  childWidth = (nodeWidth argTree) + space + (nodeWidth funcTree)\n  totalWidth = max childWidth (nodeWidth rootBox)\n  pad = max 0 (totalWidth - childWidth) / 2\n  rootBox = nodeTranslate rootBox (totalWidth / 2 - (nodeWidth rootBox) / 2) 0\n  funcTree = nodeTranslate funcTree pad (nodeHeight rootBox) + space\n  argTree = nodeTranslate argTree (pad + (nodeWidth funcTree) + space) ((nodeHeight rootBox) + space)\n  makeNode\n    svgConcat [(nodeLine rootBox funcTree) (nodeLine rootBox argTree) (nodeSvg rootBox) (nodeSvg funcTree) (nodeSvg argTree)]\n    totalWidth\n    (nodeHeight rootBox) + space + (max (nodeHeight argTree) (nodeHeight funcTree))\n    totalWidth / 2\n    (nodeHeight rootBox) / 2", lazy((function(L_ast, L_f, L_a, L_mapFunc) {
    return arguments.callee.length != arguments.length
        ? Leisure_primCall(arguments.callee, 0, arguments)
        : (function(){
  var L_rootBox_0, L_funcTree_1, L_argTree_2, L_childWidth_3, L_totalWidth_4, L_pad_5, L_rootBox_6, L_funcTree_7, L_argTree_8;
  L_rootBox_0 = (function(){var stack = L$thunkStack; var f = function(){var old = L$pushThunk((typeof stack != 'undefined' ? stack : L$thunkStack || L$emptyThunkStack), 'createApplyNode:115:12'); var ret = resolve(L_textNode)((function(){var stack = L$thunkStack; var f = function(){var old = L$pushThunk((typeof stack != 'undefined' ? stack : L$thunkStack || L$emptyThunkStack), 'createApplyNode:115:22'); var ret = resolve(L_mapFunc)(L_ast)(L_blueStyle); L$setThunkStack(old); if (f.memo) stack = null; return ret;}; return f;})(), "apply"); L$setThunkStack(old); if (f.memo) stack = null; return ret;}; return f;})();
  L_funcTree_1 = (function(){var stack = L$thunkStack; var f = function(){var old = L$pushThunk((typeof stack != 'undefined' ? stack : L$thunkStack || L$emptyThunkStack), 'createApplyNode:116:13'); var ret = resolve(L_nodeFor)(L_f, L_mapFunc); L$setThunkStack(old); if (f.memo) stack = null; return ret;}; return f;})();
  L_argTree_2 = (function(){var stack = L$thunkStack; var f = function(){var old = L$pushThunk((typeof stack != 'undefined' ? stack : L$thunkStack || L$emptyThunkStack), 'createApplyNode:117:12'); var ret = resolve(L_nodeFor)(L_a, L_mapFunc); L$setThunkStack(old); if (f.memo) stack = null; return ret;}; return f;})();
  L_childWidth_3 = (function(){var stack = L$thunkStack; var f = function(){var old = L$pushThunk((typeof stack != 'undefined' ? stack : L$thunkStack || L$emptyThunkStack), 'createApplyNode:118:16'); var ret = resolve(L_$o)((function(){var stack = L$thunkStack; var f = function(){var old = L$pushThunk((typeof stack != 'undefined' ? stack : L$thunkStack || L$emptyThunkStack), 'createApplyNode:118:16'); var ret = resolve(L_$o)((function(){var stack = L$thunkStack; var f = function(){var old = L$pushThunk((typeof stack != 'undefined' ? stack : L$thunkStack || L$emptyThunkStack), 'createApplyNode:118:16'); var ret = resolve(L_nodeWidth)(L_argTree_2); L$setThunkStack(old); if (f.memo) stack = null; return ret;}; return f;})(), L_space); L$setThunkStack(old); if (f.memo) stack = null; return ret;}; return f;})(), (function(){var stack = L$thunkStack; var f = function(){var old = L$pushThunk((typeof stack != 'undefined' ? stack : L$thunkStack || L$emptyThunkStack), 'createApplyNode:118:46'); var ret = resolve(L_nodeWidth)(L_funcTree_1); L$setThunkStack(old); if (f.memo) stack = null; return ret;}; return f;})()); L$setThunkStack(old); if (f.memo) stack = null; return ret;}; return f;})();
  L_totalWidth_4 = (function(){var stack = L$thunkStack; var f = function(){var old = L$pushThunk((typeof stack != 'undefined' ? stack : L$thunkStack || L$emptyThunkStack), 'createApplyNode:119:15'); var ret = resolve(L_max)(L_childWidth_3, (function(){var stack = L$thunkStack; var f = function(){var old = L$pushThunk((typeof stack != 'undefined' ? stack : L$thunkStack || L$emptyThunkStack), 'createApplyNode:119:31'); var ret = resolve(L_nodeWidth)(L_rootBox_0); L$setThunkStack(old); if (f.memo) stack = null; return ret;}; return f;})()); L$setThunkStack(old); if (f.memo) stack = null; return ret;}; return f;})();
  L_pad_5 = (function(){var stack = L$thunkStack; var f = function(){var old = L$pushThunk((typeof stack != 'undefined' ? stack : L$thunkStack || L$emptyThunkStack), 'createApplyNode:120:8'); var ret = resolve(L_max)(0, (function(){var stack = L$thunkStack; var f = function(){var old = L$pushThunk((typeof stack != 'undefined' ? stack : L$thunkStack || L$emptyThunkStack), 'createApplyNode:120:15'); var ret = resolve(L_$f)((function(){var stack = L$thunkStack; var f = function(){var old = L$pushThunk((typeof stack != 'undefined' ? stack : L$thunkStack || L$emptyThunkStack), 'createApplyNode:120:15'); var ret = resolve(L_$_)(L_totalWidth_4, L_childWidth_3); L$setThunkStack(old); if (f.memo) stack = null; return ret;}; return f;})(), 2); L$setThunkStack(old); if (f.memo) stack = null; return ret;}; return f;})()); L$setThunkStack(old); if (f.memo) stack = null; return ret;}; return f;})();
  L_rootBox_6 = (function(){var stack = L$thunkStack; var f = function(){var old = L$pushThunk((typeof stack != 'undefined' ? stack : L$thunkStack || L$emptyThunkStack), 'createApplyNode:121:12'); var ret = resolve(L_nodeTranslate)(L_rootBox_0, (function(){var stack = L$thunkStack; var f = function(){var old = L$pushThunk((typeof stack != 'undefined' ? stack : L$thunkStack || L$emptyThunkStack), 'createApplyNode:121:35'); var ret = resolve(L_$_)((function(){var stack = L$thunkStack; var f = function(){var old = L$pushThunk((typeof stack != 'undefined' ? stack : L$thunkStack || L$emptyThunkStack), 'createApplyNode:121:35'); var ret = resolve(L_$f)(L_totalWidth_4, 2); L$setThunkStack(old); if (f.memo) stack = null; return ret;}; return f;})(), (function(){var stack = L$thunkStack; var f = function(){var old = L$pushThunk((typeof stack != 'undefined' ? stack : L$thunkStack || L$emptyThunkStack), 'createApplyNode:121:53'); var ret = resolve(L_$f)((function(){var stack = L$thunkStack; var f = function(){var old = L$pushThunk((typeof stack != 'undefined' ? stack : L$thunkStack || L$emptyThunkStack), 'createApplyNode:121:53'); var ret = resolve(L_nodeWidth)(L_rootBox_0); L$setThunkStack(old); if (f.memo) stack = null; return ret;}; return f;})(), 2); L$setThunkStack(old); if (f.memo) stack = null; return ret;}; return f;})()); L$setThunkStack(old); if (f.memo) stack = null; return ret;}; return f;})(), 0); L$setThunkStack(old); if (f.memo) stack = null; return ret;}; return f;})();
  L_funcTree_7 = (function(){var stack = L$thunkStack; var f = function(){var old = L$pushThunk((typeof stack != 'undefined' ? stack : L$thunkStack || L$emptyThunkStack), 'createApplyNode:122:13'); var ret = resolve(L_nodeTranslate)(L_funcTree_1, L_pad_5, (function(){var stack = L$thunkStack; var f = function(){var old = L$pushThunk((typeof stack != 'undefined' ? stack : L$thunkStack || L$emptyThunkStack), 'createApplyNode:122:41'); var ret = resolve(L_$o)((function(){var stack = L$thunkStack; var f = function(){var old = L$pushThunk((typeof stack != 'undefined' ? stack : L$thunkStack || L$emptyThunkStack), 'createApplyNode:122:41'); var ret = resolve(L_nodeHeight)(L_rootBox_6); L$setThunkStack(old); if (f.memo) stack = null; return ret;}; return f;})(), L_space); L$setThunkStack(old); if (f.memo) stack = null; return ret;}; return f;})()); L$setThunkStack(old); if (f.memo) stack = null; return ret;}; return f;})();
  L_argTree_8 = (function(){var stack = L$thunkStack; var f = function(){var old = L$pushThunk((typeof stack != 'undefined' ? stack : L$thunkStack || L$emptyThunkStack), 'createApplyNode:123:12'); var ret = resolve(L_nodeTranslate)(L_argTree_2, (function(){var stack = L$thunkStack; var f = function(){var old = L$pushThunk((typeof stack != 'undefined' ? stack : L$thunkStack || L$emptyThunkStack), 'createApplyNode:123:35'); var ret = resolve(L_$o)((function(){var stack = L$thunkStack; var f = function(){var old = L$pushThunk((typeof stack != 'undefined' ? stack : L$thunkStack || L$emptyThunkStack), 'createApplyNode:123:35'); var ret = resolve(L_$o)(L_pad_5, (function(){var stack = L$thunkStack; var f = function(){var old = L$pushThunk((typeof stack != 'undefined' ? stack : L$thunkStack || L$emptyThunkStack), 'createApplyNode:123:42'); var ret = resolve(L_nodeWidth)(L_funcTree_7); L$setThunkStack(old); if (f.memo) stack = null; return ret;}; return f;})()); L$setThunkStack(old); if (f.memo) stack = null; return ret;}; return f;})(), L_space); L$setThunkStack(old); if (f.memo) stack = null; return ret;}; return f;})(), (function(){var stack = L$thunkStack; var f = function(){var old = L$pushThunk((typeof stack != 'undefined' ? stack : L$thunkStack || L$emptyThunkStack), 'createApplyNode:123:73'); var ret = resolve(L_$o)((function(){var stack = L$thunkStack; var f = function(){var old = L$pushThunk((typeof stack != 'undefined' ? stack : L$thunkStack || L$emptyThunkStack), 'createApplyNode:123:73'); var ret = resolve(L_nodeHeight)(L_rootBox_6); L$setThunkStack(old); if (f.memo) stack = null; return ret;}; return f;})(), L_space); L$setThunkStack(old); if (f.memo) stack = null; return ret;}; return f;})()); L$setThunkStack(old); if (f.memo) stack = null; return ret;}; return f;})();

  return resolve(L_makeNode)((function(){var stack = L$thunkStack; var f = function(){var old = L$pushThunk((typeof stack != 'undefined' ? stack : L$thunkStack || L$emptyThunkStack), 'createApplyNode:125:4'); var ret = resolve(L_svgConcat)((function(){var stack = L$thunkStack; var f = function(){var old = L$pushThunk((typeof stack != 'undefined' ? stack : L$thunkStack || L$emptyThunkStack), 'createApplyNode:125:15'); var ret = resolve(L_cons)((function(){var stack = L$thunkStack; var f = function(){var old = L$pushThunk((typeof stack != 'undefined' ? stack : L$thunkStack || L$emptyThunkStack), 'createApplyNode:125:16'); var ret = resolve(L_nodeLine)(L_rootBox_6, L_funcTree_7); L$setThunkStack(old); if (f.memo) stack = null; return ret;}; return f;})(), (function(){var stack = L$thunkStack; var f = function(){var old = L$pushThunk((typeof stack != 'undefined' ? stack : L$thunkStack || L$emptyThunkStack), 'createApplyNode:125:43'); var ret = resolve(L_cons)((function(){var stack = L$thunkStack; var f = function(){var old = L$pushThunk((typeof stack != 'undefined' ? stack : L$thunkStack || L$emptyThunkStack), 'createApplyNode:125:44'); var ret = resolve(L_nodeLine)(L_rootBox_6, L_argTree_8); L$setThunkStack(old); if (f.memo) stack = null; return ret;}; return f;})(), (function(){var stack = L$thunkStack; var f = function(){var old = L$pushThunk((typeof stack != 'undefined' ? stack : L$thunkStack || L$emptyThunkStack), 'createApplyNode:125:70'); var ret = resolve(L_cons)((function(){var stack = L$thunkStack; var f = function(){var old = L$pushThunk((typeof stack != 'undefined' ? stack : L$thunkStack || L$emptyThunkStack), 'createApplyNode:125:71'); var ret = resolve(L_nodeSvg)(L_rootBox_6); L$setThunkStack(old); if (f.memo) stack = null; return ret;}; return f;})(), (function(){var stack = L$thunkStack; var f = function(){var old = L$pushThunk((typeof stack != 'undefined' ? stack : L$thunkStack || L$emptyThunkStack), 'createApplyNode:125:88'); var ret = resolve(L_cons)((function(){var stack = L$thunkStack; var f = function(){var old = L$pushThunk((typeof stack != 'undefined' ? stack : L$thunkStack || L$emptyThunkStack), 'createApplyNode:125:89'); var ret = resolve(L_nodeSvg)(L_funcTree_7); L$setThunkStack(old); if (f.memo) stack = null; return ret;}; return f;})(), (function(){var stack = L$thunkStack; var f = function(){var old = L$pushThunk((typeof stack != 'undefined' ? stack : L$thunkStack || L$emptyThunkStack), 'createApplyNode:125:107'); var ret = resolve(L_cons)((function(){var stack = L$thunkStack; var f = function(){var old = L$pushThunk((typeof stack != 'undefined' ? stack : L$thunkStack || L$emptyThunkStack), 'createApplyNode:125:108'); var ret = resolve(L_nodeSvg)(L_argTree_8); L$setThunkStack(old); if (f.memo) stack = null; return ret;}; return f;})(), L_nil); L$setThunkStack(old); if (f.memo) stack = null; return ret;}; return f;})()); L$setThunkStack(old); if (f.memo) stack = null; return ret;}; return f;})()); L$setThunkStack(old); if (f.memo) stack = null; return ret;}; return f;})()); L$setThunkStack(old); if (f.memo) stack = null; return ret;}; return f;})()); L$setThunkStack(old); if (f.memo) stack = null; return ret;}; return f;})()); L$setThunkStack(old); if (f.memo) stack = null; return ret;}; return f;})(), L_totalWidth_4, (function(){var stack = L$thunkStack; var f = function(){var old = L$pushThunk((typeof stack != 'undefined' ? stack : L$thunkStack || L$emptyThunkStack), 'createApplyNode:127:5'); var ret = resolve(L_$o)((function(){var stack = L$thunkStack; var f = function(){var old = L$pushThunk((typeof stack != 'undefined' ? stack : L$thunkStack || L$emptyThunkStack), 'createApplyNode:127:5'); var ret = resolve(L_$o)((function(){var stack = L$thunkStack; var f = function(){var old = L$pushThunk((typeof stack != 'undefined' ? stack : L$thunkStack || L$emptyThunkStack), 'createApplyNode:127:5'); var ret = resolve(L_nodeHeight)(L_rootBox_6); L$setThunkStack(old); if (f.memo) stack = null; return ret;}; return f;})(), L_space); L$setThunkStack(old); if (f.memo) stack = null; return ret;}; return f;})(), (function(){var stack = L$thunkStack; var f = function(){var old = L$pushThunk((typeof stack != 'undefined' ? stack : L$thunkStack || L$emptyThunkStack), 'createApplyNode:127:36'); var ret = resolve(L_max)((function(){var stack = L$thunkStack; var f = function(){var old = L$pushThunk((typeof stack != 'undefined' ? stack : L$thunkStack || L$emptyThunkStack), 'createApplyNode:127:41'); var ret = resolve(L_nodeHeight)(L_argTree_8); L$setThunkStack(old); if (f.memo) stack = null; return ret;}; return f;})(), (function(){var stack = L$thunkStack; var f = function(){var old = L$pushThunk((typeof stack != 'undefined' ? stack : L$thunkStack || L$emptyThunkStack), 'createApplyNode:127:62'); var ret = resolve(L_nodeHeight)(L_funcTree_7); L$setThunkStack(old); if (f.memo) stack = null; return ret;}; return f;})()); L$setThunkStack(old); if (f.memo) stack = null; return ret;}; return f;})()); L$setThunkStack(old); if (f.memo) stack = null; return ret;}; return f;})(), (function(){var stack = L$thunkStack; var f = function(){var old = L$pushThunk((typeof stack != 'undefined' ? stack : L$thunkStack || L$emptyThunkStack), 'createApplyNode:128:4'); var ret = resolve(L_$f)(L_totalWidth_4, 2); L$setThunkStack(old); if (f.memo) stack = null; return ret;}; return f;})(), (function(){var stack = L$thunkStack; var f = function(){var old = L$pushThunk((typeof stack != 'undefined' ? stack : L$thunkStack || L$emptyThunkStack), 'createApplyNode:129:5'); var ret = resolve(L_$f)((function(){var stack = L$thunkStack; var f = function(){var old = L$pushThunk((typeof stack != 'undefined' ? stack : L$thunkStack || L$emptyThunkStack), 'createApplyNode:129:5'); var ret = resolve(L_nodeHeight)(L_rootBox_6); L$setThunkStack(old); if (f.memo) stack = null; return ret;}; return f;})(), 2); L$setThunkStack(old); if (f.memo) stack = null; return ret;}; return f;})())})();
})))},
    function(){return resolve(L_newDefine)("createRefNode", 3, "createRefNode ast ref mapFunc = textNode (mapFunc ast redStyle) ref", lazy((function(L_ast, L_ref, L_mapFunc) {
    return arguments.callee.length != arguments.length
        ? Leisure_primCall(arguments.callee, 0, arguments)
        : resolve(L_textNode)((function(){var stack = L$thunkStack; var f = function(){var old = L$pushThunk((typeof stack != 'undefined' ? stack : L$thunkStack || L$emptyThunkStack), 'createRefNode:131:42'); var ret = resolve(L_mapFunc)(L_ast)(L_redStyle); L$setThunkStack(old); if (f.memo) stack = null; return ret;}; return f;})(), L_ref);
})))},
    function(){return resolve(L_newDefine)("createLitNode", 3, "createLitNode ast lit mapFunc = textNode (mapFunc ast greenStyle) lit", lazy((function(L_ast, L_lit, L_mapFunc) {
    return arguments.callee.length != arguments.length
        ? Leisure_primCall(arguments.callee, 0, arguments)
        : resolve(L_textNode)((function(){var stack = L$thunkStack; var f = function(){var old = L$pushThunk((typeof stack != 'undefined' ? stack : L$thunkStack || L$emptyThunkStack), 'createLitNode:132:42'); var ret = resolve(L_mapFunc)(L_ast)(L_greenStyle); L$setThunkStack(old); if (f.memo) stack = null; return ret;}; return f;})(), L_lit);
})))},
    function(){return resolve(L_newDefine)("textNode", 2, "textNode map txt = (svgMeasureText txt '') \\w h . do\n  nodeW = w + 24\n  nodeH = h + 14\n  makeNode\n    (svgConcat [(rect [['x'|2] ['y'|2] ['width'|nodeW] ['height'|nodeH] | map]) (text txt [['pointer-events' | 'none'] ['text-anchor'|\"middle\"] ['dominant-baseline'|\"mathematical\"] ['x'| 14 + w / 2] ['y'| border + h / 2] ['font-weight'|'bold']])])\n    nodeW\n    nodeH\n    nodeW / 2\n    nodeH / 2", lazy((function(L_map, L_txt) {
    return arguments.callee.length != arguments.length
        ? Leisure_primCall(arguments.callee, 0, arguments)
        : resolve(L_svgMeasureText)(L_txt)("")(lazy(function(L_w){var old = L$pushThunk((typeof stack != 'undefined' ? stack : L$thunkStack || L$emptyThunkStack), 'textNode:134:44'); var ret = function(L_h){var old = L$pushThunk((typeof stack != 'undefined' ? stack : L$thunkStack || L$emptyThunkStack), 'textNode:134:46'); var ret = (function(){
  var L_nodeW_0, L_nodeH_1;
  L_nodeW_0 = (function(){var stack = L$thunkStack; var f = function(){var old = L$pushThunk((typeof stack != 'undefined' ? stack : L$thunkStack || L$emptyThunkStack), 'textNode:135:10'); var ret = resolve(L_$o)(L_w, 24); L$setThunkStack(old); if (f.memo) stack = null; return ret;}; return f;})();
  L_nodeH_1 = (function(){var stack = L$thunkStack; var f = function(){var old = L$pushThunk((typeof stack != 'undefined' ? stack : L$thunkStack || L$emptyThunkStack), 'textNode:136:10'); var ret = resolve(L_$o)(L_h, 14); L$setThunkStack(old); if (f.memo) stack = null; return ret;}; return f;})();

  return resolve(L_makeNode)((function(){var stack = L$thunkStack; var f = function(){var old = L$pushThunk((typeof stack != 'undefined' ? stack : L$thunkStack || L$emptyThunkStack), 'textNode:138:5'); var ret = resolve(L_svgConcat)((function(){var stack = L$thunkStack; var f = function(){var old = L$pushThunk((typeof stack != 'undefined' ? stack : L$thunkStack || L$emptyThunkStack), 'textNode:138:16'); var ret = resolve(L_cons)((function(){var stack = L$thunkStack; var f = function(){var old = L$pushThunk((typeof stack != 'undefined' ? stack : L$thunkStack || L$emptyThunkStack), 'textNode:138:17'); var ret = resolve(L_rect)((function(){var stack = L$thunkStack; var f = function(){var old = L$pushThunk((typeof stack != 'undefined' ? stack : L$thunkStack || L$emptyThunkStack), 'textNode:138:24'); var ret = resolve(L_cons)((function(){var stack = L$thunkStack; var f = function(){var old = L$pushThunk((typeof stack != 'undefined' ? stack : L$thunkStack || L$emptyThunkStack), 'textNode:138:24'); var ret = resolve(L_cons)("x", 2); L$setThunkStack(old); if (f.memo) stack = null; return ret;}; return f;})(), (function(){var stack = L$thunkStack; var f = function(){var old = L$pushThunk((typeof stack != 'undefined' ? stack : L$thunkStack || L$emptyThunkStack), 'textNode:138:32'); var ret = resolve(L_cons)((function(){var stack = L$thunkStack; var f = function(){var old = L$pushThunk((typeof stack != 'undefined' ? stack : L$thunkStack || L$emptyThunkStack), 'textNode:138:32'); var ret = resolve(L_cons)("y", 2); L$setThunkStack(old); if (f.memo) stack = null; return ret;}; return f;})(), (function(){var stack = L$thunkStack; var f = function(){var old = L$pushThunk((typeof stack != 'undefined' ? stack : L$thunkStack || L$emptyThunkStack), 'textNode:138:40'); var ret = resolve(L_cons)((function(){var stack = L$thunkStack; var f = function(){var old = L$pushThunk((typeof stack != 'undefined' ? stack : L$thunkStack || L$emptyThunkStack), 'textNode:138:40'); var ret = resolve(L_cons)("width", L_nodeW_0); L$setThunkStack(old); if (f.memo) stack = null; return ret;}; return f;})(), (function(){var stack = L$thunkStack; var f = function(){var old = L$pushThunk((typeof stack != 'undefined' ? stack : L$thunkStack || L$emptyThunkStack), 'textNode:138:56'); var ret = resolve(L_cons)((function(){var stack = L$thunkStack; var f = function(){var old = L$pushThunk((typeof stack != 'undefined' ? stack : L$thunkStack || L$emptyThunkStack), 'textNode:138:56'); var ret = resolve(L_cons)("height", L_nodeH_1); L$setThunkStack(old); if (f.memo) stack = null; return ret;}; return f;})(), L_map); L$setThunkStack(old); if (f.memo) stack = null; return ret;}; return f;})()); L$setThunkStack(old); if (f.memo) stack = null; return ret;}; return f;})()); L$setThunkStack(old); if (f.memo) stack = null; return ret;}; return f;})()); L$setThunkStack(old); if (f.memo) stack = null; return ret;}; return f;})()); L$setThunkStack(old); if (f.memo) stack = null; return ret;}; return f;})(), (function(){var stack = L$thunkStack; var f = function(){var old = L$pushThunk((typeof stack != 'undefined' ? stack : L$thunkStack || L$emptyThunkStack), 'textNode:138:80'); var ret = resolve(L_cons)((function(){var stack = L$thunkStack; var f = function(){var old = L$pushThunk((typeof stack != 'undefined' ? stack : L$thunkStack || L$emptyThunkStack), 'textNode:138:81'); var ret = resolve(L_text)(L_txt, (function(){var stack = L$thunkStack; var f = function(){var old = L$pushThunk((typeof stack != 'undefined' ? stack : L$thunkStack || L$emptyThunkStack), 'textNode:138:92'); var ret = resolve(L_cons)((function(){var stack = L$thunkStack; var f = function(){var old = L$pushThunk((typeof stack != 'undefined' ? stack : L$thunkStack || L$emptyThunkStack), 'textNode:138:92'); var ret = resolve(L_cons)("pointer-events", "none"); L$setThunkStack(old); if (f.memo) stack = null; return ret;}; return f;})(), (function(){var stack = L$thunkStack; var f = function(){var old = L$pushThunk((typeof stack != 'undefined' ? stack : L$thunkStack || L$emptyThunkStack), 'textNode:138:120'); var ret = resolve(L_cons)((function(){var stack = L$thunkStack; var f = function(){var old = L$pushThunk((typeof stack != 'undefined' ? stack : L$thunkStack || L$emptyThunkStack), 'textNode:138:120'); var ret = resolve(L_cons)("text-anchor", "middle"); L$setThunkStack(old); if (f.memo) stack = null; return ret;}; return f;})(), (function(){var stack = L$thunkStack; var f = function(){var old = L$pushThunk((typeof stack != 'undefined' ? stack : L$thunkStack || L$emptyThunkStack), 'textNode:138:145'); var ret = resolve(L_cons)((function(){var stack = L$thunkStack; var f = function(){var old = L$pushThunk((typeof stack != 'undefined' ? stack : L$thunkStack || L$emptyThunkStack), 'textNode:138:145'); var ret = resolve(L_cons)("dominant-baseline", "mathematical"); L$setThunkStack(old); if (f.memo) stack = null; return ret;}; return f;})(), (function(){var stack = L$thunkStack; var f = function(){var old = L$pushThunk((typeof stack != 'undefined' ? stack : L$thunkStack || L$emptyThunkStack), 'textNode:138:182'); var ret = resolve(L_cons)((function(){var stack = L$thunkStack; var f = function(){var old = L$pushThunk((typeof stack != 'undefined' ? stack : L$thunkStack || L$emptyThunkStack), 'textNode:138:182'); var ret = resolve(L_cons)("x", (function(){var stack = L$thunkStack; var f = function(){var old = L$pushThunk((typeof stack != 'undefined' ? stack : L$thunkStack || L$emptyThunkStack), 'textNode:138:187'); var ret = resolve(L_$o)(14, (function(){var stack = L$thunkStack; var f = function(){var old = L$pushThunk((typeof stack != 'undefined' ? stack : L$thunkStack || L$emptyThunkStack), 'textNode:138:192'); var ret = resolve(L_$f)(L_w, 2); L$setThunkStack(old); if (f.memo) stack = null; return ret;}; return f;})()); L$setThunkStack(old); if (f.memo) stack = null; return ret;}; return f;})()); L$setThunkStack(old); if (f.memo) stack = null; return ret;}; return f;})(), (function(){var stack = L$thunkStack; var f = function(){var old = L$pushThunk((typeof stack != 'undefined' ? stack : L$thunkStack || L$emptyThunkStack), 'textNode:138:200'); var ret = resolve(L_cons)((function(){var stack = L$thunkStack; var f = function(){var old = L$pushThunk((typeof stack != 'undefined' ? stack : L$thunkStack || L$emptyThunkStack), 'textNode:138:200'); var ret = resolve(L_cons)("y", (function(){var stack = L$thunkStack; var f = function(){var old = L$pushThunk((typeof stack != 'undefined' ? stack : L$thunkStack || L$emptyThunkStack), 'textNode:138:205'); var ret = resolve(L_$o)(L_border, (function(){var stack = L$thunkStack; var f = function(){var old = L$pushThunk((typeof stack != 'undefined' ? stack : L$thunkStack || L$emptyThunkStack), 'textNode:138:214'); var ret = resolve(L_$f)(L_h, 2); L$setThunkStack(old); if (f.memo) stack = null; return ret;}; return f;})()); L$setThunkStack(old); if (f.memo) stack = null; return ret;}; return f;})()); L$setThunkStack(old); if (f.memo) stack = null; return ret;}; return f;})(), (function(){var stack = L$thunkStack; var f = function(){var old = L$pushThunk((typeof stack != 'undefined' ? stack : L$thunkStack || L$emptyThunkStack), 'textNode:138:222'); var ret = resolve(L_cons)((function(){var stack = L$thunkStack; var f = function(){var old = L$pushThunk((typeof stack != 'undefined' ? stack : L$thunkStack || L$emptyThunkStack), 'textNode:138:222'); var ret = resolve(L_cons)("font-weight", "bold"); L$setThunkStack(old); if (f.memo) stack = null; return ret;}; return f;})(), L_nil); L$setThunkStack(old); if (f.memo) stack = null; return ret;}; return f;})()); L$setThunkStack(old); if (f.memo) stack = null; return ret;}; return f;})()); L$setThunkStack(old); if (f.memo) stack = null; return ret;}; return f;})()); L$setThunkStack(old); if (f.memo) stack = null; return ret;}; return f;})()); L$setThunkStack(old); if (f.memo) stack = null; return ret;}; return f;})()); L$setThunkStack(old); if (f.memo) stack = null; return ret;}; return f;})()); L$setThunkStack(old); if (f.memo) stack = null; return ret;}; return f;})(), L_nil); L$setThunkStack(old); if (f.memo) stack = null; return ret;}; return f;})()); L$setThunkStack(old); if (f.memo) stack = null; return ret;}; return f;})()); L$setThunkStack(old); if (f.memo) stack = null; return ret;}; return f;})(), L_nodeW_0, L_nodeH_1, (function(){var stack = L$thunkStack; var f = function(){var old = L$pushThunk((typeof stack != 'undefined' ? stack : L$thunkStack || L$emptyThunkStack), 'textNode:141:4'); var ret = resolve(L_$f)(L_nodeW_0, 2); L$setThunkStack(old); if (f.memo) stack = null; return ret;}; return f;})(), (function(){var stack = L$thunkStack; var f = function(){var old = L$pushThunk((typeof stack != 'undefined' ? stack : L$thunkStack || L$emptyThunkStack), 'textNode:142:4'); var ret = resolve(L_$f)(L_nodeH_1, 2); L$setThunkStack(old); if (f.memo) stack = null; return ret;}; return f;})())})(); L$setThunkStack(old); return ret;}; L$setThunkStack(old); return ret;}));
})))}
  ]);
});
//# sourceMappingURL=parseAst.map
