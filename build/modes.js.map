{
  "version": 3,
  "file": "modes.js",
  "sourceRoot": "..",
  "sources": [
    "src/modes.litcoffee"
  ],
  "names": [],
  "mappings": "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",
  "sourcesContent": [
    "    'use strict'\n    define ['./base', './org', './docOrg', './ast', './eval', './editor', 'lodash', 'jquery', './ui', 'handlebars', './lib/prism', './editorSupport', 'bluebird', './advice', './lib/prism-leisure', 'lib/js-yaml'], (Base, Org, DocOrg, Ast, Eval, Editor, _, $, UI, Handlebars, Prism, EditorSupport, Bluebird, Advice, PrismLeisure, Yaml)->\n\n      {\n        defaultEnv\n      } = Base\n      {\n        changeAdvice\n        afterMethod\n        beforeMethod\n      } = Advice\n      {\n        parseOrgMode\n        parseMeat\n        Fragment\n        Headline\n        SimpleMarkup\n        Link\n        Keyword\n        ListItem\n        Drawer\n        Meat\n        Example\n        HTML\n        Nil\n        headlineRE\n        HL_LEVEL\n        HL_TODO\n        HL_PRIORITY\n        HL_TEXT\n        HL_TAGS\n        keywordRE\n        KW_BOILERPLATE\n        KW_INFO\n        KEYWORD_\n      } = Org\n      {\n        orgDoc\n        getCodeItems\n        blockSource\n        parseYaml\n      } = DocOrg\n      {\n        Nil\n      } = Ast\n      {\n        languageEnvMaker\n        Html\n        escapeHtml\n        html\n        blockVars\n        isYamlResult\n        unescapeString\n      } = Eval\n      {\n        LeisureEditCore\n        last\n        DataStore\n        DataStoreEditingOptions\n        blockText\n        posFor\n        escapeHtml\n        copy\n        findEditor\n        copyBlock\n        preserveSelection\n        getEventChar\n      } = Editor\n      {\n        addView\n        removeView\n        renderView\n        hasView\n        viewKey\n        addController\n        removeController\n        withContext\n        mergeContext\n        initializePendingViews\n        escapeAttr\n        nextImageSrc\n        prevImageSrc\n        pushPendingInitialzation\n        nextViewId\n        touchedBlocks\n      } = UI\n      {\n        OrgEditing\n        blockOrg\n        blockCodeItems\n        blockIsHidden\n        blockEnvMaker\n        controllerEval\n        updateSelection\n      } = EditorSupport\n      {\n        Promise\n      } = Bluebird\n      {\n        dump\n      } = Yaml\n\n      singleControllers = {}\n      numPat = /-?[0-9][0-9.]*|-?\\.[0-9.]+/\n      currentSlider = null\n\n      validateBlock = (opts, block, force)->\n        if opts.validateMode || force\n          node = opts.nodeForId(block._id)[0]\n          offset = opts.data.offsetForBlock block._id\n          rendered = opts.editor.domCursor(node, 0)\n            .filterTextNodes()\n            .filterParent node\n            .firstText()\n            .getText block.text.length\n          if block.text != rendered\n            console.log \"Invalid rendering for block\", block, \", exptected:\"\n            console.log block.text\n            console.log \"but got this for node\", node\n            console.log rendered\n\n      plainMode =\n        name: 'plain'\n        keyPress: (opts, parent, e)-> parent e\n        enter: (opts, parent, e)-> parent e\n        handleDelete: (opts, parent, e, sel, forward)-> parent e\n        renderBlocks: (opt, html)-> html\n        setSlideMode: (opt, flag)->\n        showingSlides: -> false\n        showNextSlide: -> false\n        showPrevSlide: -> false\n        handleChanges: (changes)->\n        renderChanged: (opts, blocks, prefix, replace)->\n          for id, block of opts.slidesFor blocks\n            @render opts, block, prefix, replace\n        render: (opts, block, prefix, replace)->\n          opts.trigger 'render', opts.editor, block\n          {name, source, error, results} = blockCodeItems this, block\n          attrs = \"id='#{prefix}#{block._id}' data-block='#{block.type}'\"\n          if block.type == 'headline' then attrs += \" data-headline='#{block.level}'\"\n          #if !results && !error then text += \"#{escapeHtml block.text}\"\n          if !results && !error then text = @renderMainBlock block\n          else\n            text = if name then @renderMainText block.text.substring 0, source?.offset else ''\n            if !error then text += @renderMainText block.text.substring(source.offset, results?.offset ? block.text.length)\n            else\n              pos = source.offset + source.contentPos + Number(error.info.match(/([^,]*),/)[1]) - 1\n              text = escapeHtml(block.text.substring(name?.offset ? 0, pos)) + \"<span class='errorMark' contenteditable='false' data-noncontent>✖</span>\" + escapeHtml(block.text.substring(pos, results?.offset ? block.text.length))\n            if results? then text += \"#{escapeHtml results?.text ? ''}#{escapeHtml block.text.substring(results.offset + results.text.length)}\"\n          result = \"<span #{attrs}>#{text}</span>\"\n          maybeReplaceHtml block, prefix, result, replace\n          if replace then validateBlock opts, block\n          [result, block.next]\n        renderMainBlock: (block)->\n          txt = block.text\n          if block.type == 'headline'\n            {text} = parseOrgMode(block.text).children[0].partOffsets()\n            \"<div class='plain-headline maintext'>#{escapeHtml txt.substring 0, text.start}#{@renderMainText txt.substring(text.start, text.end)}#{escapeHtml txt.substring text.end}</div>\"\n          else @renderMeat parseOrgMode(block.text).children[0]\n        renderMainText: (txt)->\n          result = ''\n          remaining = txt\n          pos = 0\n          while remaining\n            [org] = parseMeat(remaining, 0, '', true)\n            result += @renderMeat org\n            pos += org.offset + org.allText().length\n            remaining = txt.substring pos\n          result\n        renderMeat: (org)->\n          result = ''\n          while org\n            result += if org instanceof SimpleMarkup then @renderSimple org\n            else escapeHtml org.allText()\n            org = org.next\n          result\n        renderSimple: (org)->\n          guts = ''\n          for c in org.children\n            guts += @renderMeat c, true\n          guts = \"#{org.text[0]}#{guts}#{org.text[org.text.length - 1]}\"\n          switch org.type == 'simple' && org.markupType\n            when 'bold' then \"<b>#{guts}</b>\"\n            when 'italic' then \"<i>#{guts}</i>\"\n            when 'underline' then \"<span style='text-decoration: underline'>#{guts}</span>\"\n            when 'strikethrough' then \"<span style='text-decoration: line-through'>#{guts}</span>\"\n            when 'code' then \"<code>#{guts}</code>\"\n            when 'verbatim' then \"<code>#{guts}</code>\"\n            else escapeHtml org.allText()\n        renderSimpleChild: (org)->\n          if !org.children then escapeHtml org.text else @renderSimple org.children[0]\n\n      toggleSlideMode = (slideDom)->\n        if opts = findEditor(slideDom)?.options\n          block = opts.getBlock opts.idForNode slideDom[0]\n          opts.toggleSlide block._id\n          blockHtml = opts.renderBlock(block)[0]\n          preserveSelection ->\n            if !opts.isToggled(block)\n              next = block\n              while isSidebar(next = opts.data.nextSibling(next))\n                $(opts.nodeForId(next._id)).closest('.slideholder').closest('[data-view]').remove()\n            prev = opts.editor.setHtml (if block.type == 'headline' then slideDom.closest('[data-view]')\n            else slideDom.closest('[data-view=\"leisure-top-chunk\"]'))[0], blockHtml, true\n            next = block\n            if opts.isToggled(block)\n              while isSidebar(next = opts.data.nextSibling(next))\n                $(prev).after opts.renderBlock(next)[0]\n                prev = prev.nextSibling\n          initializePendingViews()\n          updateSelection()\n\n      Handlebars.registerHelper 'yaml', (item, opts)->\n        console.log \"YAML: #{item}\"\n        #escapeHtml dump item\n        \"<pre class='name-label' data-org-src style='height: initial'>#{prismHighlight 'yaml', dump item}</pre>\"\n\n      Handlebars.registerHelper 'render', (block)->\n        fancyMode.render(UI.context.opts, block, UI.context.prefix)[0]\n\n      Handlebars.registerHelper 'renderHtml', (html, options)->\n        opts = UI.context?.opts\n        [vars, ids] = blockVars opts?.data, this.block?.codeAttributes?.var\n        data = UI.context?.opts?.data\n        controllerName = @block?.codeAttributes?.controller\n        id = UI.context?.simpleViewId ? this.id\n        if html\n          vars = _.merge vars, tblocks = touchedBlocks html, options.data.opts.data\n          if controllerName || (ids.length > 0 && (id = UI.context?.simpleViewId ? this.id)) || !_.isEmpty(tblocks)\n            pushPendingInitialzation =>\n              viewNode = $(\"##{id}\")\n              if ids.length && (node = opts.nodeForId(@block._id)) && (node[0] == viewNode[0] || node[0].compareDocumentPosition(viewNode[0]) & Element.DOCUMENT_POSITION_CONTAINS)\n                blocks = node.attr('data-observe') ? ''\n                for id in ids\n                  blocks += \" #{id}\"\n                node.attr 'data-observe', blocks\n              if !_.isEmpty tblocks\n                s = new Set()\n                for blk in (viewNode.attr('data-observe') ? '').split /\\s+/\n                  s.add blk\n                for blk of tblocks\n                  s.add blk\n                viewNode.attr 'data-observe', _.toArray(s).join(' ').trim()\n              if controllerName\n                if !(controller = singleControllers[controllerName])\n                  if block = opts.data.getBlockNamed controllerName\n                    controller = singleControllers[controllerName] = {}\n                    env = blockEnvMaker(block) __proto__: defaultEnv\n                    env.eval = (text)-> controllerEval.call controller, text\n                    env.write = (str)-> console.log str\n                    env.errorAt = (offset, msg)-> console.log msg\n                    p = opts.data.getCode block\n                    if p instanceof Promise then p.then (func)-> func.call controller, null, viewNode\n                    else p.call controller, null, viewNode\n                controller?.initializeView? viewNode[0], vars\n          text = Handlebars.compile(html)(vars, data: UI.context)\n          if !id && controllerName\n            id = nextViewId()\n            \"<span id='#{id}'>#{text}</span>\"\n          else text\n        else ''\n\n      initializePendingViews = ->\n        UI.initializePendingViews()\n        singleControllers = {}\n\n      Handlebars.registerHelper 'renderPlain', (data)->\n        text = ''\n        edata = UI.context.opts.data\n        block = edata.getBlock data.blockId\n        end = edata.nextRight(block)?._id\n        while block && block._id != end\n          [plainText, next] = plainMode.render UI.context.opts, block, UI.context.prefix\n          text += plainText\n          block = edata.getBlock next\n        text\n\n      Handlebars.registerHelper 'hiddenBeforeSource', ->\n        {source} = @codeItems\n        if source.offset\n          \"<span class='hidden'>#{@block.text.substring 0, source.offset}</span>\"\n        else ''\n\n      Handlebars.registerHelper 'hiddenAfterSource', ->\n        {source} = @codeItems\n        if (end = source.end()) > @block.text.length\n          \"<span class='hidden'>#{@block.text.substring source.end()}</span>\"\n        else ''\n\n      Handlebars.registerHelper 'htmlDataUrl', ->\n        \"data:text/html;charset=utf-8,#{encodeURI @source}\"\n\n      Handlebars.registerHelper 'sourceHeader', ->\n        {source: src} = @codeItems\n        src.text.substring 0, src.contentPos\n\n      Handlebars.registerHelper 'sourceBoiler', ->\n        {name, source: src} = @codeItems\n        if name && src.text[src.infoPos - 1] == ' ' then src.text.substring 0, src.infoPos - 1\n        else src.text.substring 0, src.infoPos\n\n      Handlebars.registerHelper 'sourceInfo', ->\n        {name, source: src} = @codeItems\n        if name && src.text[src.infoPos - 1] == ' ' then src.text.substring src.infoPos - 1, src.contentPos\n        else src.text.substring src.infoPos, src.contentPos\n\n      Handlebars.registerHelper 'renderSource', ->\n        {error, source} = @codeItems\n        src = source.content.substring 0, source.content.length - 1\n        if error\n          [ignore, pos, msg] = error.info.match(/([^,]*), *(.*)/)\n          pos = Number(pos) - 1\n          prismHighlight(this.language, src.substring(0, pos)) + \"<span class='errorMark' contenteditable='false' data-noncontent>✖</span><span class='errorMessage' contenteditable='false' data-noncontent title='#{escapeHtml unescapeString(msg).replace(/\\n/g, '<br>')}'>✖</span><span class='errorSource'>\" + prismHighlight(this.language, src.substring(pos)) + \"</span>\"\n        else prismHighlight this.language, src\n\n      Handlebars.registerHelper 'sourceFooter', ->\n        {source: src} = @codeItems\n        src.text.substring(src.contentPos + src.content.length)\n\n      Handlebars.registerHelper 'resultsHeader', ->\n        {results: res} = @codeItems\n        res.text.substring(0, res.contentPos)\n\n      Handlebars.registerHelper 'resultsContents', ->\n        {results: res} = @codeItems\n        if @hideResults then \"<span class='hidden'>#{escapeHtml res.text}</span>\"\n        else resultsArea UI.context.options, res.text.substring res.contentPos\n\n      Handlebars.registerHelper 'isExpected', (options)->\n        !!options.data.opts.parsedCodeBlock(options.data.block).resultsAreExpected()\n\n      Handlebars.registerHelper 'expectedResult', (options)->\n        escapeHtml (options.data.block.codeTestExpected?.trim().replace /^: /mg, '') ? ''\n\n      Handlebars.registerHelper 'actualResult', (options)->\n        escapeHtml (options.data.block.codeTestActual?.trim().replace /^: /mg, '') ? ''\n\n      #Handlebars.registerHelper 'find', ->\n      #  ***\n\n      slideNode = (node)-> $(node).closest('slideHolder').closest('[data-view]')\n\n      isHiddenSlide = (block)-> block.type == 'headline' && blockIsHidden block\n\n      closeList = (level, lastItem, stack)->\n        closeCount = 0\n        prevLast = lastItem\n\n        while lastItem && lastItem.level > level\n          delete lastItem.middleItem\n          lastItem.lastItem = true\n          lastItem = stack.pop()\n          closeCount++\n        prevLast.closeCount = closeCount\n        lastItem\n\n      classifyListItems = (org)->\n        if !(org.firstItem || org.middleItem || org.lastItem)\n          stack = []\n          org.firstItem = true\n          lastItem = org\n          while org = org.next\n            if org instanceof ListItem\n              if lastItem.level > org.level\n                lastItem = closeList org.level, lastItem, stack\n              if lastItem.level < org.level\n                org.firstItem = true\n                stack.push lastItem\n              else org.middleItem = true\n              lastItem = org\n          closeList -1, lastItem, stack\n\n      fancyReplacements =\n        '<': '&lt;'\n        '>': '&gt;'\n        '&': '&amp;'\n        '\"': '&quot;'\n        \"'\": '&#39;'\n        \" \": ' '\n\n      fancyHtml = (str)->\n        if typeof str == 'string' then str.replace /[<>&\\'\\\"]| +/g, (c)->\n          if c == ' ' then c\n          else if c[0] == ' '\n            s = ''\n            for i in [1...c.length]\n              s += '&nbsp;'\n            s += ' '\n            s\n          else fancyReplacements[c]\n        else str\n\n\n      fancyMode =\n        name: 'fancy'\n        keyPress: (opts, parent, e)->\n          sel = getSelection()\n          if sel.type == 'Caret'\n            pos = opts.editor.getSelectedDocRange()\n            sel = opts.editor.getSelectedBlockRange()\n            block = opts.getBlock sel.block\n            if !opts.isToggled(block) && block.type != 'code' && sel.offset == 0 && block.text[0] == '\\n' && block.text[1] != '\\n'\n              e.preventDefault()\n              opts.editor.replace e, sel, (getEventChar e) + '\\n', false\n              pos.type = 'Caret'\n              pos.length = 0\n              pos.start++\n              opts.editor.selectDocRange pos\n              return\n          parent e\n        enter: (opts, parent, e)->\n          block = opts.getBlock opts.idForNode getSelection().getRangeAt(0).startContainer\n          console.log \"enter in block \", block._id\n          if opts.isToggled(block) || block.type == 'code' then parent e\n          else\n            sel = opts.editor.getSelectedBlockRange()\n            startBlock = opts.data.getBlock sel.block\n            endSel = opts.data.blockOffsetForDocOffset opts.data.offsetForBlock(startBlock) + sel.offset + sel.length\n            endBlock = opts.data.getBlock endSel.block\n            t = startBlock.text\n            if !sel.offset && startBlock.prev\n              pt = opts.data.getBlock(startBlock.prev).text\n              t = pt + t\n              sel.offset += pt.length\n            if ((t.substring(0, sel.offset).match(/\\n*$/)[0].length + endBlock.text.substring(endSel.offset).match(/^\\n*/)[0].length) % 2) then return parent e\n            e.preventDefault()\n            opts.editor.replace e, sel, '\\n\\n', false\n        handleDelete: (opts, parent, e, sel, forward)->\n          r = sel.getRangeAt 0\n          start = opts.editor.docOffset r.startContainer, r.startOffset\n          blockOff = opts.data.blockOffsetForDocOffset start\n          block = opts.getBlock blockOff.block\n          if (block?.type == 'code') || (forward && start == opts.getLength()) || (!forward && start == 0)\n            return parent e, sel, forward\n          if !forward\n            --blockOff.offset\n            --start\n          pos = start\n          if blockOff.offset <= 0\n            prevBlock = opts.getBlock(block.prev)\n            blockOff.block = prevBlock\n            pt = prevBlock.text\n            blockOff.offset += pt.length\n            pt += block.text\n          else pt = block.text\n          del = pt.substring(blockOff.offset, blockOff.offset + 1)\n          nt = pt.substring(blockOff.offset + 1)\n          pt = pt.substring(0, blockOff.offset)\n          ptNls = pt.match(/\\n*$/)[0].length\n          ntNls = nt.match(/^\\n*/)[0].length\n          end = start + 1\n          if ptNls > 0 && ntNls > 0\n            if (ptNls + ntNls) % 2 then start--\n          else if del == '\\n'\n            if ntNls % 2 then end++\n            else if ptNls % 2\n              start--\n              pos--\n          opts.replaceText {start, end, text: '', source: 'edit'}\n          opts.editor.domCursorForDocOffset(pos).moveCaret()\n          if pos < opts.getLength() && pos != opts.editor.docOffset opts.editor.moveForward()\n            opts.editor.moveBackward()\n        renderBlocks: (opt, html)->\n          header = if hasView 'header' then opt.withNewContext =>\n            @renderView('header', null, null, {})[0]\n          else \"<div id='dummy_headline'></div>\"\n          \"#{header}#{html}\"\n        handleChanges: (opts, changes)->\n          for block in changes.newBlocks\n            if changes.sets[block._id] && (old = opts.getBlock block._id) && isHiddenSlide(block) != isHiddenSlide(old)\n              if isHiddenSlide block\n                slideNode(opts.nodeForId(block._id)).remove()\n              else\n                siblingNode = null\n                [newNode] = @render opts, block, opts.prefix\n                sibling = block\n                while !siblingNode && (sibling = opts.data.previousSibling sibling, changes)\n                  if (siblingNode = opts.nodeForId(sibling._id)).length == 0\n                    siblingNode = null\n                if siblingNode then slideNode(siblingNode).after newNode\n                else\n                  sibling = block\n                  while !siblingNode && (sibling = opts.data.nextSibling sibling, changes)\n                    if (siblingNode = opts.nodeForId(sibling._id)).length == 0\n                      siblingNode = null\n                  if siblingNode then slideNode(siblingNode).before newNode\n                  else $(opts.editor.node).prepend newNode\n                initializePendingViews()\n        renderChanged: (opts, blocks, prefix, replace)->\n          rendered = {}\n          for block in blocks\n            if !opts.isToggled(block) then @render opts, block, prefix, replace\n            else if opts.isToggled(block) && !rendered[(slide = opts.slideFor(block))?._id]\n              rendered[slide._id] = true\n              @render opts, slide, prefix, replace\n        render: (opts, block, prefix, replace)->\n          if opts.shouldHide(block) || block.local then ['', opts.data.nextRight(block)?._id]\n          else\n            opts.trigger 'render', block\n            opts.withNewContext =>\n              UI.context.currentView = opts.nodeForId block._id\n              UI.context.block = block\n              addPendingTooltip opts, block._id\n              result = if block.type == 'headline' then @renderHeadline opts, block, prefix, replace\n              else if !block.prev then @renderFirstBlocks opts, block, prefix, replace\n              else @renderNontop opts, block, prefix, replace\n              if replace then validateBlock opts, block\n              result\n        renderNontop: (opts, block, prefix, replace)->\n          if block.type == 'chunk' then @renderChunk opts, block, prefix, replace\n          else if block.type == 'code' then @renderCode opts, block, prefix, replace\n          else plainMode.render opts, block, prefix, replace\n        renderView: (type, ctx, next, data, targets)-> [renderView(type, ctx, data, targets), next]\n        renderHeadline: (opts, block, prefix, replace)->\n          next = opts.data.nextRight(block)?._id\n          viewName = if block.type == 'headline' && block.level == 1\n            if opts.isToggled block\n              UI.context.viewAttrs = _.merge {class: 'plain'}, UI.context.viewAttrs ? {}\n              'leisure-headline-plain'\n            else 'leisure-top-headline'\n          else 'leisure-headline'\n          if hasView viewName\n            m = block.text.match headlineRE\n            UI.context.currentView = targets = replacementTargets block, prefix, replace\n            if !opts.isToggled(block)\n              if block.level == 1 && isSidebar block\n                parent = block\n                while parent && isSidebar parent\n                  parent = opts.data.previousSibling parent\n                if !parent || !opts.isToggled(parent) then viewName = 'leisure-sidebar'\n              else if sidebars = @getSidebars opts, block\n                next = opts.data.nextRight(_.last sidebars)?._id\n                sidebars = for sblock in sidebars\n                  @render(opts, sblock, prefix)[0]\n                viewName += '-with-sidebar'\n            @renderView viewName, null, next,\n              firstText: isFirstText opts.data, block\n              id: prefix + block._id\n              blockId: block._id\n              EOL: '\\n'\n              style: (if block.properties?.style then \"style='#{block.properties.style}'\" else '')\n              topLevel: block.level == 1\n              level: block.level\n              stars: m[HL_LEVEL]\n              maintext: @renderOrg(opts, cleanOrg(block.text.substring(m[HL_LEVEL].length))) + optWrench(block)\n              children: (opts.data.children block)\n              sidebars: sidebars,\n              targets\n          else\n            text = \"<span id='#{prefix}#{block._id}' data-block='#{block.type}'>\"\n            text += fancyHtml block.text\n            id = block.next\n            while id && id != next\n               [nextText, id] = @render opts, opts.data.getBlock(id), prefix\n               text += nextText\n            text += \"</span>\"\n            maybeReplaceHtml block, prefix, text, replace\n            [text, next]\n        getSidebars: (opts, block)->\n          if block && (block.level == 1 || !block.prev) && !isSidebar(block)\n            sidebars = []\n            while isSidebar block = opts.data.nextSibling block\n              if !opts.shouldHide(block) then sidebars.push block\n            if sidebars.length then sidebars\n        renderFirstBlocks: (opts, block, prefix, replace)->\n          if hasView 'leisure-top-chunk'\n            if plain = opts.isToggled block\n              UI.context.viewAttrs = _.merge {class: 'plain'}, UI.context.viewAttrs ? {}\n            text = ''\n            cur = block\n            UI.context.currentView = targets = replacementTargets block, prefix, replace\n            while !(cur.type == 'headline' && cur.level == 1)\n              [txt, next] = if plain then plainMode.render opts, cur, prefix\n              else @renderNontop opts, cur, prefix\n              text += txt\n              if !next then break\n              cur = opts.getBlock next\n            @renderView 'leisure-top-chunk', null, next,\n              id: prefix + block._id\n              text: text\n              topLevel: !block.prev\n              EOL: '\\n',\n              targets\n          else @renderNontop opts, block, prefix\n        renderChunk: (opts, block, prefix, replace)->\n          viewType = 'leisure-chunk'\n          UI.context.currentView = targets = replacementTargets block, prefix, replace\n          if hasView viewType\n            @renderView viewType, null, block.next,\n              id: prefix + block._id\n              firstText: isFirstText opts.data, block\n              text: @renderOrgChunk opts, blockOrg opts.data, block\n              topLevel: !block.prev\n              EOL: '\\n',\n              targets\n          else @renderOrgBlock opts, block, prefix, replace\n        renderCode: (opts, block, prefix, replace)->\n          key = \"leisure-code\"\n          org = blockOrg opts.data, block\n          hideResults = !showsResults block\n          {name, source, error, results} = items = getCodeItems org.children?[0] ? org\n          lang = if results && results.text.length > results.contentPos && !showsCode block then 'results-only'\n          else if items.source instanceof HTML then 'inline-html' else block.language\n          if hasView key, lang\n            nameBoiler = if name && m = name.text.match keywordRE\n              m[KW_BOILERPLATE]\n            # this argument object to renderView is total overkill\n            UI.context.currentView = targets = replacementTargets block, prefix, replace\n            sourceData = {\n              id: prefix + block._id\n              codeItems: items\n              language: block.language\n              hideResults\n              block\n              header: block.text.substring 0, block.codePrelen\n              source: blockSource block\n              footer: block.text.substring block.text.length - block.codePostlen - 1, source.end() - 1\n              nameBoiler: nameBoiler ? ''\n              nameText: if name then name.text.substring nameBoiler.length, name.text.length - 1 else ''\n              name: if name then name.text.substring name.info else ''\n              afterName: if name then @renderOrg opts, cleanOrg(block.text.substring name.end(), source.offset), true else ''\n              inter: @interstitialCode block, source, error, results\n              results: if !results then ''\n              else if hideResults then \"<span class='hidden'>#{escapeHtml results.text}</span>\"\n              else resultsArea opts, results.text, block\n              beforeResults: block.text.substring 0, results?.offset ? source.end()\n            }\n            sourceData.text = @renderCodeOrg opts, sourceData\n            @renderView key, lang, block.next, sourceData, targets\n          else plainMode.render opts, block, prefix, replace\n        interstitialCode: (block, source, error, results)->\n          if error then (escapeHtml(block.text.substring source.end(), error.offset) +\n            \"<span class='hidden'>#{escapeHtml error.text}</span>\" +\n            escapeHtml block.text.substring error.end(), results?.offset ? block.text.length)\n          else escapeHtml block.text.substring source.end(), results?.offset ? block.text.length\n        renderOrgBlock: (opts, block, prefix, replace)->\n          text = \"<span id='#{block._id}'>#{@renderOrg opts, blockOrg(opts.data, block), true}</span>\"\n          maybeReplaceHtml block, prefix, replace\n          [text, block.next]\n        renderCodeOrg: (opts, context)->\n          block = context.block\n          {name, source, error, results} = context.codeItems\n          text = ''\n          pos = 0\n          [pos, text] = @renderCodeSegment opts, 'name', pos, text, context\n          [pos, text] = @renderCodeSegment opts, 'source', pos, text, context\n          [pos, text] = @renderCodeSegment opts, 'error', pos, text, context\n          [pos, text] = @renderCodeSegment opts, 'results', pos, text, context\n          if pos < block.text.length then text += fancyHtml block.text.substring pos\n          text\n        renderCodeSegment: (opts, name, pos, text, context)->\n          if org = context.codeItems[name]\n            block = context.block\n            if hasView key = \"leisure-code-#{name}\", block.language\n              if org.offset > pos\n                text += fancyHtml block.text.substring pos, org.offset\n              text += (@renderView key, block.language, null, context)[0]\n              [org.end(), text]\n            else if name == 'results' then [org.end(), resultsArea opts, org.allText(), block]\n            else [pos, text]\n          else [pos, text]\n        renderOrgChunk: (opts, org)->\n          t = @renderOrg opts, org, true\n          if m = t.match /\\n$/\n            \"<span class='org-chunk'>#{t.substring 0, t.length - 1}</span><span class='hidden'>\\n</span>\"\n          else \"<span class='org-chunk'>#{t}</span>\"\n        renderExample: (opts, org)->\n          start = org.text.substring 0, org.contentPos\n          text = org.exampleText()\n          end = org.text.substring org.contentPos + org.contentLength\n          if hasView key = \"leisure-example\"\n            (@renderView key, null, null,\n              start: start\n              text: text\n              end: end\n              org: org)[0]\n          else \"<span class='hidden'>#{escapeHtml start}</span><span class='example'>#{fancyHtml text}</span><span class='hidden'>#{escapeHtml end}</span>\"\n        renderOrg: (opts, org, start, noName)->\n          if !noName && ([name, named] = namedNode org) && named\n            if named != org then return ''\n            org = named\n            boiler = name.text.substring 0, name.text.length - name.info.length\n            nameText = \"<div><span class='hidden'>#{escapeHtml boiler}</span><span class='org-name'>#{escapeHtml name.info}</span></div>\"\n            while (name = name.next) != org\n              nameText += @renderOrg opts, name, start, true\n          else nameText = ''\n          text = if org instanceof SimpleMarkup then @renderSimple opts, org\n          else if org instanceof Link then @renderLink opts, org\n          else if org instanceof Fragment\n            #(@renderOrg opts, child for child, i in org.children).join ''\n            (@renderOrg opts, child for child, i in mergeMeat(org).children).join ''\n          else if org instanceof ListItem then @renderList opts, org\n          else if org instanceof Drawer then @renderDrawer opts, org\n          else if org instanceof Example then @renderExample opts, org\n          else if org instanceof Keyword && org.name.toLowerCase() == 'title'\n            @renderTitle opts, org\n          else insertBreaks fancyHtml org.allText()\n          text = nameText + text\n          if start then prefixBreak text else text\n        renderHtml: (opts, org)->\n          \"<span class='hidden'>#{escapeHtml org.leading}</span>#{$(org.content)[0].outerHTML}<span class='hidden'>#{escapeHtml org.trailing}</span>\"\n        renderList: (opts, org)->\n          classifyListItems org\n          text = if org.firstItem then '<ul>' else ''\n          text += \"<li><span class='hidden'>#{escapeHtml org.text.substring 0, org.contentOffset}</span>#{(@renderOrg opts, child for child in org.children).join ''}\"\n          for i in [0...org.closeCount]\n            text += '</ul>'\n          text\n        renderTitle: (opts, org)-> \"<span class='hidden'>#{escapeHtml org.text}</span>\"\n        renderLink: (opts, org)->\n          if leisureMatch = org.isLeisure()\n            [ignore, objectName, viewName, typeName] = leisureMatch\n            data = UI.context.opts.data\n            error = if !obj = data.getBlockNamed objectName\n              \"No object named #{objectName}\"\n            else if !obj = data.getYaml block = data.getBlockNamed objectName\n              \"Object #{objectName} isn't yaml\"\n            else if !(type = (typeName || obj?.type))\n              \"No type field in object #{objectName}\"\n            else if !hasView type, viewName\n              \"No view '#{viewKey type, viewName}'\"\n            if error\n              if objectName\n                attrs = \" data-view-block-name='#{objectName}'#{if viewName then ' data-view-name=\\'' + viewName + '\\'' else ''}\"\n                attrs += \" data-requested-view='#{objectName}\"\n                if viewName then attrs += \"/#{viewName}\"\n                attrs += \"'\"\n              else attrs = ''\n              \"<span class='error link' title='#{escapeAttr error}'#{attrs}><b data-noncontent contenteditable='false'>✖</b>#{fancyHtml org.allText()}</span></span>\"\n            else\n              content = renderView type, viewName, obj, null, block, objectName\n              \"<span class='hidden link'>#{escapeHtml org.allText()}</span><span data-noncontent contenteditable='false'>#{content}</span>\"\n          else if org.isImage()\n            title = (if desc = org.descriptionText() then \" title='#{fancyHtml desc}'\" else \"\")\n            src = fancyHtml org.path\n            if org.path.indexOf('file:') == 0 then src = prevImageSrc src\n            \"#{opts.renderImage src, title}<span class='hidden link'>#{escapeHtml org.allText()}</span>\"\n          else\n            guts = ''\n            for c in org.children\n              guts += @renderOrg opts, c\n            if !guts then \"<span class='hidden link'>[[</span><a onclick='Leisure.followLink(event)' href='#{org.path}'>#{org.path}</a><span class='hidden'>]]</span>\"\n            else \"<span class='hidden link'>[[#{org.path}][</span><a onclick='Leisure.followLink(event)' href='#{org.path}'>#{guts}</a><span class='hidden'>]]</span>\"\n        renderSimple: (opts, org)->\n          guts = ''\n          for c in org.children\n            guts += @renderOrg opts, c\n          text = switch org.markupType\n            when 'bold' then \"<b>#{guts}</b>\"\n            when 'italic' then \"<i>#{guts}</i>\"\n            when 'underline' then \"<span style='text-decoration: underline'>#{guts}</span>\"\n            when 'strikethrough' then \"<span style='text-decoration: line-through'>#{guts}</span>\"\n            when 'code' then \"<code>#{guts}</code>\"\n            when 'verbatim' then \"<code>#{guts}</code>\"\n            else guts\n          \"<span class='hidden'>#{org.text[0]}</span>#{text}<span class='hidden'>#{goodText org.text[0]}</span>\"\n        renderDrawer: (opts, org)->\n          if org.name.toLowerCase() == 'properties' then \"<span class='hidden'>#{escapeHtml org.allText()}</span>\"\n          else \"<span class='org-properties'>#{fancyHtml org.allText()}</span>\"\n        showingSlides: (opt)-> opt.editor.node.is '.slides'\n        setSlideMode: (opt, flag)->\n          if flag\n            opt.editor.node.addClass 'slides'\n            slides = @getSlides opt\n            slides.removeClass('firstSlide').removeClass('lastSlide')\n            slides.first().addClass 'firstSlide'\n            slides.last().addClass 'lastSlide'\n            @showSlide opt, slides.first()\n          else\n            opt.editor.node.removeClass 'slides'\n            $(opt.editor.node).find('.currentSlide').removeClass 'currentSlide'\n            opt.currentSlide = null\n        getSlides: (opt)->\n          $(opt.editor.node).find('[data-view=leisure-top-headline], [data-view=leisure-top-chunk]')\n        firstSlide: (opt)-> @getSlides(opt).first()\n        lastSlide: (opt)-> @getSlides(opt).last()\n        showSlide: (opt, slide, slides)->\n          slides = slides ? @getSlides opt\n          top = $(opt.editor.node)\n          top.removeClass('firstSlide').removeClass('lastSlide')\n          $(opt.editor.node).find('.currentSlide').removeClass 'currentSlide'\n          $(slide).addClass 'currentSlide'\n          if $(slide)[0] == slides[0] then top.addClass 'firstSlide'\n          if $(slide)[0] == _.last(slides) then top.addClass 'lastSlide'\n          opt.currentSlide = opt.idForNode $(slide).find('[data-block]:first')\n        showNextSlide: (opt)->\n          if @showingSlides(opt)\n            next = $('.currentSlide').next('[data-view=leisure-top-headline], [data-view=leisure-top-chunk]')\n            if next.length\n              @showSlide opt, next\n              return true\n          false\n        showPrevSlide: (opt)->\n          if @showingSlides(opt)\n            prev = $('.currentSlide').prev('[data-view=leisure-top-headline], [data-view=leisure-top-chunk]')\n            if prev.length\n              @showSlide opt, prev\n              return true\n          false\n\n      isFirstText = (source, block)->\n        if (block.type == 'chunk' || (block.type == 'headline' && block.level > 1)) && (parent = source.parent(block)) && parent.level == 1\n          original = block\n          while (block = source.previousSibling block) && !maybeFirst block then\n          !block && findFirstLetter original.text\n\n      maybeFirst = (block)->\n        (block.type in ['chunk', 'headline'] && findFirstLetter block.text) || (block.type == 'code' && block.language != 'html')\n\n      findFirstLetter = (text)-> text.match(/[a-zA-Z0-9]/)?[0][0].toUpperCase()\n\n      pendingTooltips = null\n\n      addPendingTooltip = (opts, blockId)->\n        if !pendingTooltips\n          pendingTooltips = new Map()\n          pushPendingInitialzation ->\n            nodes = new Set()\n            pendingTooltips.forEach (ids, opts)->\n              for id in ids\n                for node in opts.nodeForId(id).find('[title]')\n                  nodes.add node\n            nodes.forEach (node)->\n              node.INIT_TOOLTIP = true\n              $(node).tooltip content: $(node).attr 'title'\n            pendingTooltips = null\n        if !pendingTooltips.get opts then pendingTooltips.set opts, []\n        pendingTooltips.get(opts).push blockId\n\nnamedNode(org) returns [name, node] if org is a name followed by optional meat\nand a nameable node.\n\nReturns [] if org does not fit the pattern.\n\n      isMeat = (org)-> org && (org instanceof SimpleMarkup || org.constructor == Meat)\n\n      namedNode = (org)->\n        end = org\n        if isMeat(org) || org instanceof Example || org instanceof Drawer\n          while isMeat org = org.prev then\n        if org instanceof Keyword && (org.name.match /^name$/i) && name = org\n          if name == end then end = end.next\n          while isMeat(end) && end = end.next then\n          if end instanceof Example || end instanceof Drawer\n            return [name, end]\n        []\n\n      isSidebar = (block)-> block?.properties?.note == 'sidebar'\n\n      optWrench = (block)->\n        if block.properties && !_.isEmpty block.properties\n          props = \"<div><b>Properties</b></div>\"\n          for k, v of block.properties\n            props += \"<p>:#{k}: #{v}\"\n          wrench = $(\"<i class='fa fa-wrench'></i>\")[0]\n          wrench.setAttribute 'title', props\n          wrench.outerHTML\n        else ''\n\n      insertBreaks = (text)-> text.replace /\\n\\n/g, (match, offset, str)->\n        if str[offset + 2] == '\\n'\n          \"\\n<span class='hidden'>\\n</span><span contenteditable='false'><div style='white-space: pre; height: 2em' data-noncontent></div></span><div style='height: 1em; white-spaceX: pre' data-noncontent>\\n</div><span class='hidden'></span>\"\n        else \"\\n<span class='hidden'>\\n</span><span contenteditable='false'><div style='height: 2em; white-space: pre' data-noncontent></div></span>\"\n\n      prefixBreak = (text)-> if text[0] == '\\n' && text[1] != '\\n' then \"<span class='hidden'>\\n</span><div style='height: 2em; white-space: pre' data-noncontent contenteditable='false'>\\n</div>#{text.substring 1}\" else text\n\n      createValueSliders = ->\n        for num in $(UI.context.currentView).find('.token.number')\n          $(num).on 'click', -> showValueSlider this\n\n      showValueSlider = (number)->\n        editor = findEditor(number)\n        data = editor.options.data\n        widget = editor.node.find('[name=valueSlider]')\n        blockOff = editor.blockOffset number, 0\n        currentSlider =\n          editor: editor\n          data: data\n          widget: widget\n          sliding: true\n          number: Number number.textContent\n        widget.removeClass 'hidden'\n        widget.position my: 'center top', at: 'center bottom', of: number\n        data.addMark '__slider__', data.docOffsetForBlockOffset blockOff\n        setSliderValue Number number.textContent\n\n      setSliderValue = (val)->\n        widget = currentSlider.widget\n        if -50 <= val <= 50\n          widget.slider 'option', 'min', Math.min -100, -Math.abs val * 2\n          widget.slider 'option', 'max', Math.max 100, Math.abs val * 2\n        else if val > 50\n          widget.slider 'option', 'min', 0\n          widget.slider 'option', 'max', val * 2\n        else\n          widget.slider 'option', 'min', val * 2\n          widget.slider 'option', 'max', 0\n        widget.slider 'value', val\n\n      setSliding = (flag)->\n        if !flag && currentSlider then setSliderValue currentSlider.widget.slider 'value'\n        setTimeout (->currentSlider?.sliding = flag), 1\n\n      slideValue = ->\n        if (cs = currentSlider) && !cs.editor.options.awaitingGuard\n          start = cs.data.getMarkLocation '__slider__'\n          blockOff = cs.data.blockOffsetForDocOffset start\n          block = cs.editor.options.getBlock blockOff.block\n          m = numPat.exec block.text.substring blockOff.offset\n          delta = currentSlider.widget.slider('value') - cs.number\n          cs.number = currentSlider.widget.slider('value')\n          newText = String currentSlider.widget.slider 'value'\n          if delta != 0\n            if block.local\n              cs.editor.options.replaceText {start, end: start + m[0].length, text: newText, source: 'edit'}\n            else\n              if pos = getSliderPosition()\n                pos.delta = delta\n                sendSliderChange pos\n\n      sendSliderChange = (pos)->\n        cs = currentSlider\n        if cs.awaitingChange\n          if cs.nextChange then pos.delta += cs.nextChange.delta\n          cs.nextChange = pos\n        else\n          cs.awaitingChange = true\n          {start, offset, numberCount, numberOffset, delta} = pos\n          cs.editor.options.data.collaborativeCode.doSlideValue(cs.editor.options, start, offset, numberCount, numberOffset, delta)\n            .then ->\n              cs.awaitingChange = false\n              if pos = cs.nextChange\n                cs.nextChange = null\n                sendSliderChange pos\n\n      doSlideValue = ({slaveId}, opts, start, offset, numberCount, numberOffset, delta)->\n        #console.log \"Slider#{if slaveId then ' from slave ' + slaveId else ''} start: #{start}, offset: #{offset}, numberCount: #{numberCount}, numberOffset: #{numberOffset}, change: #{delta}\"\n        {block} = opts.data.blockOffsetForDocOffset start\n        node = opts.nodeForId block\n        block = opts.data.getBlock block\n        cur = opts.editor.domCursor(node, 0).firstText()\n        sliderNode = $(cur.mutable().forwardChars(offset, true).firstText().node).closest '.token.number'\n        if sliderNode.length\n          numCur = opts.editor.domCursor sliderNode[0], 0\n          offset = cur.getTextTo(numCur).length\n        else\n          numbers = node.find('.token.number')\n          if !numbers.length then return null\n          else if numbers.length == numberCount\n            numCur = opts.editor.domCursor numbers[numberOffset], 0\n            offset = cur.getTextTo(numCur).length\n          else\n            offset = 0\n            targetDistance = Number.MAX_VALUE\n            for number in numbers\n              number = numbers[testPos]\n              numCur = opts.editor.domCursor number, 0\n              offset += cur.getTextTo(numCur).length\n              cur = numCur\n              dist = offset - offset\n              if targetDistance > dist\n                targetDistance = dist\n              else if offset > offset then break\n        m = numPat.exec block.text.substring offset\n        newText = String delta + Number m[0]\n        start = offset + opts.data.offsetForBlock block\n        opts.replaceText {start, end: start + m[0].length, text: newText, source: 'code'}\n\n      getSliderPosition = ->\n        cs = currentSlider\n        start = cs.data.getMarkLocation '__slider__'\n        opts = cs.editor.options\n        {block, offset} = cs.data.blockOffsetForDocOffset start\n        node = opts.nodeForId block\n        cursor = opts.domCursor(node[0], 0).mutable().forwardChars(offset, true).firstText()\n        sliderNode = $(cursor.node).closest '.token.number'\n        if !sliderNode.length\n          cursor.backwardChar()\n          sliderNode = $(cursor.node).closest '.token.number'\n          if !sliderNode.length\n            console.error \"Could not find slider node for block: #{block}, offset: #{offset - 1}, '#{cs.data.blocks[block].text[offset]}', node:\", cursor.node\n            return\n        nth = 0\n        numbers = node.find('.token.number')\n        for number in numbers\n          if number == sliderNode[0]\n            return {start, offset, numberCount: numbers.length, numberOffset: nth}\n          nth++\n\n      mayHideValueSlider = ->\n        if currentSlider && !currentSlider?.sliding\n          currentSlider.data.removeMark '__slider__'\n          currentSlider.widget.addClass 'hidden'\n          currentSlider = null\n\n      showsCode = (codeBlock)->\n        exports = codeBlock.codeAttributes?.exports?.split(' ')\n        !exports || !('results' in exports)\n\n      showsResults = (codeBlock)->\n        exports = codeBlock.codeAttributes?.exports?.split(' ')\n        !exports || !('code' in exports)\n\n      _workSpan = null\n\n      workSpan = -> _workSpan || createWorkSpan()\n\n      createWorkSpan = -> _workSpan = $(\"<span></span>\")\n\n      goodHtml = (text)-> workSpan().html(text).html() ? ''\n\n      goodText = (text)-> workSpan().text(text).html() ? ''\n\n      isViewResult = (block)-> block.codeAttributes?.results?.match /\\bview\\b(?:\\(([^\\/]*(?:\\/(.*))?)\\))?/i\n\n      resultsArea = (opts, results, block)->\n        firstResult = results.indexOf('\\n') + 1\n        if m = isViewResult(block)\n          obj = parseYaml results.substring(firstResult).replace /(^|\\n): /gm, '$1'\n          [ignore, type, viewName] = m\n          type = type ? obj.type\n          {name: objectName} = blockCodeItems opts, block\n          #\"<span class='hidden'>#{escapeHtml results}</span>#{renderView type, viewName, obj, null, block, objectName}\"\n          \"<span class='hidden'>#{escapeHtml results}</span>#{renderView type, viewName, obj, null, null, null, null, 'data-noncontent'}\"\n        else if false && isYamlResult block\n          \"<span class='hidden'>#{results.substring 0, firstResult}</span><span class='yaml results-verbatim' data-noncontent>#{results.substring(firstResult).replace /^(: )(.*\\n)/gm, (m, g1, g2)-> goodHtml(g2)}</span>\"\n        else if !firstResult || results[firstResult] == ':'\n          \"<span class='hidden'>#{goodText results}</span><span class='results-verbatim' data-noncontent>#{results.substring(firstResult).replace /^(: )(.*\\n)/gm, (m, g1, g2)-> goodHtml(g2)}</span>\"\n        else \"<span class='hidden'>#{results.substring 0, firstResult}</span>#{fancyMode.renderOrg opts, cleanOrg results.substring(firstResult)}\"\n\n      plainEditDiv = (div, data)->\n        $(div).addClass 'plain'\n        new LeisureEditCore $(div), new OrgEditing data\n\n      fancyEditDiv = (div, data)->\n        options = new OrgEditing(data).setMode fancyMode\n        data.openRegistration()\n        data.registerCollaborativeCode 'doSlideValue', doSlideValue\n        data.registerCollaborativeCode 'viewBoundSet', (context, name, value)-> data.setData name, value\n        data.closeRegistration()\n        new LeisureEditCore $(div), options\n\n      prismAliases =\n        html: 'handlebars'\n        coffee: 'coffeescript'\n        cs: 'coffeescript'\n        js: 'javascript'\n        lisp: 'scheme'\n        leisure: 'leisure'\n\n      prismHighlight = (lang, text)->\n        if l = prismAliases[lang] then lang = l\n        if Prism.languages[lang]\n          Prism.highlight text, Prism.languages[lang], lang\n        else \"<span class='unknown-language'>#{fancyHtml text}</span>\"\n\n      replacementTargets = (block, prefix, replace)->\n        if replace && (targets = $(\"##{prefix}#{block._id}\")) && targets.length\n          targets.closest('[data-view]')\n\n      maybeReplaceHtml = (block, prefix, html, replace)->\n        (replacementTargets block, prefix, replace)?.replaceWith html\n        if replace then initializePendingViews()\n\n      cleanOrg = (text)-> blockOrg null, text: text\n\n      mergeMeat = (fragment)->\n        newChildren = []\n        prevMeat = null\n        for c, i in fragment.children\n          if c.__proto__ == Meat.prototype\n            if !prevMeat\n              prevMeat = new Meat c.text, c.offset\n              newChildren.push prevMeat\n            else prevMeat.text += c.text\n          else\n            if prevMeat then prevMeat = null\n            newC = _.clone c\n            newC.__proto__ = c.__proto__\n            newChildren.push newC\n        new Fragment(fragment.offset, newChildren).linkNodes()\n\nExports\n\n      Object.assign Leisure, {\n        plainMode\n        fancyMode\n        toggleSlideMode\n        blockVars\n        createValueSliders\n        slideValue\n        mayHideValueSlider\n        setSliding\n        cleanOrg\n        showsCode\n        showsResults\n      }\n\n      {\n        plainMode\n        fancyMode\n        plainEditDiv\n        fancyEditDiv\n        doSlideValue\n      }\n"
  ]
}