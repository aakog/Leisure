{
  "version": 3,
  "file": "atomSupport.js",
  "sourceRoot": "..",
  "sources": [
    "src/atomSupport.litcoffee"
  ],
  "names": [],
  "mappings": "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",
  "sourcesContent": [
    "Connect to the Atom editor. Atom needs line/col coordinates so we need to Map\noffsets <--> line/col.\n\n    define ['lodash', './ui', './editor', './editorSupport', './diag', './eval', './advice', 'fingertree'], (_, UI, Editor, EditorSupport, Diag, Eval, Advice, Fingertree)->\n      if !window.atomView then return configureAtom: ->\n      {\n        getDocumentParams\n        basicDataFilter\n      } = EditorSupport\n      {\n        Point\n      } = parent.require 'atom'\n      path = parent.require 'path'\n\n      LINE_END = /\\r\\n|\\r|\\n/g\n      NON_LEISURE_LINE_END = /\\r\\n|\\r/g\n\n      class AtomSupport\n        changing: false\n        constructor: (@opts, text)->\n          textLines = text.split /\\n/\n          # console.log 'text lines', textLines\n          # console.log 'text', text\n          if _.last(textLines) == '' then textLines.pop()\n          @atomLines = Fingertree.fromArray (line.length + 1 for line in textLines),\n            identity: -> lines: 0, width: 0\n            measure: (v)-> lines: 1, width: v\n            sum: (a, b)-> lines: a.lines + b.lines, width: a.width + b.width\n          @opts.data.addFilter\n            __proto__: basicDataFilter\n            replaceText: (data, {start, end, text, source})=>\n              if source != 'atom'\n                try\n                  @changing = true\n                  startOff = @atomOffset start\n                  endOff = @atomOffset end\n                  # console.log \"Leisure replace #{start}, #{end}, #{text}\"\n                  # console.log \"-> atom replace [#{startOff.row}, #{startOff.column}], [#{endOff.row}, #{endOff.column}], #{text}\"\n                  atomView.editor.setTextInBufferRange [startOff, endOff], text\n                finally\n                  @changing = false\n        splitForLine: (line)-> @atomLines.split (m)-> m.lines > line\n        atomOffset: (leisureOffset)->\n          m = (@atomLines.split (m)-> m.width > leisureOffset)[0].measure()\n          Point.fromObject [m.lines, leisureOffset - m.width]\n        leisureOffset: (atomOffset)->\n          p = Point.fromObject atomOffset\n          @splitForLine(p.row)[0].measure().width + p.column\n        handleAtomTextChanged: (e)->\n          # console.log 'Atom text event', e\n          start = @leisureOffset [e.start, 0]\n          end = @leisureOffset [e.end + 1, 0]\n          text = leisureText atomView.editor.getTextInRange [[e.start, 0], [e.end + 1 + (e.bufferDelta ? 0), 0]]\n          if @opts.data.getDocSubstring(start, end) != text\n            # console.log \"-> Leisure replace#{if @changing then ' (index update only)' else ''}: \", {start, end, text}\n            [first, rest] = @splitForLine e.start\n            for i in [e.start..e.end]\n              if rest.isEmpty() then break\n              rest = rest.removeFirst()\n            t = (if _.last(text) == '\\n' then text.substring(0, text.length - 1) else text)\n            for line in t.split LINE_END\n              first = first.addLast line.length + 1\n            @atomLines = first.concat rest\n            if !@changing then @opts.replaceText {start, end, text, source: 'atom'}\n          # else console.log 'Ignoring redundant event'\n\n\n      leisureText = (text)-> text.replace NON_LEISURE_LINE_END, '\\n'\n\n      configureAtom = (opts, cont)->\n        $(document).ready ->\n          if document.location.search.length > 1 && !connected\n            connected = true\n            {connect:con} = getDocumentParams()\n            if con\n              u = new URL con\n              if u.protocol == 'atom:' && m = u.pathname.match /^\\/\\/(.*)$/\n                [ignore, editorId] = m\n                # console.log \"CONNECT TO ATOM EDITOR: #{editorId}\", atomView, parent.atom\n                text = atomView.editor.getText()\n                window.atomSupport = new AtomSupport opts, leisureText text\n                opts.loadName = \"file:#{path.join atomView.editor.getDirectoryPath(), atomView.editor.getFileName()}\"\n                opts.load opts.loadName, leisureText text\n                cont opts\n                #opts.load 'atom', '* heading\\n#+BEGIN_SRC leisure :results def\\n3+4\\n#+END_SRC\\n'\n\n      {\n        configureAtom\n      }\n"
  ]
}