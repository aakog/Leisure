{
  "version": 3,
  "file": "leisure-client-adapter.js",
  "sourceRoot": "..",
  "sources": [
    "src/leisure-client-adapter.litcoffee"
  ],
  "names": [],
  "mappings": "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",
  "sourcesContent": [
    "Leisure Cliient Adapter\n=======================\nCopyright (C) 2015, Bill Burdick, Roy Riggs, TEAM CTHULHU\n\nPeer-to-peer connection between Leisure instances.  They send \"final\"\ndocument changes to each other, meaning that all document computations\nare complete and only the document changes need be replicated.\n\nLicensed with ZLIB license.\n=============================\n\nThis software is provided 'as-is', without any express or implied\nwarranty. In no event will the authors be held liable for any damages\narising from the use of this software.\n\nPermission is granted to anyone to use this software for any purpose,\nincluding commercial applications, and to alter it and redistribute it\nfreely, subject to the following restrictions:\n\n1. The origin of this software must not be misrepresented; you must not\nclaim that you wrote the original software. If you use this software\nin a product, an acknowledgment in the product documentation would be\nappreciated but is not required.\n\n2. Altered source versions must be plainly marked as such, and must not be\nmisrepresented as being the original software.\n\n3. This notice may not be removed or altered from any source distribution.\n\n    'use strict'\n    define ['jquery', 'immutable', './utilities', './editor', './editorSupport', 'sockjs', './advice', './common', 'bluebird', 'lib/ot/ot', './replacements'], (jq, immutable, Utilities, Editor, Support, SockJS, Advice, Common, Bluebird, OT, Rep)->\n      {\n        Map\n        Set\n      } = window.Immutable = immutable\n      {\n        ajaxGet\n      } = Utilities\n      {\n        DataStore\n        preserveSelection\n        blockText\n        computeNewStructure\n      } = Editor\n      {\n        OrgData\n        getDocumentParams\n        editorToolbar\n        basicDataFilter\n        replacementFor\n        makeImageBlob\n      } = Support\n      {\n        changeAdvice\n        afterMethod\n        beforeMethod\n        callOriginal\n      } = Advice\n      {\n        noTrim\n      } = Common\n      {\n        Promise\n      } = Bluebird\n      {\n        TextOperation\n        Selection\n        EditorClient\n      } = OT\n      {\n        isRetain\n        isInsert\n        isDelete\n      } = TextOperation\n      {\n        Replacements\n        replacements\n      } = Rep\n\n      fileTypes =\n        jpg: 'image/jpeg'\n        png: 'image/png'\n        gif: 'image/gif'\n        bmp: 'image/bmp'\n        xpm: 'image/xpm'\n        svg: 'image/svg+xml'\n\n      diag = (args...)-> console.log args...\n\nPeer is the top-level object for a peer-to-peer-capable Leisure instance.\n\n      class Peer\n        constructor: ->\n          @data = new OrgData()\n          @namd = randomUserName()\n          @guardedChangeId = 0\n          @guardPromises = {}\n        setEditor: (@editor)->\n        disconnect: ->\n          @con?.close()\n          @con = null\n        connect: (@url, @connectedFunc)->\n          console.log \"CONNECTED\"\n          @con = new SockJS @url\n          opened = false\n          new Promise (resolve, reject)=>\n            @con.onopen = =>\n              opened = true\n              @con.onerror = => @closed()\n              resolve()\n            @con.onerror = -> if !openend then reject()\n          @con.onmessage = (msg)=> @handleMessage JSON.parse msg.data\n          @con.onclose = => @closed()\n          peer = this\n          @editor.options.data.peer = this\n          configureOpts @editor.options\n          @editor.on 'selection', => @getSelection()\n        opFor: ({start, end, text}, length)->\n          op = new TextOperation()\n          if start > 0 then op = op.retain start\n          if end > start then op = op.delete end - start\n          if text.length then op = op.insert text\n          if length > end then op = op.retain length - end\n          op\n        opsFor: (repls, totalLength)->\n          if repls instanceof Replacements\n            @baseOpsFor totalLength, (f)->\n              t = repls.replacements\n              while !t.isEmpty()\n                {offset, length, text} = t.peekFirst()\n                t = t.removeFirst()\n                f offset, length, text\n          else if _.isArray repls then @baseOpsFor totalLength, (f)->\n            last = 0\n            for repl in repls by -1\n              f repl.start - last, repl.end - repl.start, repl.text\n              last = repl.end\n        baseOpsFor: (totalLength, iterate)->\n          op = new TextOperation()\n          cursor = 0\n          iterate (offset, length, text)->\n            if offset > 0 then op = op.retain offset\n            if length > 0 then op = op.delete length\n            if text.length then op = op.insert text\n            cursor += offset + length\n          if totalLength > cursor then op = op.retain totalLength - cursor\n          op\n        inverseOpFor: ({start, end, text}, len)->\n          @opFor (\n            start: start\n            end: start + text.length\n            text: @data.getDocSubstring start, end), len\n        type: 'Unknown Handler'\n        close: ->\n          console.log \"CLOSING: #{@type}\"\n          @con.close()\n        closed: ->\n          changeAdvice @editor.options, false,\n            changesFor: p2p: true\n            doCollaboratively: p2p: true\n        send: (type, msg)->\n          msg.type = type\n          #diag \"SEND #{JSON.stringify msg}\"\n          @con.send JSON.stringify msg\n        handleMessage: (msg)->\n          #diag \"RECEIVE #{JSON.stringify msg}\"\n          if !(msg.type of @handler)\n            console.log \"Received bad message #{msg.type}\", msg\n            @close()\n          else @handler[msg.type].call this, msg\n        finishConnected: ({@id, peers, revision})->\n          @editorClient = new EditorClient revision, peers, this, this\n          @newConnectionFunc _.size @editorClient.clients\n          @connectedFunc?(this)\n          @connectedFunc = null\n        handler:\n          log: (msg)-> console.log msg.msg\n          connection: ({peerId, peerName})->\n            @serverCallbacks.set_name peerId, peerName\n            @newConnectionFunc _.size @editorClient.clients\n          disconnection: ({peerId})->\n            @serverCallbacks.client_left peerId\n            @newConnectionFunc _.size @editorClient.clients\n          error: (msg)->\n            console.log \"Received error: #{msg.error}\", msg\n            @close()\n          ack: -> @serverCallbacks.ack()\n          ackGuard: ({guardId, operation})->\n            @guardPromises[guardId][0](operation)\n            delete @guardPromises[guardId]\n          rejectGuard: (ack)->\n            @guardPromises[ack.guardId][1](ack)\n            delete @guardPromises[ack.guardId]\n          operation: ({peerId, operation, meta})->\n            @fromServer = true\n            @editor.options.data.allowObservation => @serverCallbacks.operation operation\n            @fromServer = false\n            @serverCallbacks.selection peerId, meta\n          selection: ({peerId, selection})->\n            @serverCallbacks.selection selection\n          setName: ({peerId, name})->\n            @serverCallbacks.set_name peerId, name\n            @newConnectionFunc _.size @editorClient.clients\n        createSession: (@host, connectedFunc, @newConnectionFunc)->\n          peer = this\n          @type = 'Master'\n          @newConnectionFunc = @newConnectionFunc ? ->\n          @handler =\n            __proto__: Peer::handler\n            connected: (msg)->\n              @guid = msg.guid\n              @connectUrl = new URL(\"join-#{@guid}\", @url)\n              @editorClient = new EditorClient 0, {}, this, this\n              @finishConnected msg\n            slaveConnect: (msg)->\n              @send 'slaveApproval', slaveId: msg.slaveId, approval: true\n            slaveDisconnect: (msg)->\n            requestFile: ({slaveId, filename, id})->\n              @editor.options.data.getFile filename, ((content)=>\n                @send 'fileContent', {slaveId, id, content: btoa(content)}), ((failure)->\n                @send 'fileError', {slaveId, id, failure})\n            customMessage: ({name, args, slaveId, msgId})->\n              peer.editor.options._runCollaborativeCode name, slaveId, args\n               .then (result)=> @send 'customResponse', {slaveId, msgId, result}\n               .catch (err)=>\n                 console.error \"Error with custom message name: #{name}, slaveId: #{slaveId}, msgId: #{msgId}\\n#{err.stack}\"\n                 @send 'customError', {slaveId, msgId, err: err.stack}\n          @connect \"http://#{@host}/Leisure/create\", =>\n            @send 'initDoc', doc: @data.getText(), name: @name\n            @docSnap = @data.getText()\n            connectedFunc()\n          @docSnap = @data.getText()\n        connectToSession: (@url, connected, @newConnectionFunc)->\n          @type = 'Slave'\n          @newConnectionFunc = @newConnectionFunc ? ->\n          @localResources = {}\n          @imgCount = 0\n          fileRequestCount = 0\n          customMessageCount = 0\n          pendingRequests = new Map()\n          peer = this\n          getFile = (filename, cont, fail)->\n            p = new Promise (success, failure)->\n              id = \"request-#{fileRequestCount++}\"\n              pendingRequests = pendingRequests.set(id, [success, failure])\n              peer.send 'requestFile', {id, filename}\n            if cont || fail then p.then cont, fail\n            else p\n          changeAdvice @editor.options.data, true,\n            getFile: p2p: (parent)-> getFile\n          Leisure.localActivateScripts @editor.options\n          changeAdvice @editor.options, true,\n            imageError: p2p: (parent)->(img, e)->\n              src = img.getAttribute 'src'\n              if !src.match '^.*:.*'\n                name = src.match(/([^#?]*)([#?].*)?$/)?[1]\n                src = \"#{src}\"\n              else name = src.match(/^file:([^#?]*)([#?].*)?$/)?[1]\n              if name\n                if !img.id then img.id = \"p2p-image-#{peer.imgCount++}\"\n                img.src = ''\n                peer.fetchImage img.id, src\n            doCollaboratively: p2p: (parent)-> (name, args)-> peer.sendCustom name, args\n          @fetchImage = (imgId, src)->\n            if img = $(\"##{imgId}\")[0]\n              if data = @localResources[src]\n                if data instanceof Promise then data.then (data)=>\n                  @replaceImage img, src, data\n                else preserveSelection (range)=> @replaceImage img, src, data\n              else @localResources[src] = new Promise (resolve, reject)=>\n                getFile src, ((file)=>\n                  data = @localResources[src] = makeImageBlob src, file\n                  preserveSelection (range)=> @replaceImage img, src, data\n                  resolve data), reject\n          @replaceImage = (img, src, data)-> setTimeout (=>\n            img.src = data\n            #img.onload = =>\n            ), 0\n          @pendingCustomMessages = {}\n          @handler =\n            __proto__: Peer::handler\n            connected: (msg)->\n              @finishConnected msg\n              @editor.options.load 'shared', msg.doc\n              @docSnap = msg.doc\n            fileContent: ({id, content})->\n              [cont] = pendingRequests.get(id)\n              pendingRequests = pendingRequests.remove(id)\n              cont atob(content)\n            fileError: ({id, failure})->\n              [cont, fail] = pendingRequests.get(id)\n              pendingRequests = pendingRequests.remove(id)\n              fail failure\n            customResponse: ({msgId, result})->\n              [success] = @pendingCustomMessages[msgId]\n              delete @pendingCustomMessages[msgId]\n              success result\n            customError: ({msgId, err})->\n              [..., failure] = @pendingCustomMessages[msgId]\n              delete @pendingCustomMessages[msgId]\n              failure err\n          @sendCustom = (name, args)->\n            new Promise (succeed, fail)=>\n              msgId = \"custom-#{customMessageCount++}\"\n              @pendingCustomMessages[msgId] = [succeed, fail]\n              @send 'customMessage', {name, args, msgId}\n          @connect @url, =>\n            @send 'intro', name: @name\n            connected?()\n        replsForTextOp: (textOp)->\n          repls = []\n          popLastEmpty = ->\n            if (r = _.last repls) && r.start == r.end && r.text.length == 0\n              repls.pop()\n          cursor = 0\n          for op in textOp.ops\n            if isRetain op\n              cursor += op\n              popLastEmpty()\n              repls.push start: cursor, end: cursor, text: ''\n            else if isDelete op\n              cursor -= op\n              _.last(repls).end = cursor\n            else _.last(repls).text += op\n          popLastEmpty()\n          #console.log \"INCOMING REPLACE: #{JSON.stringify repls}\"\n          repls\n        replaceText: (start, end, text)-> @data.replaceText {start, end, text, source: 'peer'}\n        # OT API\n        registerCallbacks: (cb)->\n          if cb.client_left then @serverCallbacks = cb\n          else @editorCallbacks = cb\n        # EditorAdapter methods\n        registerUndo: (@undoFunc)->\n        registerRedo: (@redoFunc)->\n        getValue: -> @data.getText()\n        applyOperation: (op)->\n          preserveSelection (sel)=>\n            if sel.type != 'None'\n              @data.addMark 'selStart', sel.start\n              @data.addMark 'selEnd', sel.start + sel.length\n            for repl in @replsForTextOp op by -1\n              @replaceText repl.start, repl.end, repl.text\n            if sel.type != 'None'\n              sel.start = @data.getMarkLocation 'selStart'\n              sel.length = @data.getMarkLocation('selEnd') - sel.start\n              @data.removeMark 'selStart'\n              @data.removeMark 'selEnd'\n        getSelection: ->\n          sel = @editor.getSelectedDocRange()\n          newSel = if sel.type == 'Caret' then Selection.createCursor sel.start\n          else if sel.type == 'Range'\n            new Selection [new Selection.Range(sel.start, sel.start + sel.length)]\n          else new Selection()\n          newSel.scrollTop = sel.scrollTop\n          newSel.scrollLeft = sel.scrollLeft\n          newSel\n        setSelection: (sel)->\n          if sel.ranges.length\n            @editor.selectDocRange\n              start: sel.ranges[0].start\n              length: sel.ranges[0].end - sel.ranges[0].start\n              scrollTop: sel.scrollTop\n              scrollLeft: sel.scrollLeft\n        setOtherSelection: (sel, color, id)->\n          #$(\".selection-#{id}\").remove()\n          console.log \"OTHER SELECTION: #{JSON.stringify sel}\"\n        # ServerAdapter methods\n        sendSelection: (sel)-> @send 'selection', selection: sel\n        sendOperation: (revision, operation, selection)-> @send 'operation', {revision, operation, selection}\n        sendGuardedOperation: (revision, operation, guards)->\n          #console.log \"GUARD SENT\"\n          guardId = \"guard-#{@guardedChangeId++}\"\n          @send 'guardedOperation', {revision, operation, guards, guardId, selection: @editorClient.selection}\n          new Promise (success, failure)=> @guardPromises[guardId] = [success, failure]\n\n      typeForFile = (name)->\n        [ignore, ext] = name.match /\\.([^#.]*)(#.*)?$/\n        fileTypes[ext]\n\n      configureOpts = (opts)->\n        data = opts.data\n        if !data.peer then return\n        peer = data.peer\n        changeAdvice data, true,\n          replaceText: p2p: (parent)-> (repl)->\n            if repl.source != 'peer'\n              oldLen = @getLength()\n              {start, end, text} = repl\n              newLen = oldLen + text.length - end + start\n              peer.editorCallbacks.change peer.opFor(repl, oldLen), peer.inverseOpFor(repl, newLen)\n            parent repl\n\n      window.randomUserName = randomUserName = (done)->\n        a = 'a'.charCodeAt(0)\n        'user' + (String.fromCharCode a + Math.floor(Math.random() * 26) for i in [0...10]).join\n\n      Object.assign Leisure, {\n        configurePeerOpts: configureOpts\n      }\n\n      {\n        Peer\n      }\n"
  ]
}