{
  "version": 3,
  "file": "todo.js",
  "sourceRoot": "..",
  "sources": [
    "src/todo.litcoffee"
  ],
  "names": [],
  "mappings": "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",
  "sourcesContent": [
    "* TODO and agenda code for Leisure\n\n    'use strict'\n    define ['./org', './docOrg', './editor', './editorSupport', 'lodash', 'jquery'], (Org, DocOrg, Editor, EditorSupport, _, $)->\n      {\n        parseOrgMode\n      } = Org\n      {\n        computeNewStructure\n      } = Editor\n\n      class Todo\n        constructor: (@data, inputStates)->\n          inputStates = inputStates || stdTodo\n          @states = {}\n          todoPat = ''\n          prev = null\n          for state in inputStates.todo.concat inputStates.done\n            state.name = state.name.toUpperCase()\n            @states[state.name] = state\n            if prev\n              state.prev = prev\n              prev.next = state\n            prev = state\n            todoPat += \"\\\\b#{state.name}\\\\b|\"\n          @startState = inputStates.todo[0] || inputStates.done[0]\n          if prev\n            @endState = prev\n          #  @startState.prev = prev\n          #  prev.next = @startState\n          @statePat = new RegExp \"^(\\\\*+)( +(#{todoPat}) *)\", 'i'\n        shiftRight: (docPos, block)->\n          block = @data.getBlock (block || @data.blockForOffset docPos)\n          if block.type == 'headline'\n            @cycleTodo block, true\n            true\n        shiftLeft: (docPos, block)->\n          block = @data.getBlock (block || @data.blockForOffset docPos)\n          if block.type == 'headline'\n            @cycleTodo block, false\n            true\n\nCycle the todo state for a headline\n\n        cycleTodo: (block, forward)->\n          if m = block.text.match @statePat\n            state = m[2].trim()\n            next = if state\n              if forward then @states[state.toUpperCase()]?.next?.name || ''\n              else @states[state.toUpperCase()]?.prev?.name || ''\n            else if forward then @startState.name\n            else @endState.name\n            newText = m[1] + ' ' + next + (if next then ' ' else '') + block.text.substring m[0].length\n            start = @data.offsetForBlock block\n            @data.replaceText {start, end: start + block.text.length, text: newText, source: 'edit'}\n        bind: (opts)->\n          opts.bindings['S-RIGHT'] = (editor, e, r)=>\n            if @shiftRight opts.editor.docOffset(r)\n              e.originalEvent.stopPropagation()\n              e.originalEvent.preventDefault()\n          opts.bindings['S-LEFT'] = (editor, e, r)=>\n            if @shiftLeft opts.editor.docOffset(r)\n              e.originalEvent.stopPropagation()\n              e.originalEvent.preventDefault()\n\n      todoForEditor = (ed, todoDefs)-> new Todo(ed.options.data, todoDefs).bind ed.options\n\n      stdTodo =\n        todo: [\n          name: 'TODO'\n        ]\n        done: [\n          name: 'DONE'\n        ]\n\n      {\n        Todo\n        todoForEditor\n      }\n"
  ]
}