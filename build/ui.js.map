{
  "version": 3,
  "file": "ui.js",
  "sourceRoot": "..",
  "sources": [
    "src/ui.litcoffee"
  ],
  "names": [],
  "mappings": "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",
  "sourcesContent": [
    "Leisure's UI system uses a piece of data's \"type\" and the \"context\" (a string) to\nchoose a handlebars template.\n\n    'use strict'\n    define ['handlebars', './editor', './coffee-script', 'immutable'], (Handlebars, Editor, CoffeeScript, Immutable)->\n      {\n        compile\n        create\n        registerHelper\n      } = window.Handlebars = Handlebars\n      {\n        escapeHtml\n        findEditor\n        preserveSelection\n      } = Editor\n      {\n        Set\n      } = Immutable\n\n      templates = {}\n      controllers = {}\n      defaults =\n        controllers: {}\n        templates: {}\n      root = null\n      activating = false\n      viewIdCounter = 0\n      pendingViews = []\n      imageRefreshCounter = 0\n      localResources = {}\n\n      getTemplates = (isDefault)-> if isDefault then defaults.templates\n      else templates\n\n      getTemplate = (type)-> templates[type] ? defaults.templates[type]\n\n      getControllers = (isDefault)-> if isDefault then defaults.controllers\n      else controllers\n\n      getController = (type)-> controllers[type] ? defaults.controllers[type]\n\n      nextImageSrc = (src)->\n        if (slide = root.context?.currentView?.closest '.slideholder')?.length\n          slide.attr 'imgCount', imageRefreshCounter\n        if (hashLoc = src.indexOf '#') == -1 then hashLoc = src.length\n        \"#{src.substring(0, hashLoc)}##{imageRefreshCounter}\"\n\n      prevImageSrc = (src)->\n        count = if (slide = root.context.currentView?.closest '.slideholder')?.length\n          Number slide.attr 'imgCount'\n        else imageRefreshCounter - 1\n        if (hashLoc = src.indexOf '#') == -1 then hashLoc = src.length\n        \"#{src.substring(0, hashLoc)}##{count}\"\n\n      replaceImage = (img)->\n        if img.src.indexOf(\"file:\") == 0\n          newImg = document.createElement('img')\n          for att in img.attributes\n            newImg.setAttribute att.name, att.value\n          newImg.onload = -> $(img).replaceWith newImg\n          newImg.src = nextImageSrc img.src\n\n      refreshImage = (img)->\n        if !img.complete then img.onerror = -> replaceImage img\n        else if img.complete && !img.naturalWidth then replaceImage img\n\n      viewKey = (type, context)->\n        if context then \"#{type.trim()}/#{context.trim()}\" else type?.trim()\n\n      addView = (type, context, template, isDefault)->\n        getTemplates(isDefault)[name = viewKey type, context] = compile template\n        Handlebars.registerPartial name, \"{{#viewWrapper '#{name}' this}}#{template}{{/viewWrapper}}\"\n\n      removeView = (type, context, template, isDefault)->\n        delete getTemplates(isDefault)[name = viewKey type, context]\n        Handlebars.unregisterPartial name\n\n      getView = hasView = (type, context)->\n        getTemplate(viewKey type, context) || getTemplate(type)\n\n      withContext = (context, func)->\n        oldContext = root.context\n        root.context = context\n        try\n          value = func()\n        finally\n          root.context = oldContext\n        value\n\n      mergeContext = (subcontext, func)->\n        withContext _.merge({}, root.context, subcontext), func\n\n      dontRerender = (view, func)->\n        if view\n          oldDonts = root.context?.dontRender ? new Set()\n          mergeContext {dontRender: oldDonts.add(view)}, func\n        else func()\n\n      condenseHtml = (html, extreme)->\n        if extreme then html.replace />\\s+</g, '><'\n        else\n          html\n            .replace(/>[ ]+<(?=[^\\/])/g, '><')\n            .replace(/^\\s*\\n/gm, '')\n            .replace(/>\\s+$/gm, '>')\n            .replace(/^\\s+<(?=[^\\/])/gm, '<')\n\n      Handlebars.registerHelper 'condense', (extreme, options)->\n        if !(options && extreme)\n          options = options || extreme\n          extreme = false\n        condenseHtml options.fn(this), extreme\n\n      Handlebars.registerHelper 'debug', (options)->\n        debugger\n        ''\n\n      Handlebars.registerHelper 'find', (name..., options)->\n        data = options.data.opts.data\n        items = if name.length == 1 then data.find(name[0]) else data.find name[0], name[1]\n        res = \"<span data-find-index='#{name[0]}'>\"\n        for item in items ? []\n          mergeContext {currentBlock: data.getBlock(item)}, ->\n            res += options.fn data.getYaml(item), options\n        res + \"</span>\"\n\n      Handlebars.registerHelper 'findReverse', (name..., options)->\n        data = options.data.opts.data\n        items = if name.length == 1 then data.find(name[0]) else data.find name[0], name[1]\n        res = ''\n        for item in (items ? []).reverse()\n          res += options.fn data.getYaml(item), options\n        res\n\n      Handlebars.registerHelper 'view', (item, contextName, options)->\n        if !options\n          options = contextName\n          contextName = null\n        context = options?.data\n        data = (if (block = context.opts.data.getBlockNamed item) && yaml = context.opts.data.getYaml block\n          yaml\n        else\n          block = null\n          item)\n        if data?.type\n          renderView data.type, contextName, data, null, block ? root.context.currentBlock\n\n      Handlebars.registerHelper 'viewWrapper', (name, data, opts)->\n        simpleRenderView \"data-view='#{name}' data-requested-view='#{name}' class='view'\", name, opts.fn, this\n\n      bindView = (view, block)->\n        if !(opts = findEditor(view)?.options) then return\n        for input, i in $(view).find 'input[data-value]'\n          path = input.getAttribute 'data-value'\n          if index = path.indexOf '.'\n            name = path.substring 0, index\n            path = path.substring index + 1\n          else (parent = $(input).closest('[data-view-block-name]')).attr 'data-view-block-name'\n          if name\n            do (name, input, path)->\n              input.setAttribute 'input-number', i\n              getter = eval \"(function(data){return data.#{path}})\"\n              setter = eval \"(function(data, value){data.#{path} = value})\"\n              oldValue = input.value = getter opts.data.getYaml opts.data.getBlockNamed name\n              input.onkeypress = (e)-> e.stopPropagation()\n              input.onkeydown = (e)-> e.stopPropagation()\n              input.onkeyup = (e)->\n                e.stopPropagation()\n                if input.value != oldValue\n                  oldValue = if typeof oldValue == 'number' then Number(input.value) else input.value\n                  data = _.clone opts.data.getYaml(opts.data.getBlockNamed name), true\n                  setter data, oldValue\n                  start = input.selectionStart\n                  end = input.selectionEnd\n                  renderBlock = -> opts.data.allowObservation ->\n                    console.log 'render', view\n                    bl = opts.data.getBlockNamed name\n                    if bl.local then opts.setLocalData name, data\n                    else\n                      preserveSelection -> opts.data.collaborativeCode.viewBoundSet name, data\n                  if !block.codeAttributes.allowupdates?\n                    renderBlock = -> dontRender view, renderBlock\n                  dontRerender parent?[0], renderBlock\n\n      traverse = (obj, func, t, key, path, set)->\n        if typeof obj == 'object'\n          if !set then set = new Set()\n          if !set.has obj\n            if !path then path=[]\n            set.add obj\n            switch directive = func obj, t, key, path, set\n              when 'stop' then 'stop'\n              when 'skip' then\n              else\n                path.push [key, obj]\n                if _.isArray(obj)\n                  for v, k in obj\n                    if traverse(v, func, t, k, path, set) == 'stop' then return\n                else for k, v of obj\n                  if traverse(v, func, t, k, path, set) == 'stop' then return\n                path.pop()\n        null\n\n      touchedBlocks = (html, data)->\n        v = {}\n        traverse Handlebars.parse(html), (obj)->\n          if obj.type == 'PathExpression'\n            blockName = obj.parts[0]\n            if (block = data.getBlockNamed(blockName))\n              v[blockName] = if d = data.getYaml block then d else null\n        v\n\n      renderView = (type, contextName, data, targets, block, blockName, addIds, extraAttrs)->\n        if !block && root.context?.currentBlock?.yaml == data\n          block = root.context?.currentBlock\n        blockName = blockName ? block?.codeName\n        isTop = !root.context?.topView\n        requestedKey = key = viewKey type, contextName\n        if !(template = getTemplate key)\n          key = type\n          contextName = null\n          if !(template = getTemplate key) then return\n        settings =\n          type: type\n          contextName: contextName\n        if isTop\n          settings.subviews = {}\n        if !isTop && block then root.context.subviews[block._id] = true\n        attrs = \"data-view='#{key}' data-requested-view='#{requestedKey}'\"\n        classAttr = 'view'\n        for attr, value of root.context.viewAttrs ? {}\n          if attr == 'class' then classAttr += \" #{value}\"\n          else attrs += \" #{attr}='#{value}'\"\n        attrs += \" class='#{classAttr}'\"\n        if block && blockName then attrs += \" data-view-block-name='#{blockName}'\"\n        else if block then attrs += \" data-view-block='#{block._id}'\"\n        if extraAttrs then attrs += \" \" + extraAttrs.trim()\n        if targets\n          for node in targets\n            if root.context?.dontRender?.has(node) then continue\n            settings.view = node\n            mergeContext settings, ->\n              root.context.data = data\n              if block then root.context.block = block\n              if isTop then root.context.topView = node\n              id = node.id\n              html = runTemplate template, data, data: root.context\n              if isTop then attrs += \" data-ids='#{_.keys(settings.subviews).join ' '}'\"\n              n = $(\"<span #{attrs}>#{html}</span>\")\n              n[0].id = id\n              $(node).replaceWith n\n              root.context.opts.editor.activateScripts n, root.context, data, block\n        else mergeContext settings, -> simpleRenderView attrs, key, template, data, block, addIds\n\n      runTemplate = (template, args...)->\n        try\n          template args...\n        catch err\n          console.log err.stack ? err.msg\n          \" <span class='error'>[Error in template]</span> \"\n\n      nextViewId = -> \"view-#{viewIdCounter++}\"\n\n      simpleRenderView = (attrs, key, template, data, block)->\n        id = nextViewId()\n        do (context = root.context)->\n          pendingViews.push -> activateScripts $(\"##{id}\"), context, data, block\n        attrs += \" id='#{id}'\"\n        if block then root.context.subviews[block._id] = true\n        root.context.simpleViewId = id\n        \"<span #{attrs}>#{runTemplate template, data, data: root.context}</span>\"\n\n      initializePendingViews = ->\n        imageRefreshCounter++\n        p = pendingViews\n        pendingViews = []\n        for func in p\n          func()\n\n      activateScripts = (el, context, data, block)->\n        if !activating\n          block = block ? context.block\n          data = data ? context.data\n          withContext _.merge({data: block: block}, context), ->\n            root.context.currentView = el\n            activating = true\n            try\n              for script in el.find('script')\n                if !script.type || script.type == 'text/javascript'\n                  newScript = document.createElement 'script'\n                  newScript.type = 'text/javascript'\n                  newScript.textContent = script.textContent\n                  newScript.src = script.src\n                  root.currentScript = newScript\n                  script.parentNode.insertBefore newScript, script\n                  script.remove()\n              for script in el.find('script[type=\"text/coffeescript\"]').add(el.find 'script[type=\"text/literate-coffeescript\"]')\n                root.currentScript = script\n                CoffeeScript.run script.innerHTML\n              getController(el.attr 'data-view')?.initializeView?(el, data, data: root.context)\n              for img in el.find 'img'\n                refreshImage img\n              for node in el\n                bindView node, data?.block\n            catch err\n              console.error err\n            finally\n              root.currentScript = null\n              activating = false\n\n      addController = (type, name, func, isDefault)->\n        getControllers(isDefault)[viewKey type, name] = func\n\n      removeController = (type, name, isDefault)->\n        delete getControllers(isDefault)[viewKey type, name]\n\n      getPendingViews = -> pendingViews\n\n      pushPendingInitialzation = (pending)-> pendingViews.push pending\n\n      getPanel = (view)-> $(view).closest '.expandable-panel'\n\n      configurePanels = (view)->\n        $(view).find('.hidden-panel').children().filter('.label')\n          .append(\" <i class='fa fa-arrow-right'></i>\")\n          .button()\n        $(view).find('.expandable-panel').children().filter('.label')\n          .append(\" <i class='fa fa-arrow-left'></i><i class='fa fa-arrow-right'></i>\")\n          .button()\n          .on 'click', ->\n            getPanel(this).addClass 'expand'\n            getPanel(this).find(\"[name='hiddenFocus']\")[0].focus()\n        ep = $(view).find '.expandable-panel'\n        $(\"<input name='hiddenFocus' class='hiddenTextField'>\").appendTo ep\n        #ep.mouseenter -> getPanel(this).removeClass 'contract'\n        ep.click ((e)->\n          if !$(e.target).closest('input,button').length\n            $(this).closest('.expandable-panel').find(\"[name='hiddenFocus']\")[0].focus())\n        ep.children().filter('.contents').on 'click', ->\n          panel = $(this).closest('.expandable-panel')[0]\n          if panel.hasMousedown\n            panel.hasMousedown = false\n            if !(document.activeElement instanceof HTMLInputElement)\n              $(panel).find(\"[name='hiddenFocus']\")[0].focus()\n        ep.children().filter('.contents').on 'mousedown', ->\n          $(this).closest('.expandable-panel')[0].hasMousedown = true\n        ep.find('input').focus ->\n          $(this).closest('.expandable-panel').addClass 'expand'\n        ep.find('input').blur ->\n          panel = $(this).closest('.expandable-panel')[0]\n          if !panel.hasMousedown && $(document.activeElement).closest('.expandable-panel')[0] != panel\n            $(panel).removeClass 'expand'\n        ep.find('button').click ->\n          $(this).closest('.expandable-panel').addClass 'contract'\n        hp = $(view).find '.hidden-panel'\n        $(\"<input name='hiddenFocus' class='hiddenTextField'>\").appendTo hp\n        hp.on 'click', (e)->\n          panel = $(this).closest('.hidden-panel')[0]\n          if panel.hasMousedown\n            panel.hasMousedown = false\n            if $(panel).hasClass 'expand'\n              button = $($(panel).children()[1]).children().first()[0]\n              if button == e.target || button.contains e.target then $(panel).removeClass 'expand'\n            else if !(document.activeElement instanceof HTMLInputElement)\n              $(panel).find(\"[name='hiddenFocus']\")[0].focus()\n        hp.on 'mousedown', -> $(this).closest('.hidden-panel')[0].hasMousedown = true\n        hp.find('input').focus -> $(this).closest('.hidden-panel').addClass 'expand'\n        hp.find('input').blur ->\n          panel = $(this).closest('.hidden-panel')[0]\n          if !panel.hasMousedown && $(document.activeElement).closest('.hidden-panel')[0] != panel\n            $(panel).removeClass 'expand'\n\n      setPanelExpanded = (view, expand)->\n        panel = getPanel(view)\n        panel.removeClass (if expand then 'contract' else 'expand')\n        panel.addClass (if expand then 'expand' else 'contract')\n\n      showMessage = (node, title, str, opts, func)->\n        dialog = $(\"<div title=#{escapeAttr title}><div>#{str}</div></div>\")\n          .appendTo node\n          .dialog _.merge {close: -> dialog.remove()}, opts ? {}\n        func?(dialog)\n\n      escapeAttr = (text)->\n        escapeHtml(text).replace /['\"&]/g, (c)->\n          switch c\n            when '\"' then '&quot;'\n            when \"'\" then '&#39;'\n            when '&' then '&amp;'\n\n      root = Object.assign(Leisure, {\n        UI: {\n          withContext\n          mergeContext\n          renderView\n          addView\n          removeView\n          hasView\n          getView\n          addController\n          removeController\n          initializePendingViews\n          getPendingViews\n          viewKey\n          configurePanels\n          context: null\n          showMessage\n          escapeAttr\n          refreshImage\n          nextImageSrc\n          prevImageSrc\n          pushPendingInitialzation\n          setPanelExpanded\n          activateScripts\n          pendingScripts: []\n          localResources\n          nextViewId\n          traverse\n          touchedBlocks\n        }\n        condenseHtml\n        Handlebars\n      }).UI\n"
  ]
}