// Generated by CoffeeScript 1.10.0
(function() {
  var WebSocket, WebSocketServer, http, originIsAllowed, server, wsServer;

  WebSocket = require('websocket');

  WebSocketServer = WebSocket.server;

  http = require('http');

  server = http.createServer(function(request, response) {
    console.log('Received request for ' + request.url);
    response.writeHead(400);
    return response.end;
  });

  server.listen(8080, function() {
    return console.log('Server is listening on port 8080');
  });

  wsServer = new WebSocketServer({
    httpServer: server,
    autoAcceptConnections: false
  });

  originIsAllowed = function() {
    return true;
  };

  wsServer.on('request', function(request) {
    var connection;
    if (!originIsAllowed(request.origin)) {
      request.reject;
      return console.log('Connection from origin ' + request.origin + ' rejected.');
    } else {
      connection = request.accept('echo-protocol', request.origin);
      console.log('Connection accepted.');
      connection.on('message', function(message) {
        if (message.type === 'utf8') {
          console.log('Received Message: ' + message.utf8Data);
          return connection.sendUTF('THIS IS UTF');
        } else if (message.type === 'binary') {
          console.log('Received Binary Message of ' + message.binaryData.length + ' bytes');
          return connection.sendBytes(message.binaryData);
        }
      });
      return connection.on('close', function(reasonCode, description) {
        return console.log('Peer ' + connection.remoteAddress + ' disconnected.');
      });
    }
  });

}).call(this);

//# sourceMappingURL=index.js.map
