// Generated by CoffeeScript 1.9.3
(function() {
  var configureConnection, guid, http, rerequire, s4, sockjs, startServer;

  sockjs = require('sockjs');

  http = require('http');

  s4 = function() {
    return Math.floor((1 + Math.random()) * 0x10000).toString(16).substring(1);
  };

  guid = function() {
    return "" + (s4()) + (s4()) + "-" + (s4()) + "-" + (s4()) + "-" + (s4()) + "-" + (s4()) + (s4()) + (s4());
  };

  startServer = function(port, prefix) {
    var connectExp, http_server, server;
    server = sockjs.createServer({
      sockjs_url: 'http://cdn.jsdelivr.net/sockjs/1.0.1/sockjs.min.js',
      prefix: prefix
    });
    connectExp = new RegExp("^" + prefix + "/connect/(.*)$");
    http_server = http.createServer();
    server.installHandlers(http_server);
    http_server.listen(port, '0.0.0.0');
    return server.on('connection', function(con) {
      console.log("CONNECTION path: " + con.pathname);
      return configureConnection(con);
    });
  };

  configureConnection = function(con) {
    con.write('ook');
    return con.on('data', function(msg) {
      console.log("Message: " + msg);
      return con.write('pong');
    });
  };

  rerequire = function(module) {
    var exp, k, ref, removeKey, v;
    removeKey = null;
    if (module.match(/^\.[\/\\]/)) {
      exp = new RegExp((module.substring(2)) + "\.js$");
      console.log(exp);
      ref = require.cache;
      for (k in ref) {
        v = ref[k];
        if ((k.match(exp)) && !k.match(/node_modules/)) {
          if (removeKey) {
            console.log("WARNING: More than one module matches " + module);
            removeKey = null;
            break;
          }
          removeKey = k;
        }
      }
      if (removeKey) {
        delete require.cache[removeKey];
      }
    }
    return require(module);
  };

  module.exports = {
    startServer: startServer,
    rerequire: rerequire
  };

}).call(this);

//# sourceMappingURL=server.js.map
