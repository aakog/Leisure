{
  "version": 3,
  "file": "server.js",
  "sourceRoot": "..",
  "sources": [
    "server/server.litcoffee"
  ],
  "names": [],
  "mappings": "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",
  "sourcesContent": [
    "SockJS relay server\r\n\r\n    require('source-map-support').install()\r\n    sockjs = require 'sockjs'\r\n    sockjsUtil = require 'sockjs/lib/utils'\r\n    http = require 'http'\r\n    crypto = require 'crypto'\r\n    serveStatic = require 'serve-static'\r\n    finalhandler = require 'finalhandler'\r\n    path = require 'path'\r\n    _ = require './lib/lodash.min'\r\n    requirejs = require('requirejs').config\r\n      baseUrl: path.dirname(module.filename)\r\n      paths:\r\n        immutable: 'lib/immutable-3.7.4.min'\r\n\r\n    {\r\n      badMasterIdError\r\n      badMsgTypeError\r\n      disapprovedError\r\n      badVersionError\r\n      noTrim\r\n    } = requirejs './common'\r\n    {\r\n      runReplacements\r\n    } = requirejs './ot'\r\n\r\n    masters = {}\r\n    slaves = {}\r\n    socketPrefix = '/Leisure/(master|slave(?:-([^/]*)))'\r\n\r\nThanks to [Broofa's stackoverflow post](http://stackoverflow.com/questions/105034/create-guid-uuid-in-javascript/105074#105074) Altered the code to use crypto's random.\r\n\r\n    s4 = ->\r\n      bytes = crypto.randomBytes 2\r\n      n = (bytes[0] + (bytes[1] << 8)).toString(16)\r\n      while n.length < 4\r\n        n = '0' + n\r\n      n\r\n\r\n    guid = -> \"#{s4()}#{s4()}-#{s4()}-#{s4()}-#{s4()}-#{s4()}#{s4()}#{s4()}\"\r\n\r\n    diag = (args...)-> console.log args...\r\n\r\n    class MessageHandler\r\n      constructor: ->\r\n        @id = guid()\r\n        @messageCount = 1\r\n        @lastVersionAck = -1\r\n      setConnection: (@con)->\r\n        console.log \"#{@type} connection: #{@id}\"\r\n        @con.leisure = this\r\n        @con.on 'data', (msg)=> @handleMessage JSON.parse msg\r\n        @con.on 'close', => @closed()\r\n      type: 'Unknown Handler'\r\n      close: -> @con.close()\r\n      closed: ->\r\n        console.log \"#{@type} closed: #{@id}\"\r\n      send: (msg)->\r\n        #diag \"S    #{JSON.stringify msg}\"\r\n        @con.write JSON.stringify msg\r\n      sendError: (msg)->\r\n        msg.type = 'error'\r\n        @send msg\r\n        setTimeout (=> @close()), 1\r\n\r\nHandle a message from the connected browser\r\n\r\n      handleMessage: (msg)->\r\n        msg.connectionId = @connectionId\r\n        #diag \"R    #{JSON.stringify msg}\"\r\n        if !(msg.type of @handler)\r\n          console.log \"Received bad message #{msg.type}\", msg\r\n          @close()\r\n        else @handler[msg.type].call this, msg\r\n      handler:\r\n        log: (msg)-> console.log msg.msg\r\n        replace: (msg)->\r\n          @lastVersionAck = msg.parent\r\n          @master.relay msg\r\n        conditionalReplace: (msg)->\r\n          if msg.version != @master.version && @master.versionDirty\r\n            @send type: 'rejectChange', targetVersion: msg.targetVersion, version: @version\r\n          else @master.relay msg\r\n        ack: (msg)->\r\n          @lastVersionAck = msg.version\r\n          @master.peerAcknowledgedVersion msg\r\n      shouldEcho: (msg)-> isTextMsg(msg) && msg.connectionId == @connectionId\r\n\r\n    isTextMsg = (msg)-> msg.type in ['replace', 'conditionalReplace']\r\n\r\n    validateBatch = (replacements)->\r\n      replacements = _.sortBy replacements, (x)-> x.start\r\n      last = 0\r\n      for repl in replacements\r\n        if repl.start < last then throw new Error \"Attempt to perform overlapping replacements in batch\"\r\n        last = repl.end\r\n      replacements\r\n\r\n    class MasterHandler extends MessageHandler\r\n      constructor: ->\r\n        super()\r\n        @master = this\r\n        @connectionId = \"peer-0\"\r\n        @slaves = {}\r\n        @pendingSlaves = {}\r\n        @doc = ''\r\n        @peerCount = 0\r\n        @version = 0\r\n        @nextVersionCallbacks = []\r\n        @pendingVersionAcks = {}\r\n        @remainingVersionAcks = 0\r\n        @versionDirty = false\r\n        @versionOps = []\r\n        @unreplacements = []\r\n        @ackedVersion = -1\r\n      type: 'Master'\r\n      setConnection: (con)->\r\n        masters[@id] = this\r\n        super con\r\n        @send type: 'connect', id: @id, connectionId: @connectionId, version: @messageCount\r\n      addSlave: (slave)->\r\n        slave.connectionId = \"peer-#{++@peerCount}\"\r\n        @pendingSlaves[slave.connectionId] = slave\r\n        @send type: 'slaveConnect', slaveId: slave.connectionId\r\n      removeSlave: (slave)->\r\n        delete @slaves[slave.connectionId]\r\n        delete @pendingSlaves[slave.connectionId]\r\n        @send type: 'slaveDisconnect', slaveId: slave.connectionId\r\n        @broadcast type: 'connections', count: 1 + _.size @slaves\r\n      closed: ->\r\n        delete masters[@con.leisure.id]\r\n        for id, slave of @slaves\r\n          slave.close()\r\n        @slaves = {}\r\n        super()\r\n      versionClean: -> !@versionDirty && !@remainingVersionAcks\r\n      startVersionInc: ->\r\n        if @versionDirty && !@remainingVersionAcks\r\n          @pendingVersionAcks = _.clone slaves\r\n          @pendingVersionAcks[@connectionId] = this\r\n          @remainingVersionAcks = _.size @pendingVersionAcks\r\n          @broadcast type: 'newVersion', version: @version + 1\r\n      peerAcknowledgedVersion: (msg)->\r\n        #diag \"RECEIVED VERSION ACK\"\r\n        @trimVersions()\r\n      connection: (msg)->\r\n        if msg.connectionId == @connectionId then this else @slaves[msg.connectionId]\r\n      relay: (msg)->\r\n        if msg.type == 'replace'\r\n          {start, end, text} = msg\r\n          @versionOps.push msg\r\n          @trimVersions()\r\n        else if msg.type == 'conditionalReplace'\r\n          msg.replacements = validateBatch msg.replacements\r\n          offset = 0\r\n          for repl in msg.replacements\r\n            @doc = @doc.substring(0, repl.start + offset) + repl.text + @doc.substring repl.end + offset\r\n            offset += repl.text.length - repl.end + repl.start\r\n        @broadcast msg\r\n      trimVersions: ->\r\n        if noTrim then return\r\n        minVersion = @lastVersionAck\r\n        for id, slave of @slaves\r\n          minVersion = Math.min minVersion, slave.lastVersionAck\r\n        for op, pos in @versionOps\r\n          if op.version >= minVersion\r\n            if pos > 0\r\n              @updateDoc @versionOps.slice 0, pos\r\n              @unreplacements = []\r\n              @versionOps = @versionOps.slice pos\r\n              @updateDoc()\r\n              @broadcast type: 'trimVersions', version: minVersion\r\n            break\r\n      replace: (start, end, text)->\r\n        @doc = @doc.substring(0, start) + text + @doc.substring end\r\n      updateDoc: (changes)->\r\n        for repl in @unreplacements by -1\r\n          @replace repl.start, repl.end, repl.text\r\n        @unreplacements = []\r\n        runReplacements changes || @versionOps, (start, end, text)=>\r\n          @unreplacements.push start: start, end: start + text.length, text: @doc.substring start, end\r\n          @replace start, end, text\r\n      sendEchoIfNeeded: (msg)->\r\n        if isTextMsg(msg) && con = @connection msg\r\n          con.send type: 'echo', version: msg.version\r\n          con\r\n      broadcast: (msg)->\r\n        msg.version = ++@messageCount\r\n        if (echoer = @sendEchoIfNeeded(msg)) != this then @send msg\r\n        for id, slave of @slaves\r\n          if echoer != slave then slave.send msg\r\n      handler:\r\n        __proto__: MessageHandler::handler\r\n        initDoc: ({@doc})->\r\n        slaveApproval: ({slaveId, approval})->\r\n          if slave = @pendingSlaves[slaveId]\r\n            delete @pendingSlaves[slaveId]\r\n            if approval\r\n              @slaves[slaveId] = slave\r\n              slave.send type: 'connect', id: @id, connectionId: slave.connectionId, doc: @doc, version: @messageCount\r\n              @broadcast type: 'connections', count: 1 + _.size @slaves\r\n            else slave.sendError disapprovedError()\r\n\r\n    class SlaveHandler extends MessageHandler\r\n      type: 'Slave'\r\n      setConnection: (con, masterId)->\r\n        if !(@master = masters[masterId])\r\n          @sendError badMasterIdError masterId\r\n        else @master.addSlave this\r\n        super con\r\n      setId: (@id)->\r\n      closed: ->\r\n        @master.removeSlave this\r\n        super()\r\n\r\n    startServer = (port)->\r\n      console.log 'serve: ' + path.dirname(process.cwd())\r\n      fileServer = serveStatic path.dirname(process.cwd()), index: ['index.html']\r\n      http_server = http.createServer (req, res)->\r\n        fileServer req, res, finalhandler req, res\r\n      sockjs.createServer(\r\n        sockjs_url: 'http://cdn.jsdelivr.net/sockjs/1.0.1/sockjs.min.js'\r\n        prefix: socketPrefix)\r\n        .on 'connection', (con)->\r\n          [ignore, type, masterId] = con.pathname.match socketPrefix\r\n          if type == 'master' then new MasterHandler().setConnection con\r\n          else new SlaveHandler().setConnection con, masterId\r\n        .installHandlers(http_server)\r\n      http_server.listen(port, '0.0.0.0')\r\n\r\n    module.exports = {\r\n      startServer\r\n      guid\r\n    }\r\n"
  ]
}