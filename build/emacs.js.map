{
  "version": 3,
  "file": "emacs.js",
  "sourceRoot": "..",
  "sources": [
    "src/emacs.litcoffee"
  ],
  "names": [],
  "mappings": "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",
  "sourcesContent": [
    "Emacs connection\n\n    'use strict'\n    define ['lodash', './ui', './editor', './editorSupport', './diag', './eval', './advice'], (_, UI, Editor, EditorSupport, Diag, Eval, Advice)->\n\n      {\n        preserveSelection\n        computeNewStructure\n      } = Editor\n      {\n        changeAdvice\n      } = Advice\n      {\n        showMessage\n        pushPendingInitialzation\n        escapeAttr\n        localResources\n      } = UI\n      {\n        getDocumentParams\n        basicDataFilter\n        fileTypes\n        makeBlobUrl\n      } = EditorSupport\n      {\n        clearDiag\n        diagMessage\n      } = Diag\n      {\n        knownLanguages\n        escapeString\n        unescapeString\n      } = Eval\n\n      msgPat = /^([^ ]+)( (.*))?$/\n      replaceMsgPat = /^([^ ]+) ([^ ]+) ([^ ]+) (.*)$/\n      connected = false\n      showDiag = false\n      #showDiag = true\n      imgCount = 0\n      fileCount = 0\n\n      diag = (msg...)-> if showDiag then console.log msg...\n\n      messages =\n        r: (data, msg, frame)-> replace data, msg\n        reload: -> document.location.href = document.location.href\n        activate: ->\n          window.open \"javascript:close()\"\n          window.focus()\n        file: (data, msg, frame)-> receiveFile data, msg\n\n      replace = (data, msg)->\n        diag \"Received #{msg}\"\n        [ignore, count, start, end, text] = msg.match replaceMsgPat\n        start = Number start\n        end = Number end\n        text = JSON.parse text\n        editor = data.emacsConnection.opts.editor\n        context = {start, end, text, source: 'emacs'}\n        replaceWhile start, end, text, data, (repl)->\n          if end == -1\n            context.start = 0\n            context.end = data.getLength()\n            editor.options.load 'emacs', text, context\n          else\n            targetLen = data.getDocLength() - (end - start) + text.length\n            editor.options.replaceText context\n\n      receiveFile = (data, msg)->\n        [lead, id] = msg.match /^([^ ]+) +/\n        data.emacsConnection.fileCallbacks[id]?(msg.substring lead.length)\n        delete data.emacsConnection.fileCallbacks[id]\n\n      replaceWhile = (start, end, text, data, func)->\n        if end == -1\n          blocks = []\n          newText = text\n        else {blocks, newText} = data.blockOverlapsForReplacement(start, end, text)\n        repl = computeNewStructure data, blocks, newText\n        repl.changeId = \"emacs-#{data.emacsConnection.changeCount++}\"\n        repl.emacsNewBlocks = repl.newBlocks.slice()\n        repl.blockOffset = if blocks.length then data.offsetForBlock blocks[0] else 0\n        data.emacsConnection.replacing = repl\n        data.emacsConnection.opts.mergeChangeContext fromEmacs: repl.changeId\n        data.emacsConnection.pendingChanges[repl.changeId] = repl\n        try\n          func repl\n        finally\n          data.emacsConnection.replacing = null\n\n      shouldSendConcurrent = (data, newBlock)->\n        if newBlock\n          repl = data.emacsConnection.replacing\n          currentBlock = _.find repl.newBlocks, (b)-> b._id == newBlock._id\n          currentBlock && currentBlock.text != newBlock.text\n\n      sendConcurrentBlockChange = (data, newBlock)->\n        repl = data.emacsConnection.replacing\n        ind = _.findIndex repl.newBlocks, (x)-> x._id = newBlock\n        currentNew = repl.emacsNewBlocks[ind]\n        if currentNew.text != newBlock.text\n          offset = 0\n          oldLen = currentNew.text.length\n          repl.emacsNewBlocks[ind] = newBlock\n          while ind-- > 0\n            offset += repl.emacsNewBlocks[ind]\n          start = offset + repl.blockOffset\n          sendReplace data.emacsConnection.websocket, start, start + oldLen, newBlock.text\n\n      connect = (opts, host, port, cookie, cont)->\n        con = new WebSocket \"ws://#{host}:#{port}\"\n        con.onopen = (evt)-> open evt, con, opts, port, cookie, cont\n        con.onclose = (evt)-> close evt, opts.data\n        con.onmessage = (evt)-> message evt, opts.data\n        con.onerror = (evt)-> showMessage opts.editor.node, \"Connection error\", \"Could not open connection to emacs\",\n          position: my: 'center top', at: 'center top'\n          buttons: OK: -> $(this).dialog 'close'\n\n      configureOpts = (opts)->\n        data = opts.data\n        if !data.emacsConnection.websocket then return\n        editor = opts.editor\n        changeAdvice opts, true,\n          followLink: emacs: (parent)->(e)->\n            if e.target.href.match /^elisp/\n              sendFollowLink data.emacsConnection.websocket, editor.docOffset($(e.target).prev('.link')[0], 1)\n              false\n            else parent e\n          execute: emacs: (parent)->->\n            if editor.blockForCaret()?.language.toLowerCase() of knownLanguages\n              parent()\n            else sendCcCc data.emacsConnection.websocket, editor.docOffset(editor.domCursorForCaret())\n        changeAdvice editor, true,\n          activateScripts: emacs: (parent)->(el, context, data, block)->\n            ret = parent el, context, data, block\n            for img in $(el).find 'img'\n              src = img.getAttribute 'src'\n              if !src.match '^.*:.*'\n                name = src.match(/([^#?]*)([#?].*)?$/)?[1]\n                src = \"file:#{src}\"\n              else name = src.match(/^file:([^#?]*)([#?].*)?$/)?[1]\n              if name\n                if !img.id then img.id = \"emacs-image-#{imgCount++}\"\n                img.src = ''\n                fetchImage opts.data.emacsConnection, img.id, src\n            ret\n\n      fetchImage = (con, imgId, src)->\n        if con && img = $(\"##{imgId}\")[0]\n          if data = localResources[src]\n            if data instanceof Promise then data.then (data)->\n              replaceImage con, img, src, data\n            else preserveSelection (range)-> replaceImage con, img, src, data\n          else localResources[src] = new Promise (resolve, reject)->\n            sendGetFile con, src, (file)->\n              if file\n                data = localResources[src] = makeBlobUrl atob(file), typeForFile src\n                preserveSelection (range)-> replaceImage con, img, src, data\n                resolve data\n              else reject null\n\n      replaceImage = (con, img, src, data)-> setTimeout (->\n          img.src = data\n          #img.onload = ->\n        ), 0\n\n      typeForFile = (name)->\n        [ignore,ext] = name.match /\\.([^#.]*)(#.*)?$/\n        fileTypes[ext]\n\n      close = (evt, data)->\n        console.log \"CLOSED EMACS CONNECTION\"\n        connection = data.emacsConnection\n        connection.panel.find('button').button 'enable'\n        connection.panel.find('input').removeAttr 'readonly'\n        if connection.cookie then window.close()\n        data.removeFilter connection.filter\n        connection.websocket = null\n        connection.filter = null\n\n      message = (evt, data)->\n        [ignore, msg, ignore, text] = evt.data.match msgPat\n        if method = messages[msg] then preserveSelection => method data, text, evt.data\n        else\n          console.log \"Unknown message #{msg}: #{text}\"\n          data.emacsConnection.websocket.close()\n\n      error = (evt, data)-> console.log \"Error: #{evt.data}\"\n\n      open = (evt, ws, opts, port, cookie, cont)->\n        data = opts.data\n        ws.send \"#{cookie ? ''} display\"\n        connection = data.emacsConnection\n        connection.cookie = cookie\n        connection.panel.find('button').button 'disable'\n        connection.panel.find('input').attr 'readonly', true\n        connection.websocket = ws\n        connection.filter =\n          __proto__: basicDataFilter\n          replaceText: (data, {start, end, text, source})->\n            if source != 'emacs'\n              sendReplace ws, start, end, text\n        data.addFilter connection.filter\n        if !cookie then sendReplace ws, 0, -1, data.getText()\n        changeAdvice opts.data, true,\n          getFile: emacs: (parent)->(file, cont, fail)->\n            p = new Promise (success, failure)=>\n              sendGetFile @emacsConnection, \"file:#{file}\", (contents)->\n                if contents then success atob(contents)\n                else failure \"No such file: #{file}\"\n            if cont || fail then p.then cont, fail\n            else p\n        configureOpts opts\n        cont?()\n\n      sendReplace = (con, start, end, text)->\n        con.send \"r #{start} #{end} #{JSON.stringify text}\"\n        diag \"sending r #{start} #{end} #{JSON.stringify text}\"\n\n      sendFollowLink = (con, location)->\n        con.send \"followLink #{location}\"\n        diag \"sending followLink #{location}\"\n\n      sendCcCc = (con, location)->\n        con.send \"ctrl-c-ctrl-c #{location}\"\n        diag \"sending ctrl-c-ctrl-c #{location}\"\n\n      sendGetFile = (con, name, callback)->\n        webSocket = con.websocket\n        if m = name.match /#.*$/\n          name = name.substring 0, name.length - m[0].length\n        id = \"file-#{fileCount++}\"\n        diag \"sending getFile #{id} #{name}\"\n        con.fileCallbacks[id] = (file)->\n          delete con.fileCallbacks[id]\n          callback file\n        webSocket.send \"getFile #{id} #{name}\"\n\n      blockRangeFor = (data, start, end)->\n        bOff = data.blockOffsetForDocOffset start\n        bOff.block = data.getBlock bOff.block\n        bOff.length = end - start\n        bOff.type = if start == end then 'Caret' else 'Range'\n        bOff\n\n      configureEmacs = (panel)->\n        opts = UI.context.opts\n        data = opts.data\n        data.emacsConnection =\n          panel: panel\n          opts: UI.context.opts\n          fileCallbacks: {}\n          changeCount: 0\n          pendingChanges: {}\n        panel.find('button').button().on 'click', ->\n          [host, port] = panel.find('input').val().split(':')\n          connect opts, host, Number(port), '', ->\n        $(document).ready ->\n          if document.location.search.length > 1 && !connected\n            connected = true\n            {connect:con} = getDocumentParams()\n            if con\n              u = new URL con\n              if u.protocol == 'emacs:' && m = u.pathname.match /^\\/\\/([^:]*)(:[^\\/]*)(\\/.*)$/\n                [ignore, host, port, cookie] = m\n                connect opts, host, port.substring(1), cookie.substring(1)\n\n      Object.assign Leisure, {\n        blockRangeFor\n        configureEmacs\n        configureEmacsOpts: configureOpts\n      }\n\n      {\n      }\n"
  ]
}