{
  "version": 3,
  "file": "leisure-support.js",
  "sourceRoot": "..",
  "sources": [
    "src/leisure-support.litcoffee"
  ],
  "names": [],
  "mappings": "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",
  "sourcesContent": [
    "Support code for Leisure\n\n    'use strict'\n    define ['./base', './ast', './runtime', './gen', './eval', './org', './transaction'], (Base, Ast, Runtime, Gen, Eval, Org, Transaction)->\n      {\n        define\n        getType\n        cons\n        unescapePresentationHtml\n        isNil\n        isPartial\n        partialCall\n        doPartial\n        Nil\n      } = root = Ast\n      {\n        Node\n        resolve\n        lazy\n        defaultEnv\n      } = Base\n      rz = resolve\n      lz = lazy\n      lc = Leisure_call\n      {\n        runMonad2\n        newConsFrom\n        setValue\n        getValue\n        makeSyncMonad\n        makeHamt\n        _true\n        _false\n        _identity\n        unit\n        jsonConvert\n        Monad2\n        some\n        none\n        lacons: acons\n        right\n        left\n        bind\n      } = Runtime\n      {\n        evalLeisure\n      } = Eval\n      {\n        parseCodeAttributes\n      } = Org\n\n      currentDataChange = null\n\n      getSvgElement = (id)->\n        if (el = document.getElementById id) then el\n        else\n          svg = createNode \"<svg id='HIDDEN_SVG' xmlns='http://www.w3.org/2000/svg' version='1.1' style='top: -100000px; position: absolute'><text id='HIDDEN_TEXT'>bubba</text></svg>\"\n          document.body.appendChild(svg)\n          document.getElementById id\n\n      svgMeasureText = (text)->(style)->(f)->\n        txt = getSvgElement('HIDDEN_TEXT')\n        if rz style then txt.setAttribute 'style', rz style\n        txt.lastChild.textContent = rz text\n        bx = txt.getBBox()\n        rz(f)(lz bx.width)(lz bx.height)\n\n      # try to take strokeWidth into account\n      svgMeasure = (content)-> primSvgMeasure content, baseStrokeWidth\n\n      # (unused) try to take strokeWidth into account\n      svgBetterMeasure = (content)-> primSvgMeasure content, transformStrokeWidth\n\n      # try to take strokeWidth into account\n      primSvgMeasure = (content, transformFunc)->(f)->\n        svg = createNode \"<svg xmlns='http://www.w3.org/2000/svg' version='1.1' style='top: -100000'><g>#{content}</g></svg>\"\n        document.body.appendChild(svg)\n        g = svg.firstChild\n        bbox = g.getBBox()\n        pad = getMaxStrokeWidth g, g, svg, transformFunc\n        document.body.removeChild(svg)\n        rz(f)(lz bbox.x - Math.ceil(pad/2))(lz bbox.y - Math.ceil(pad/2))(lz bbox.width + pad)(lz bbox.height + pad)\n\n      baseElements = ['path', 'rect', 'circle', 'ellipse', 'line', 'polyline', 'polygon']\n\n      foldLeft = (func, val, thing)->\n        if thing instanceof Leisure_cons then thing.foldl func, val\n        else primFoldLeft func, val, thing, 0\n\n      primFoldLeft = (func, val, array, index)->\n        if index < array.length then primFoldLeft func, func(val, array[index]), array, index + 1\n        else val\n\n      getMaxStrokeWidth = (el, base, svg, transformFunc)->\n        if base.nodeName in baseElements\n          #hack to parse strokeWidth string by setting the width of the svg to it\n          svg.setAttribute 'width', (getComputedStyle(base).strokeWidth ? '0'), svg\n          transformFunc el, svg.width.baseVal.value\n        else if base.nodeName == 'use' then getMaxStrokeWidth base, base.instanceRoot.correspondingElement, svg, transformFunc\n        else if base.nodeName == 'g'\n          foldLeft ((v, n)-> Math.max v, (getMaxStrokeWidth n, n, svg, transformFunc)), 0, el.childNodes\n        else 0\n\n      baseStrokeWidth = (el, w)-> w\n\n      transformStrokeWidth = (el, w)->\n        if w == 0 then 0\n        else\n          ctm = el.getScreenCTM()\n          tp1 = transformedPoint pt, bx.x - Math.ceil(w), bx.y - Math.ceil(w), ctm, isctm\n          tp2 = transformedPoint pt, bx.x + bx.width + Math.ceil(w), bx.y + bx.height + Math.ceil(w), ctm, isctm\n          x = tp2.x - tp1.x\n          y = tp2.y - tp1.y\n          Math.sqrt(x * x + y * y)\n\n      createNode = (txt)->\n        scratch = document.createElement 'DIV'\n        scratch.innerHTML = txt\n        scratch.firstChild\n\n      define 'svgMeasure', ((content)->svgMeasure(rz content)), 1\n\n      define 'svgMeasureText', ((text)->svgMeasureText(rz text)), 1\n\n      define 'dataMod', setDataType ((op)->\n        m = new Monad2 (env, cont)->\n          data = {}\n          runMods env, rz(op), data, cont, true\n        m.op = op\n        m.leisureType = 'dataMod'\n        m), 'dataMod'\n\n      define 'dataModOperation', (mod)-> rz (rz mod).op\n\n      define 'setTheme', (theme)->\n        new Monad2 (env, cont)->\n          env.opts.setTheme theme\n          cont unit()\n\n      collabId = 0\n\n      envData = (env)-> (env.data || env.opts.data || Lounge.data)\n\n      dispatchCollaborative = (name, args)->\n        new Monad2 \"collaborative-#{name}\", (env, cont)->\n          envData(env).doCollaboratively(name, _.map(args, (el)-> L_toJson(el)))\n            .then (result)-> cont right jsonConvert result\n            .catch (err)-> cont left err.stack\n\n      defaultEnvWithData = (data)->\n        env = Object.create defaultEnv\n        env.data = data\n        env\n\n      define 'makeCollaborative', (func)->\n        new Monad2 'makeCollaborative', (env, cont)->\n          data = envData env\n          func = rz func\n          name = func.L$info?.name\n          if func.length > 1\n            dispatchSrc = \"\"\"\n            (function(#{('a' + i for i in [1 .. func.length - 1]).join ', '}){\n              return isPartial(arguments) ? partialCall(arguments) : dispatchCollaborative(name, arguments);\n            })\n            \"\"\"\n            dispatchFunc = eval dispatchSrc\n            funcLen = dispatchFunc.length\n          else\n            dispatchFunc = dispatchCollaborative name, []\n            funcLen = 0\n          define name, dispatchFunc, funcLen, dispatchSrc\n          data.openRegistration()\n          data.registerCollaborativeCode name, (context, args...)->\n            cvtArgs = _.map(args, (el)-> jsonConvert(el))\n            cvtArgs.unshift acons 'options', context.options, acons('slaveId', context.slaveId, L_nil)\n            runMonad2 func.apply(null, cvtArgs), defaultEnvWithData(data), ->\n          data.closeRegistration()\n          cont unit()\n\n      define 'getData', (name)->\n        new Monad2 'getData', (env, cont)->\n          d = envData(env).getData rz(name)\n          if d then cont jsonConvert d\n          else cont unit()\n\n      define 'getDataOpt', (name)->\n        new Monad2 'getData', (env, cont)->\n          d = envData(env).getData rz(name)\n          if d then cont some jsonConvert d\n          else cont none\n\n      define 'getDataUnsafe', (name)->\n        new Monad2 'getData', (env, cont)->\n          d = envData(env).getData rz(name), true\n          if d then cont jsonConvert d\n          else cont unit()\n\n      define 'getDataUnsafeOpt', (name)->\n        new Monad2 'getData', (env, cont)->\n          d = envData(env).getData rz(name), true\n          if d then cont some jsonConvert d\n          else cont none\n\n      define 'getLocalData', (name)->\n        new Monad2 'getLocalData', (env, cont)->\n          d = envData(env).getLocalData rz(name), true\n          if d then cont jsonConvert d\n          else cont unit()\n\n      define 'getLocalDataOpt', (name)->\n        new Monad2 'getLocalData', (env, cont)->\n          d = envData(env).getLocalData rz(name), true\n          if d then cont some jsonConvert d\n          else cont none\n\n      define 'setData', (name, value)-> if r = doPartial arguments then r else\n        new Monad2 'setData', (env, cont)->\n          cont jsonConvert envData(env).setData rz(name), L_toJson rz value\n\n      define 'setLocalData', (name, value)-> if r = doPartial arguments then r else\n        new Monad2 'setLocalData', (env, cont)->\n          cont jsonConvert envData(env).setLocalData rz(name), L_toJson rz value\n\n      define 'appendData', (headline, name, value)-> if r = doPartial arguments then r else\n        new Monad2 'appendData', (env, cont)->\n          envData(env).appendDataToHeadline rz(headline), rz(name), L_toJson rz value\n          cont jsonConvert rz value\n\n      define 'appendDataWithAttrs', (headline, name, attrs, value)->\n        if r = doPartial arguments then r else\n          new Monad2 'appendDataWithAttrs', (env, cont)->\n            envData(env).appendDataToHeadline rz(headline), (!isNil(rz name) && rz(name)), L_toJson(rz(value)), parseCodeAttributes(rz(attrs))\n            cont rz value\n\n      define 'removeData', (name)->\n        new Monad2 'removeData', (env, cont)->\n          envData(env).removeData rz(name)\n          cont unit()\n\n      define 'getImage', (name)-> if isPartial arguments then partialCall arguments else\n        data = Lounge.opts.data\n        new Monad2 (env, cont)->\n          data.getImage rz(name), ((url)-> cont right url), (failure)-> cont left failure\n\n      startMonitor = -> new Monad2 (env, cont)-> cont monitorChanges env.opt.data\n\n      endMonitor = (mon)-> new Monad2 (env, cont)-> cont mon.stop()\n\n      define '_monitorChanges', (val)->\n        bind startMonitor(), lz (mon)->\n          bind val, lz (result)->\n            bind endMonitor(mon), (ignore)->\n              cons mon, result\n\n      evalLeisure \"\"\"\n      defMacro 'monitorChanges' \\\\list . ['_monitorChanges' ['do' | list]]\n      \"\"\"\n"
  ]
}