{
  "version": 3,
  "file": "search.js",
  "sourceRoot": "..",
  "sources": [
    "src/search.litcoffee"
  ],
  "names": [],
  "mappings": "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",
  "sourcesContent": [
    "    'use strict'\n    define ['./editor', './editorSupport', './ui', './modes'], (Editor, EditorSupport, UI, Modes)->\n      {\n        findEditor\n        LeisureEditCore\n        preserveSelection\n      } = Editor\n      {\n        OrgEditing\n        editorForToolbar\n        basicDataFilter\n      } = EditorSupport\n      {\n        fancyMode\n        doSlideValue\n      } = Modes\n      {\n        addView\n        removeView\n        renderView\n        hasView\n        viewKey\n        addController\n        removeController\n        withContext\n        mergeContext\n        initializePendingViews\n      } = UI\n\n      searchToken = /[^\\'\\\"]+|\\'[^\\']*\\'|\\\"[^\\\"]*\\\"/g\n      editorCount = 0\n\n      normalize = (str)-> str && str.toLowerCase().replace(/([^a-z0-9]|\\n)+/g, '').trim()\n\n      chr = (c)-> c.charCodeAt 0\n\n      grams = (str, gr = {})->\n        str = normalize str\n        if str\n          for cc in [chr('a')..chr('z')].concat [chr('0')..chr('9')]\n            c = String.fromCharCode cc\n            if str.indexOf(c) > -1 then gr[c] = true\n        if str && str.length >= 2\n          for i in [0...str.length - 3]\n            gr[str.substring i, i + 2] = true\n        if str && str.length >= 3\n          for i in [0...str.length - 2]\n            gr[str.substring i, i + 3] = true\n        gr\n\n      tokenize = (query)-> _.map query.match(searchToken) ? [], normalize\n\n      indexQuery = (query)->\n        tri = {}\n        tokens = {}\n        for token in tokenize query\n          if !tokens[token]\n            tokens[token] = true\n            grams token, tri\n        grams: tri\n        tokens: _.keys tokens\n\n      addSearchDataFilter = (data)->\n        updateEditors = _.throttle -> data.trigger 'updateSearch'\n        data.addFilter\n          __proto__: basicDataFilter\n          clear: (data)->\n            data.ftsIndex =\n              sizes: {}\n              gramBlocks: {}\n          replaceBlock: (data, oldBlock, newBlock)->\n            for gram of grams oldBlock?.text\n              if data.ftsIndex.gramBlocks[gram]?[oldBlock._id]\n                delete data.ftsIndex.gramBlocks[gram]?[oldBlock._id]\n                if ! --data.ftsIndex.sizes[gram]\n                  delete data.ftsIndex.gramBlocks[gram]\n                  delete data.ftsIndex.sizes[gram]\n            for gram of grams newBlock?.text\n              if !data.ftsIndex.gramBlocks[gram]?[newBlock._id]\n                if !data.ftsIndex.gramBlocks[gram]\n                  data.ftsIndex.gramBlocks[gram] = {}\n                  data.ftsIndex.sizes[gram] = 0\n                data.ftsIndex.gramBlocks[gram]?[newBlock._id] = true\n                ++data.ftsIndex.sizes[gram]\n            setTimeout updateEditors, 1\n\n      searchForBlocks = (data, query)->\n        {tokens, grams: g} = indexQuery query\n        {gramBlocks, sizes} = data.ftsIndex\n        counts = []\n        for gram of g\n          if !sizes[gram] then return []\n          else counts.push gram: gram, size: sizes[gram]\n        if counts.length\n          counts.sort (a, b)-> b.size - a.size\n          results = _.keys gramBlocks[counts.pop().gram]\n          for count in counts by -1\n            blocks = gramBlocks[count.gram]\n            results = _.filter results, (x)-> blocks[x]\n          _.filter results, (id)->\n            text = normalize data.getBlock(id).text\n            _.every tokens, (tok)-> text.search(tok) >= 0\n        else []\n\n      class SearchEditor extends OrgEditing\n        constructor: (data, @text)->\n          super data\n          @data = data\n          @results = {}\n          @addDataCallbacks updateSearch: => @redisplay()\n          @setPrefix \"search-#{editorCount++}-\"\n        checkValid: ->\n          if !document.documentElement.contains $(@editor.node)[0]\n            @cleanup()\n            false\n          true\n        initToolbar: ->\n        setResults: (newResults)->\n          if changed = !_.isEqual newResults, @results\n            @results = newResults\n            @rerenderAll()\n          changed\n        renderBlock: (block)->\n          realBlock = @getBlock block\n          if @shouldRender realBlock\n            super realBlock\n          else ['', realBlock?.next]\n        shouldRender: (block)->\n          while block\n            if @results[block._id] then return true\n            block = @data.parent block\n          false\n        search: ->\n          if hits = searchForBlocks(@data, @text.val())\n            results = _.transform hits, ((obj, item)-> obj[item] = true), {}\n            @setResults results\n        redisplay: -> preserveSelection => @search()\n\n      openSearch = (event)->\n        editor = editorForToolbar(event.originalEvent.srcElement)\n        withContext {editor: editor}, =>\n          $(editor.node)\n            .append renderView 'leisure-search'\n          initializePendingViews()\n\n      configureSearch = (view)->\n        editor = UI.context.editor\n        output = $(view).find '.leisure-searchOutput'\n        input = $(view).find '.leisure-searchText'\n        output.parent().addClass 'flat'\n        searchEditor = new LeisureEditCore output, new SearchEditor(editor.options.data, input).setMode fancyMode\n        opts = searchEditor.options\n        Leisure.configureEmacsOpts opts\n        Leisure.configurePeerOpts opts\n        opts.data.openRegistration()\n        opts.data.registerCollaborativeCode 'doSlideValue', doSlideValue\n        opts.data.registerCollaborativeCode 'viewBoundSet', (context, name, data)-> options.setData name, data\n        opts.data.closeRegistration()\n        opts.hiding = false\n        output.prev().filter('[data-view=leisure-toolbar]').remove()\n        input.on 'input', (e)-> opts.search()\n        opts\n\n      Object.assign Leisure, {\n        openSearch\n        configureSearch\n        searchForBlocks\n      }\n\n      {\n        normalize\n        indexQuery\n        tokenize\n        addSearchDataFilter\n        grams\n        searchForBlocks\n        openSearch\n      }\n"
  ]
}