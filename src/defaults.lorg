* These are Leisure's system views

Some of these have newlines in strange places.  This is because it's crucial that
no extra characters be inserted into the basic views in the wrong places.  So you
won't see linebreaks for readability in the HTML where you normally would.  Instead,
there are linebreaks inside of element tags or inside of templating code.

Here are the two special rules for these system views that don't apply to other views:

1. Don't change the order of Leisure content
2. Don't add or remove Leisure content (this includes newlines and spaces)

Anything else if fair game -- you can hide the content, you can add text
in as long as you mark it as data-noncontent, etc.

* Toolbar
#+BEGIN_SRC html :defview header
<div contenteditable='false' data-noncontent>
  <div class="paginators">
    <button name="prevSlide" class="bound">
      <i class="fa fa-caret-left fa-1x"></i>
      <span></span>
    </button>
    <button name="nextSlide" class="bound">
      <i class="fa fa-caret-right fa-1x"></i>
      <span></span>
    </button>
  </div>
  <div name="dummy_headline"></div>
  <div name="valueSlider" class='hidden'></div>
</div>
#+END_SRC

#+BEGIN_SRC html :defview leisure-toolbar
{{#condense 'true'}}
<div name='buttons' style="position: relative;">
  <div style='position: relative; display: inline-block; width: calc(100% - 13em)'>
    <button name='leisure_grip' title='x'>
      <i class='fa fa-angle-left'></i>
      <i class='fa fa-angle-right'></i>
    </button>
    <label name="showHide"><input type='checkbox'></input>Fred</label>
    <button name='search'>Search</button>
    <span name='storage-panel' class='expandable-panel'>
      <button class='label'>Storage</button>
      <span class='contents'>
        <button name='saveFile'>Click to save</button>
        <button name='loadFile'>Load file</button>
        <button name='saveToBrowser'>Save in browser</button>
        <button name='reloadFromBrowser'>Reload from browser</button>
        <button name='removeFromBrowser'>Remove from browser</button>
      </span>
    </span>
    <span class='expandable-panel'>
      <button class='label'>Visual</button>
      <span class='contents'>
        <button name='diag'>Diag: off</button>
        <div class='themeHolder' style="display: inline-block; overflow: hidden">
          <div class='themeDiv' style="position: absolute; top: 0;">
            <select name='themeSelector'></select>
          </div>
        </div>
        <button name='slides'>Slides</button>
      </span>
    </span>
    <div name='emacsConnector' class='hidden-panel'>
      <button class='label' name='emacsLabel'>Emacs</button>
      <span class='contents'>
        <button name='connectToEmacs'>Emacs</button>
        <span name="emacsHost"> Host: <input type='text' value="localhost:1315"></span>
      </span>
    </div>
    <div name='p2pConnector' class='expandable-panel'>
      <button class='label' name='p2plabel'>Collaboration</button>
      <span class='contents not-connected'>
        <button name='createSession'>Create Session</button>
        <span class='when-not-connected'> Relay Host: <input name="p2pHost"></span>
        <span class='when-connected'>
          Connections: <span name='connections'>0</span>
          Connection URL: <a name="sessionKey">NO SESSION</a>
        </span>
      </span>
    </div>
  </div>
  <a name="tc" target="_blank" href="http://www.teamcthulhu.com">
    <button name="team_cthulhu" title="x">
      <span><img src="css/images/eldersign.png">TEAM CTHULHU</span>
    </button>
  </a>
</div>
{{/condense}}
#+END_SRC

#+BEGIN_SRC cs :control header
@initializeView = (view)->
  opts = Leisure.findEditor(view).options
  view.find('[name=prevSlide]').on 'click', -> opts.mode.showPrevSlide(opts)
  view.find('[name=nextSlide]').on 'click', -> opts.mode.showNextSlide(opts)
  vs = view.find('[name=valueSlider]')
  vs.slider
    slide: -> Leisure.slideValue()
    start: -> Leisure.setSliding true
    stop: -> Leisure.setSliding false
  vs.slider().on 'mouseleave', -> Leisure.mayHideValueSlider()
  vs.on 'mouseleave', -> Leisure.mayHideValueSlider()
#+END_SRC

#+BEGIN_SRC cs :control leisure-toolbar
themes = [
  'Flat',
  'Googie',
  'Steampunk',
  'Cthulhu',
  'Console',
]

@initializeView = (view)->
  Leisure.UI.configurePanels view
  toolbar = view.find('[name=buttons]')
  view.find('[name=leisure_grip]').button().on 'click', (e)-> view.toggleClass 'collapse'
  view.find('[name=slides]').button().on 'click', (e)->
    Leisure.editorForToolbar(view[0]).options.toggleSlides()
  view.find('[name=showHide]')
    .button()
    .on 'click', (e)-> updateButton view, Leisure.showHide view[0]
  view.find('[name=team_cthulhu]').button()
  updateButton view, Leisure.editorForToolbar(view[0]).options.hiding
  view.find('[name="search"]').button().on 'click', (e)-> Leisure.openSearch e
  #view.find('[name="storage-panel"]').on 'click', (e)->
  #  Leisure.presentation.configureSaveLink view.find('[name="saveFile"]'), Leisure.editorForToolbar view[0]
  view.find('[name="saveFile"]').button().on 'click', (e)->
    Leisure.presentation.saveFile Leisure.editorForToolbar view[0]
  view.find('[name="loadFile"]').button().on 'click', (e)->
    Leisure.presentation.loadFile Leisure.editorForToolbar view[0]
  view.find('[name="saveToBrowser"]').button(disabled: true).on 'click', (e)->
    Leisure.presentation.saveToBrowser Leisure.editorForToolbar view[0]
  view.find('[name="reloadFromBrowser"]').button(disabled: true).on 'click', (e)->
    Leisure.presentation.reloadFromBrowser Leisure.editorForToolbar view[0]
  view.find('[name="removeFromBrowser"]').button(disabled: true).on 'click', (e)->
    Leisure.presentation.removeFromBrowser Leisure.editorForToolbar view[0]
  view.find('[name="diag"]').button().on 'click', (e)->
    show = !Leisure.getDiagShowing view
    Leisure.showDiag view, show
    $(this).button 'option', 'label', "Diag: #{if show then 'on' else 'off'}"
  p2pWidgets =
    panel: view.find('[name="p2pConnector"]')
    label: view.find('[name="p2plabel"]')
    hostField: view.find('[name="p2pHost"]')
    sessionField: view.find('[name="sessionKey"]')
    createSessionButton: view.find('[name="createSession"]')
    connections: view.find('[name="connections"]')
  $([p2pWidgets.createSessionButton]).button()
  Leisure.configureP2P p2pWidgets
  themeMenu = view.find('[name="themeSelector"]')
  themeMenu[0].innerHTML = ''
  themeMenu.selectmenu change: -> selectTheme this
  for theme in themes
    themeMenu[0].innerHTML += "<option value='#{theme.toLowerCase()}'>#{theme}</option>"
  themeMenu.val 'flat'
  selectTheme themeMenu[0]
  themeMenu.selectmenu 'refresh'
  Leisure.configureEmacs view.find('[name="emacsConnector"]')

selectTheme = (select)->
  Leisure.editorForToolbar(select).options.setTheme select.value

updateButton = (view, hiding)->
  view.find('label').button 'option', 'label', if hiding
    "<i class='fa fa-eye-slash'></i> Show/hide"
  else
    "<i class='fa fa-eye'></i> Show/hide"
#+END_SRC

#+NAME: toolbar-css
#+BEGIN_SRC css
[data-view=leisure-toolbar] {
  z-index: 1000;
}
[data-view=leisure-toolbar] [name=leisure_grip] .fa-angle-right {
  display: none;
}
[name=leisure_grip] .ui-button-text {
  padding-left: 1ex;
  padding-right: 1ex;
}

[data-view=leisure-toolbar].collapse {
  width: 2em;
  max-width: 2em;
  position: fixed;
  left: 0;
  top: 0;
  z-index: 100;
  background: transparent;
}
[data-view=leisure-toolbar].collapse [name=buttons] > * > * {
  display: none;
}
[data-view=leisure-toolbar] [name=leisure_grip] {
  border-top-left-radius: 10px;
  border-bottom-left-radius: 10px;
  border-top-right-radius: 0;
  border-bottom-right-radius: 0;
}
[data-view=leisure-toolbar].collapse [name=leisure_grip] {
  display: inline;
  border-top-left-radius: 0;
  border-bottom-left-radius: 0;
  border-top-right-radius: 10px;
  border-bottom-right-radius: 10px;
  opacity: 0.5;
  background-color: #111;
}
[data-view=leisure-toolbar].collapse [name=leisure_grip] .fa-angle-left {
  display: none;
}
[data-view=leisure-toolbar].collapse [name=leisure_grip] .fa-angle-right {
  display: inline;
}
[name=team_cthulhu] {
  float: right;
}
[name=team_cthulhu] img {
  height: 1em;
}
[maindoc].diag {
  height: calc(100% - 20em);
}
[maindoc] {
  height: calc(100% - 3em);
  margin-top: 2.5em;
  overflow: auto;
}
.collapse + [maindoc] {
  height: 100%;
}
[data-view='leisure-toolbar'].collapse + [maindoc] {
  margin-top: 0;
}
[data-view='leisure-toolbar'] {
  position: fixed;
  width: 100%;
  height: 2.5em;
}
.themeDiv {
  display: inline-block;
}
[name='buttons'] {
  position: relative;
  display: block;
}
.hidden-panel {
  display: inline-block;
}
/*.hidden-panel:hover .contents,*/
.hidden-panel.expand .contents {
  display: inherit;
  width: inherit;
}
/*.hidden-panel:hover .label,*/
.hidden-panel.expand .label,
.hidden-panel .contents {
  display: none;
}
[name='emacsHost'] input {
  width: 8em;
}
[name='p2pHost'] {
  width: 30ex;
}
.connected .when-not-connected,
.not-connected .when-connected {
  display: none;
}
[name='sessionKey'] {
  width: 72ex;
}
[name='buttons'] .ui-button {
  height: 2em;
  overflow: hidden;
  margin-bottom: 2px;
}
[name='buttons'] .ui-selectmenu-text,
[name='buttons'] .ui-selectmenu-button,
[name='buttons'] label.ui-button {
  height: calc(2em - 2px);
}
.themeDiv .ui-selectmenu-button {
  width: 17ex !important;
}
.themeDiv,
.themeHolder {
  width: 19ex;
}
#+END_SRC

* Blocks
** Source Toggle
#+BEGIN_SRC html :defview leisure-source-toggle
{{#if topLevel}}<button class='toggle_edit' contenteditable='false' data-noncontent><i class="fa fa-glass"></i></button><span name='headlineCollapse'><i class='fa fa-caret-down' aria-hidden='true'></i></span><span data-noncontent contenteditable='false'> </span>{{/if}}
#+END_SRC

#+BEGIN_SRC cs :control leisure-source-toggle
@initializeView = (view)->
  if (slide = view.closest('[data-headline]')).is('[data-headline="1"]') ||
  (slide = view.closest("[data-view='leisure-headline-plain']").find('[data-headline="1"]')).length ||
  (slide = view.closest('[data-view="leisure-top-chunk"]').find('[data-block]').first()).length
    view.find('button.toggle_edit').on 'click', -> Leisure.toggleSlideMode slide
  view.find('[name=headlineCollapse]').on 'mousedown', (e)->
    e.preventDefault()
    button = e.currentTarget
    codeBlock = $(button).closest('[data-block]')[0]
    if codeBlock
      if codeBlock.hasAttribute 'data-collapsed'
        codeBlock.removeAttribute 'data-collapsed'
        $(button).html '<i class="fa fa-caret-down" aria-hidden="true"></i>'
      else
        codeBlock.setAttribute 'data-collapsed', ''
        $(button).html '<i class="fa fa-caret-right" aria-hidden="true"></i>'
#+END_SRC
** Headline
#+BEGIN_SRC html :defview leisure-headline-plain
<div class='slideholder'
data-org-headline='{{level}}'
 ><div class='page'
   ><div class='border'></div
   ><div class='.pagecontent'>{{> leisure-source-toggle}}{{{renderPlain this}}}</div></div></div>
#+END_SRC

#+BEGIN_SRC html :defview leisure-top-chunk
<div class='slideholder'
 ><div class='page'
   ><div class='border'></div
   ><div id='{{id}}' class='fancy pagecontent' data-edit-mode='fancy'
     ><span data-noncontent contenteditable='false'>{{> leisure-source-toggle}}
</span>{{{text}}}</div></div></div>
#+END_SRC

#+BEGIN_SRC html :defview leisure-top-chunk-with-sidebar
<div class='slideholder'
 ><div class='page'
   ><div class='border'></div
   ><table class='sidebar-table'><tr><td class='sidebar-main'><div id='{{id}}' class='fancy pagecontent' data-edit-mode='fancy'
     ><span data-noncontent contenteditable='false'>{{> leisure-source-toggle}}
</span>{{{text}}}</div></td><td class='sidebar-side'>{{> sidebars}}</td></tr></table></div></div>
#+END_SRC

#+BEGIN_SRC html :defview leisure-top-headline
<div class='slideholder'
 ><div class='page'
   ><div class='border'></div
   ><div id='{{id}}' class='fancy pagecontent'
data-edit-mode='fancy'
data-block='headline'
data-org-headline='{{level}}'
data-headline='{{level}}'><span class='maincontent'><span class='hidden'
>{{stars}}</span><div data-org-type='text'><div data-org-type='headline-content'
><div class="textborder" contenteditable="false"></div><div class='headline-content'
><div class='maintext'>{{> leisure-source-toggle}}{{{maintext}}}</div></div></div></div><div>{{#each children}}{{{
render this
}}}{{/each}}</div></span></div></div></div>
#+END_SRC

#+BEGIN_SRC html :defview leisure-top-headline-with-sidebar
<div class='slideholder'
 ><div class='page'
   ><div class='border'></div
   ><table class='sidebar-table'><tr><td class='sidebar-main'><div id='{{id}}' class='fancy pagecontent'
data-edit-mode='fancy'
data-block='headline'
data-org-headline='{{level}}'
data-headline='{{level}}'><span class='maincontent'><span class='hidden'
>{{stars}}</span><div data-org-type='text'><div data-org-type='headline-content'
><div class="textborder" contenteditable="false"></div><div class='headline-content'
><div class='maintext'>{{> leisure-source-toggle}}{{{maintext}}}</div></div></div></div><div>{{#each children}}{{{
render this
}}}{{/each}}</div></span></div></td><td class='sidebar-side'>{{> sidebars}}</td></tr></table></div></div>
#+END_SRC

#+BEGIN_SRC html :defview leisure-sidebar
<div id='{{id}}' class='fancy pagecontent'
data-edit-mode='fancy'
data-block='headline'
data-org-headline='{{level}}'
data-headline='{{level}}'><span class='maincontent'><span class='hidden'
>{{stars}}</span><div data-org-type='text'><div data-org-type='headline-content'
><div class="textborder" contenteditable="false"></div><div class='headline-content'
><div class='maintext'>{{> leisure-source-toggle}}{{{maintext}}}</div></div></div></div><div>{{#each children}}{{{
render this
}}}{{/each}}</div></span></div>
#+END_SRC

#+BEGIN_SRC html :defview sidebars
{{#each sidebars}}{{{this}}}{{/each}}
#+END_SRC

#+BEGIN_SRC html :defview leisure-headline
<div id='{{id}}' class='fancy{{#if firstText}} first-text letter-{{firstText}}{{/if}}'
{{{style}}}
data-edit-mode='fancy'
data-block='headline'
data-headline='{{level}}'><span class='hidden'>{{stars}}</span><div class='maintext'>{{{maintext}}}</div>{{#each children}}{{{
render this
}}}{{/each}}</div>
#+END_SRC
** Chunk
#+BEGIN_SRC html :defview leisure-chunk
<span id='{{id}}' class='fancy{{#if firstText}} first-text letter-{{firstText}}{{/if}}' data-block='chunk'>{{{text}}}</span>
#+END_SRC

#+BEGIN_SRC html :defview leisure-example
<span class='hidden'>{{start}}</span><span class='example'>{{text}}</span><span class='hidden'>{{end}}</span>
#+END_SRC
** Code
#+BEGIN_SRC html :defview leisure-code
<span
  id='{{id}}'
  class='fancy default-lang'
  data-block='code'
  contenteditable='false'
  data-org-type='source'
  data-shared='code'
  data-lang='{{language}}'
  >{{> leisure-code-boiler}}<div
    class='code-text'
    data-org-src
    data-contain
    contenteditable='true'>{{{renderSource}}}</div><span
class='hidden'>{{footer}}</span>{{#if
inter}}<div>{{{inter}}}</div>{{/if}}{{#if
results}}{{#if hideResults}}{{{results}}}{{else}}<div
class='code-results' data-org-src>{{{results}}}</div>{{/if}}{{/if}}{{> codeMenuButton}}</span>
#+END_SRC

#+BEGIN_SRC cs :control leisure-code
@initializeView = (view)->
  Leisure.createValueSliders()
  Leisure.initCodeMenu view
#+END_SRC

#+BEGIN_SRC html :defview leisure-code-boiler
<span class='codename-holder'><span class='codename'>{{#if nameBoiler
}}<span class='hidden'>{{nameBoiler
}}</span><span class='name-label'><span data-noncontent>"</span><span
contenteditable='true' class='name'>{{nameText
}}</span><span data-noncontent>"
</span></span><span class='hidden'>
</span>{{#if afterName}}<span class='code-doc-holder'><span class='code-doc-background'></span><span class='code-doc' contenteditable='true'>{{{afterName}}}</span></span>{{/if}}{{/if}}<div class='src-line-break'></div>{{> leisure-code-src-line}}</span></span>
#+END_SRC

#+BEGIN_SRC html :defview leisure-code-src-line
<div class='codeHeading' contenteditable='true'><span class='hidden'>{{sourceBoiler sourceOrg}}</span>{{sourceInfo}}</div>
#+END_SRC

#+BEGIN_SRC html :defview leisure-code/inline-html
<span
id='{{id}}'
data-block='code'
contenteditable='false'
data-lang='{{language}}'><span class='hidden'>{{block.text}}</span><span data-noncontent contenteditable='false'>{{{renderHtml source}}}</span></span>
#+END_SRC

#+BEGIN_SRC html :defview leisure-code/results-only
<span
id='{{id}}'
data-block='code'
contenteditable='false'
class='code-results'
data-org-src
data-lang='{{language}}'><span class='hidden'>{{beforeResults}}</span>{{{results}}}{{> codeMenuButton}}</span>
#+END_SRC

#+BEGIN_SRC cs :control leisure-code/results-only
@initializeView = (v)->
  Leisure.initCodeMenu v
  for img in v.find('img')
    Leisure.UI.refreshImage img
#+END_SRC

#+BEGIN_SRC html :defview leisure-code/jsX
<span
id='{{id}}'
class='fancy codeblock'
data-block='code'
contenteditable='false'
data-lang='{{language}}'><table><tr><td class='code-controls' data-noncontent>
<span class='hidden'>CONTROLS</span>
</td><td class='code-text'>{{{text}}}</td><td></td></tr></table></span>
#+END_SRC

#+BEGIN_SRC cs :control leisure-code/jsX
@initializeView = (view)-> Leisure.createValueSliders()
#+END_SRC

#+BEGIN_SRC html :defview leisure-code-source/jsX
<span
class='source'
data-org-src='{{block.codeAttributes.results}}'
contenteditable='true'><span class='hidden'>{{sourceHeader}}</span>{{{renderSource}}}<span class='hidden'>{{sourceFooter}}</span></span>
#+END_SRC

#+BEGIN_SRC html :defview leisure-code-results/jsX
<span class='results coderesults'
data-org-results='{{block.codeAttributes.results}}'
data-org-type='results'
><span class='hidden'>{{resultsHeader this}}</span>{{{resultsContents this}}}</span>
#+END_SRC
** Block CSS
#+NAME: block-css
#+BEGIN_SRC css
[name=valueSlider] {
  z-index: 1;
}
/****
 * Hacky flex settings to simulate wimpy grid-layout.
 * Can't use grid until it's more widely available.
 * The reason for this is to lay out the source items in an order
 * that is different from how the occur in the file.  Custom
 * elements could also solve this (or Shadow DOM) but there's
 * not a lot of cross-browser support there.
 * Also, this flex layout is complicated because I'm running into
 * box sizing problems.  The name-label and leisure-code-src-line
 * widths are being added to the overall width, even though they
 * only occur on the first line together and they are smaller than
 * the maximum width of the elements below them.  So they get width: 0.
 * Then, to compensate for their lack of being able to "push the
 * sides, we set a min-width of 80ex.  Hope that's enough because
 * long src header lines will now wrap.
 *
 * Also, there is no way in Chrome to force a break after an element with
 * flex layout.  break-after and page-break-after are supposed to do this
 * but they don't.
 ****/
 .codename-holder {
  display: inline-block;
  padding: 5px;
  width: 100%;
 }
.codename {
  display: inline-flex;
  flex-wrap: wrap;
  /*
  padding-top: 5px;
  padding-left: 5px;
  padding-right: 5px;
  */
  /*min-width: 80ex;*/
  width: 100%;
}
.name-label {
  order: 1;
}
.code-doc-holder {
  flex-basis: calc(100% - 30px);
  order: 3;
  width: 0;
  position: relative;
  font-style: italic;
  font-size: larger;
  padding: 10px;
  /*
  margin: 5px;
  */
}
.code-doc-background {
  position: absolute;
  top: 0;
  bottom: 0;
  left: 0;
  right: 0;
  opacity: 0.1;
  background-color: black;
}
.code-doc {
  position: relative;
}
[data-edit-mode='fancy'] [data-view="leisure-code/results-only"] [data-org-src].code-results {
  display: inline-block;
}
[data-view="leisure-code-src-line"] {
  order: 2;
  flex-grow: 1;
  text-align: right;
  margin-right: 10px;
/*
  width: 0;
  flex-basis: 10ex;
  flex-grow: 1;
*/
  text-align: right;
}
.src-line-break {
  /*
  width: calc(100% - 5ex);
  height: 0px;
  order: 3;
  flex-basis: 100%;
  */
  display: none;
}
/****
 ,* end of hacky flex settings
 ,****/
.fancy[data-block=code] .codeHeading {
  padding-top: 0;
}
.view[data-view='leisure-headline'] {
  display: block;
}
.plain {
  white-space: pre;
  font-family: Courier;
}
/*
.view [data-block],
.view [data-block] * {
  white-space: pre-line;
}
*/
.view [data-block] .code-text,
.view [data-block] .code-text * {
  white-space: pre;
}
.view [data-block][data-lang=text] .code-text .unknown-language,
.view [data-block][data-lang=string] .code-text .unknown-language,
.view [data-org-src] {
  /*font-family: Arial;*/
  font-family: Inconsolata;
  font-weight: bold;
}
.fancy .view [data-block] .maintext {
  white-space: normal;
}
.sidebar-table {
  width: 100%;
}
.sidebar-main {
  width: 60%;
  vertical-align: top;
}
.sidebar-side {
  width: 40%;
  vertical-align: top;
}
span[data-block='code'].fancy {
  border: solid 3px black;
  margin: 2px;
  vertical-align: middle;
  position: relative;
  display: inline-block;
}
.code-controls {
  vertical-align: middle;
  background: lightgray;
}
/* patches for theme problems */
[data-org-src].code-results,
[data-org-src].code-text {
  height: auto;
}
.name-label,
.fancy[data-block=code] .codeHeading,
[data-org-src].code-results,
[data-org-src].code-text {
  font-size: x-large;
}
.code-results {
  margin-top: 1em;
  margin-bottom: 1em;
}
#+END_SRC

* Search
#+BEGIN_SRC html :defview leisure-search
<div title='Search' data-noncontent>
  <div class='frame'>
    <input class='leisure-searchText' type='text'></input>
    <div class='leisure-searchOutputHolder'><div class='leisure-searchOutput'></div></div>
  </div>
</div>
#+END_SRC

#+BEGIN_SRC cs :control leisure-search
@initializeView = (view)->
  searchEditor = null
  d = $(view).children()
    .dialog
      width: 400
      height: 600
      position: my: "right top", at: "right top", of: window
    .on 'dialogclose', ->
      $(this).dialog('destroy')
      $(this).remove()
      searchEditor.cleanup()
    #.on 'dialogclose', -> console.log this
  searchEditor = Leisure.configureSearch d
#+END_SRC

#+NAME: search-css
#+BEGIN_SRC css
.leisure-searchText {
  width: 100%;
  height: 1.5em;
}
.leisure-searchOutput {
  width: 100%;
  height: calc(100% - 1.5em);
  /*background: white;*/
  color: black;
  overflow: auto;
}
#+END_SRC
* Code buttons
#+BEGIN_SRC coffee :results def
Handlebars.registerPartial 'codeMenuButton', """
<div name='codebar'><div name='codeMenuButton' data-widget-holder><button data-code-toggle><i class="fa fa-glass"></i></button><button data-code-button><div data-widget-border></div></button></div><div name='codeCollapse'><i class='fa fa-caret-down' aria-hidden='true'></i></div></div>
"""

codeMenuString = """
  <ul id='codeMenu'>
    <li class='show code' value='toggleShowCode'>Show code
    <li class='hide code' value='toggleShowCode'>Hide code
    <li class='show results' value='toggleShowResults'>Show results
    <li class='hide results' value='toggleShowResults'>Hide results
    <li class='set dynamic' value='toggleDynamic'>Make dynamic
    <li class='clear dynamic' value='toggleDynamic'>Make static
    <li class='set testCase' value='toggleTestCase'>Make testCase
    <li class='clear testCase' value='toggleTestCase'>Clear testCase
  </ul>
"""
menu = $('#codeMenu')
menu.remove()
$(document.body).append codeMenuString
menu = $('#codeMenu').hide().menu
  select: (e, ui)->
    menu.hide()
    block = menu.data 'block'
    menu.data block: null
    if ui.item.is '.code' then block.setExports ui.item.is('.show'), block.exportsResults()
    else if ui.item.is '.results' then block.setExports block.exportsCode(), ui.item.is('.show')
    else if ui.item.is '.dynamic' then block.setDynamic ui.item.is '.set'
    else if ui.item.is '.testCase'
      if ui.item.is '.set'
        block.makeResultsExpected()
        block.setResultView 'view(testCase)'
      else
        block.clearExpected()
        block.setResultView ''
    block.save true
menu.on 'mouseleave', -> menu.hide()
Leisure.initCodeMenu = (view)->
  opts = Leisure.findEditor(view).options
  blockId = opts.idForNode(view.find '[data-block]')
  $(view).find('[name=codeMenuButton] [data-code-button]').on 'click', (e)->
    console.log "CLICK!"
    block = opts.parsedCodeBlock blockId
    menu = $('#codeMenu')
    menu.find('li').show()
    menu.find(if block.exportsCode() then '.show.code' else '.hide.code').hide()
    menu.find(if block.exportsResults() then '.show.results' else '.hide.results').hide()
    menu.find(if block.isDynamic() then '.set.dynamic' else '.clear.dynamic').hide()
    menu.find(if block.resultsAreExpected() then '.set.testCase' else '.clear.testCase').hide()
    menu.data block: block
    menu.show()
    menu.position my: 'left top', of: $(view).find('[name=codeMenuButton]'), at: 'left top'
  $(view).find('[name=codeMenuButton] [data-code-toggle]').on 'click', (e)->
    console.log "TOGGLE!"
  $(view).find('[name=codeCollapse]').on 'mousedown', (e)->
    e.preventDefault()
    button = e.currentTarget
    codeBlock = $(button).closest('[data-block]')[0]
    if codeBlock
      if codeBlock.hasAttribute 'data-collapsed'
        codeBlock.removeAttribute 'data-collapsed'
        $(button).html '<i class="fa fa-caret-down" aria-hidden="true"></i>'
      else
        codeBlock.setAttribute 'data-collapsed', ''
        $(button).html '<i class="fa fa-caret-right" aria-hidden="true"></i>'
#+END_SRC

#+BEGIN_SRC css
[data-view="leisure-code/results-only"]:hover [name=codebar],
[data-view=leisure-code]:hover [name=codebar] {
  display: initial;
}
[name=codebar] {
  display: none;
  padding-left: 1em;
  position: absolute;
  top: 0;
  left: 0;
}
[name=codeCollapse] {
  position: absolute;
  top: 1em;
  left: 0;
}
[name=codeCollapse] i {
  width: 1em;
  color: black;
  font-size: 24;
}
[data-block=code][data-collapsed] .code-text,
[data-block=code][data-collapsed] .code-results,
[data-block=headline][data-collapsed] .maincontent > *:last-child {
  display: none;
}
[data-block=headline][data-collapsed] .maincontent > [data-org-type=text] .maintext > *:first-child::before {
  /*content: " \f0da";*/
}
#codeMenu {
  display: inline-block;
  position: absolute;
}
@keyframes border-pulse {
  0% {
    border-color: #888;
  }
  50% {
    border-color: black;
  }
  100% {
    border-color: #888;
  }
}
[data-widget-holder], [data-code-button], [data-code-toggle-button], [data-widget-border] {
/*[data-widget-holder], [data-widget-border] {*/
  display: inline-block;
  position: absolute;
}
[data-widget-holder] {
  width: 1em;
  height: 1em;
  top: 0;
  left: 0;
  overflow: hidden;
}
[data-code-button] {
  -webkit-appearance: none;
  bottom: 0;
  left: 0;
  width: 0;
  height: 0;
  background: transparent;
  overflow: hidden;
  padding: inherit;
  font-size: inherit;
  box-sizing: initial;
  /* these two border settings make an upper-left triangle */
  border-top: 100px solid rgba(255, 0, 0, 0.3);
  border-right: 100px solid transparent;
}
[data-code-button]:hover {
  width: calc(100% - 4px);
  height: calc(100% - 4px);
  border: solid rgb(60, 60, 60) 2px;
  animation: border-pulse 2s linear infinite;
  background: rgba(255, 0, 0, 0.3);
}
[data-widget-border] {
  bottom: 0;
  left: 0;
  border: solid rgb(60, 60, 60) 2px;
  border-bottom: none;
  border-right: none;
  width: calc(1em - 2px);
  height: calc(1em - 2px);
  transform: rotate(45deg);
  transform-origin: bottom left;
}
[data-code-toggle-button]:hover [data-widget-border],
[data-code-button]:hover [data-widget-border] {
  display: none;
}
#+END_SRC
