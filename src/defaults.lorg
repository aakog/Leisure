* These are Leisure's system views

Some of these have newlines in strange places.  This is because it's crucial that
no extra characters be inserted into the basic views in the wrong places.  So you
won't see linebreaks for readability in the HTML where you normally would.  Instead,
there are linebreaks inside of element tags or inside of templating code.

Here are the two special rules for these system views that don't apply to other views:

1. Don't change the order of Leisure content
2. Don't add or remove Leisure content (this includes newlines and spaces)

Anything else if fair game -- you can hide the content, you can add text
in as long as you mark it as data-noncontent, etc.

* Toolbar view

#+BEGIN_SRC html :defview leisure-toolbar
<label><input type='checkbox'></input>Fred</label>
<button name='search'>Search</button>
<span name='emacsConnector'><button name='connectToEmacs'>Emacs</button><span name="emacsPort">Port: <input type='text' value="1315"></span></span>
<button name='connectToSlave'>Connect to Slave</button>
<button name='connectToMaster'>Connect to Master</button>
Connections: <span name='connections'></span>
#+END_SRC

#+BEGIN_SRC cs :control leisure-toolbar
@initializeView = (view)->
  view.find('label')
    .button()
    .on 'click', (e)-> updateButton view, Leisure.showHide view[0]
  updateButton view, Leisure.editorForToolbar(view[0]).options.hiding
  view.find('[name="search"]').button().on 'click', (e)-> Leisure.openSearch e
  Leisure.configureP2P view.find('[name="connectToSlave"]'),
    view.find('[name="connectToMaster"]'),
    view.find('[name="connections"]')
  Leisure.configureEmacs view.find('[name="emacsConnector"]')

updateButton = (view, hiding)->
  view.find('label').button 'option', 'label', if hiding
    "<i class='fa fa-eye-slash'></i> Show/hide"
  else
    "<i class='fa fa-eye'></i> Show/hide"
#+END_SRC

#+NAME: toolbar-css
#+BEGIN_SRC css
[name='emacsConnector']:hover [name='emacsPort'] {
  display: inherit;
}
[name='emacsConnector'] [name='emacsPort'] {
  display: none;
}
[name='emacsConnector'] [name='emacsPort'] input {
  width: 4em;
}
#+END_SRC

* Block Views

#+BEGIN_SRC html :defview leisure-headline-plain
{{> leisure-source-toggle}}{{{renderPlain this}}}
#+END_SRC
#+BEGIN_SRC html :defview leisure-headline
<div id='{{id}}' class='fancy'
data-edit-mode='fancy'
data-block='headline'
data-headline='{{level}}'><span class='hidden'>{{stars}}</span><div class='maintext'>{{> leisure-source-toggle}}{{maintext}}{{
EOL}}</div>{{#each children}}{{{
render this
}}}{{/each}}</div>
#+END_SRC
#+BEGIN_SRC html :defview leisure-source-toggle
{{#if topLevel}}<button class='toggle_edit' contenteditable='false'><i class="fa fa-glass"></i></button> {{/if}}
#+END_SRC
#+BEGIN_SRC cs :control leisure-source-toggle
@initializeView = (view)->
  if (slide = view.closest('[data-headline]')).is('[data-headline="1"]') || (slide = view.parent().filter("[data-view='leisure-headline-plain']").find('[data-headline="1"]')).length
    view.find('button.toggle_edit').on 'click', -> Leisure.toggleSlideMode slide
#+END_SRC
#+BEGIN_SRC html :defview leisure-chunk
<span id='{{id}}' class='fancy' data-block='chunk'>{{{text}}}</span>
#+END_SRC
#+BEGIN_SRC html :defview leisure-code
<span
  id='{{id}}'
  class='fancy default-lang'
  data-block='code'
  contenteditable='false'
  data-org-type='source'
  data-shared='code'
  data-lang='{{language}}'
  >{{> leisure-code-name}}<div
    class='codeHeading'
    contenteditable='true'><span class='hidden'>{{sourceBoiler sourceOrg}}</span>{{sourceInfo sourceOrg}}</div><div
    class='code-text'
    data-org-src
    data-contain
    contenteditable='true'>{{{renderSource}}}</div><span
class='hidden'>{{footer}}</span>{{#if
inter}}<div>{{inter}}</div>{{/if}}{{#if
resultsContent}}<div
class='code-results' data-org-src>{{{resultsContent}}}</div>{{/if}}</span>
#+END_SRC
#+BEGIN_SRC html :defview leisure-code-name
{{#if nameBoiler
}}<span class='codename'><span class='hidden'>{{nameBoiler
}}</span><span data-noncontent>"</span><span
contenteditable='true'>{{nameText
}}</span><span data-noncontent>"</span><span class='hidden'>
{{afterName}}</span></span>{{/if}}
#+END_SRC
#+BEGIN_SRC html :defview leisure-code/js
<span
id='{{id}}'
class='fancy codeblock'
data-block='code'
contenteditable='false'
data-lang='{{language}}'><table><tr><td class='code-controls' data-noncontent>
CONTROLS
</td><td class='code-text'>{{{text}}}</td></tr></table></span>
#+END_SRC
#+BEGIN_SRC html :defview leisure-code-source/js
<span
class='source'
data-org-src='{{block.codeAttributes.results}}'
contenteditable='true'><span class='hidden'>{{sourceHeader}}</span>{{{renderSource}}}<span class='hidden'>{{sourceFooter}}</span></span>
#+END_SRC
#+BEGIN_SRC html :defview leisure-code-results/js
<span class='results coderesults'
data-org-results='{{block.codeAttributes.results}}'
data-org-type='results'
><span class='hidden'>{{resultsHeader this}}</span>{{{resultsContents this}}}</span>
#+END_SRC

#+NAME: block-css
#+BEGIN_SRC css
.view[data-view='leisure-headline'] {
  display: block;
}
.plain.view [data-block],
.plain.view [data-block] * {
  white-space: pre;
}
.view [data-block],
.view [data-block] * {
  white-space: pre-line;
}
.view [data-block] .code-text {
  white-space: pre;
}
.view [data-block] .maintext {
  white-space: normal;
}
span[data-block='code'].fancy {
  border: solid 3px black;
  margin: 2px;
  vertical-align: middle;
  position: relative;
  display: inline-block;
}
.code-controls {
  vertical-align: middle;
  background: lightgray;
}
.source {
  position: relative;
  display: block;
  border: solid 3px blue;
}
.results {
  display: block;
  border: solid 3px green;
}

/* patches for theme problems */
[data-org-src].code-results,
[data-org-src].code-text {
  height: auto;
}
.code-results {
  margin-top: 1em;
  margin-bottom: 1em;
}
#+END_SRC

* Search Views

#+BEGIN_SRC html :defview leisure-search
<div title='Search' data-noncontent>
  <div class='frame'>
    <input class='leisure-searchText' type='text'></input>
    <div class='leisure-searchOutputHolder'><div class='leisure-searchOutput'></div></div>
  </div>
</div>
#+END_SRC

#+BEGIN_SRC cs :control leisure-search
@initializeView = (view)->
  d = $(view).children()
    .dialog
      width: 400
      height: 600
      position: my: "right top", at: "right top", of: window
    .on 'dialogclose', ->
      $(this).dialog('destroy')
      $(this).remove()
    #.on 'dialogclose', -> console.log this
  Leisure.configureSearch d
#+END_SRC

#+NAME: search-css
#+BEGIN_SRC css
.leisure-searchText {
  width: 100%;
  height: 1.5em;
}
.leisure-searchOutput {
  width: 100%;
  height: calc(100% - 1.5em);
  /*background: white;*/
  color: black;
  overflow: auto;
}
#+END_SRC
